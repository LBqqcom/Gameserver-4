// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gameserver_msgheader.proto

#ifndef PROTOBUF_gameserver_5fmsgheader_2eproto__INCLUDED
#define PROTOBUF_gameserver_5fmsgheader_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace gameserver_proto {
class FriendItem;
class FriendItemDefaultTypeInternal;
extern FriendItemDefaultTypeInternal _FriendItem_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class MsgItem;
class MsgItemDefaultTypeInternal;
extern MsgItemDefaultTypeInternal _MsgItem_default_instance_;
class RecvChat;
class RecvChatDefaultTypeInternal;
extern RecvChatDefaultTypeInternal _RecvChat_default_instance_;
class RequestAddFriend;
class RequestAddFriendDefaultTypeInternal;
extern RequestAddFriendDefaultTypeInternal _RequestAddFriend_default_instance_;
class RequestFrineds;
class RequestFrinedsDefaultTypeInternal;
extern RequestFrinedsDefaultTypeInternal _RequestFrineds_default_instance_;
class RequestOfflineMsgs;
class RequestOfflineMsgsDefaultTypeInternal;
extern RequestOfflineMsgsDefaultTypeInternal _RequestOfflineMsgs_default_instance_;
class RequestRoleInfo;
class RequestRoleInfoDefaultTypeInternal;
extern RequestRoleInfoDefaultTypeInternal _RequestRoleInfo_default_instance_;
class ResponseAddFriend;
class ResponseAddFriendDefaultTypeInternal;
extern ResponseAddFriendDefaultTypeInternal _ResponseAddFriend_default_instance_;
class ResponseFriends;
class ResponseFriendsDefaultTypeInternal;
extern ResponseFriendsDefaultTypeInternal _ResponseFriends_default_instance_;
class ResponseOfflineMsgs;
class ResponseOfflineMsgsDefaultTypeInternal;
extern ResponseOfflineMsgsDefaultTypeInternal _ResponseOfflineMsgs_default_instance_;
class ResponseRoleInfo;
class ResponseRoleInfoDefaultTypeInternal;
extern ResponseRoleInfoDefaultTypeInternal _ResponseRoleInfo_default_instance_;
class SendChat;
class SendChatDefaultTypeInternal;
extern SendChatDefaultTypeInternal _SendChat_default_instance_;
}  // namespace gameserver_proto

namespace gameserver_proto {

namespace protobuf_gameserver_5fmsgheader_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_gameserver_5fmsgheader_2eproto

// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::int32 rid_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // int32 rid = 2;
  void clear_rid();
  static const int kRidFieldNumber = 2;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 rid_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestRoleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.RequestRoleInfo) */ {
 public:
  RequestRoleInfo();
  virtual ~RequestRoleInfo();

  RequestRoleInfo(const RequestRoleInfo& from);

  inline RequestRoleInfo& operator=(const RequestRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestRoleInfo& default_instance();

  static inline const RequestRoleInfo* internal_default_instance() {
    return reinterpret_cast<const RequestRoleInfo*>(
               &_RequestRoleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(RequestRoleInfo* other);

  // implements Message ----------------------------------------------

  inline RequestRoleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestRoleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestRoleInfo& from);
  void MergeFrom(const RequestRoleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestRoleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.RequestRoleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 rid_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseRoleInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.ResponseRoleInfo) */ {
 public:
  ResponseRoleInfo();
  virtual ~ResponseRoleInfo();

  ResponseRoleInfo(const ResponseRoleInfo& from);

  inline ResponseRoleInfo& operator=(const ResponseRoleInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseRoleInfo& default_instance();

  static inline const ResponseRoleInfo* internal_default_instance() {
    return reinterpret_cast<const ResponseRoleInfo*>(
               &_ResponseRoleInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ResponseRoleInfo* other);

  // implements Message ----------------------------------------------

  inline ResponseRoleInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseRoleInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseRoleInfo& from);
  void MergeFrom(const ResponseRoleInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseRoleInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // int32 reqrid = 2;
  void clear_reqrid();
  static const int kReqridFieldNumber = 2;
  ::google::protobuf::int32 reqrid() const;
  void set_reqrid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.ResponseRoleInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 reqrid_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.SendChat) */ {
 public:
  SendChat();
  virtual ~SendChat();

  SendChat(const SendChat& from);

  inline SendChat& operator=(const SendChat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendChat& default_instance();

  static inline const SendChat* internal_default_instance() {
    return reinterpret_cast<const SendChat*>(
               &_SendChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SendChat* other);

  // implements Message ----------------------------------------------

  inline SendChat* New() const PROTOBUF_FINAL { return New(NULL); }

  SendChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendChat& from);
  void MergeFrom(const SendChat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // int32 did = 2;
  void clear_did();
  static const int kDidFieldNumber = 2;
  ::google::protobuf::int32 did() const;
  void set_did(::google::protobuf::int32 value);

  // int32 msg_type = 3;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 3;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // int32 msg_size = 4;
  void clear_msg_size();
  static const int kMsgSizeFieldNumber = 4;
  ::google::protobuf::int32 msg_size() const;
  void set_msg_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.SendChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 did_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 msg_size_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RecvChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.RecvChat) */ {
 public:
  RecvChat();
  virtual ~RecvChat();

  RecvChat(const RecvChat& from);

  inline RecvChat& operator=(const RecvChat& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecvChat& default_instance();

  static inline const RecvChat* internal_default_instance() {
    return reinterpret_cast<const RecvChat*>(
               &_RecvChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(RecvChat* other);

  // implements Message ----------------------------------------------

  inline RecvChat* New() const PROTOBUF_FINAL { return New(NULL); }

  RecvChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RecvChat& from);
  void MergeFrom(const RecvChat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RecvChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sname = 7;
  void clear_sname();
  static const int kSnameFieldNumber = 7;
  const ::std::string& sname() const;
  void set_sname(const ::std::string& value);
  #if LANG_CXX11
  void set_sname(::std::string&& value);
  #endif
  void set_sname(const char* value);
  void set_sname(const char* value, size_t size);
  ::std::string* mutable_sname();
  ::std::string* release_sname();
  void set_allocated_sname(::std::string* sname);

  // string msg = 8;
  void clear_msg();
  static const int kMsgFieldNumber = 8;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // int32 sid = 2;
  void clear_sid();
  static const int kSidFieldNumber = 2;
  ::google::protobuf::int32 sid() const;
  void set_sid(::google::protobuf::int32 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 msg_type = 4;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // int32 tid = 5;
  void clear_tid();
  static const int kTidFieldNumber = 5;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // int32 msg_size = 6;
  void clear_msg_size();
  static const int kMsgSizeFieldNumber = 6;
  ::google::protobuf::int32 msg_size() const;
  void set_msg_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.RecvChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sname_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 sid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 msg_size_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MsgItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.MsgItem) */ {
 public:
  MsgItem();
  virtual ~MsgItem();

  MsgItem(const MsgItem& from);

  inline MsgItem& operator=(const MsgItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgItem& default_instance();

  static inline const MsgItem* internal_default_instance() {
    return reinterpret_cast<const MsgItem*>(
               &_MsgItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MsgItem* other);

  // implements Message ----------------------------------------------

  inline MsgItem* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgItem& from);
  void MergeFrom(const MsgItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string sname = 8;
  void clear_sname();
  static const int kSnameFieldNumber = 8;
  const ::std::string& sname() const;
  void set_sname(const ::std::string& value);
  #if LANG_CXX11
  void set_sname(::std::string&& value);
  #endif
  void set_sname(const char* value);
  void set_sname(const char* value, size_t size);
  ::std::string* mutable_sname();
  ::std::string* release_sname();
  void set_allocated_sname(::std::string* sname);

  // string msg = 9;
  void clear_msg();
  static const int kMsgFieldNumber = 9;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // int32 srid = 2;
  void clear_srid();
  static const int kSridFieldNumber = 2;
  ::google::protobuf::int32 srid() const;
  void set_srid(::google::protobuf::int32 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 msg_type = 4;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // int32 tid = 5;
  void clear_tid();
  static const int kTidFieldNumber = 5;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // int32 msg_size = 6;
  void clear_msg_size();
  static const int kMsgSizeFieldNumber = 6;
  ::google::protobuf::int32 msg_size() const;
  void set_msg_size(::google::protobuf::int32 value);

  // int32 stime = 7;
  void clear_stime();
  static const int kStimeFieldNumber = 7;
  ::google::protobuf::int32 stime() const;
  void set_stime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.MsgItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sname_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 srid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 msg_size_;
  ::google::protobuf::int32 stime_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FriendItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.FriendItem) */ {
 public:
  FriendItem();
  virtual ~FriendItem();

  FriendItem(const FriendItem& from);

  inline FriendItem& operator=(const FriendItem& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FriendItem& default_instance();

  static inline const FriendItem* internal_default_instance() {
    return reinterpret_cast<const FriendItem*>(
               &_FriendItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(FriendItem* other);

  // implements Message ----------------------------------------------

  inline FriendItem* New() const PROTOBUF_FINAL { return New(NULL); }

  FriendItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FriendItem& from);
  void MergeFrom(const FriendItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FriendItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 4;
  void clear_username();
  static const int kUsernameFieldNumber = 4;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // int32 rid = 1;
  void clear_rid();
  static const int kRidFieldNumber = 1;
  ::google::protobuf::int32 rid() const;
  void set_rid(::google::protobuf::int32 value);

  // int32 status = 2;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // int32 timeline = 3;
  void clear_timeline();
  static const int kTimelineFieldNumber = 3;
  ::google::protobuf::int32 timeline() const;
  void set_timeline(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.FriendItem)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::int32 rid_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 timeline_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestFrineds : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.RequestFrineds) */ {
 public:
  RequestFrineds();
  virtual ~RequestFrineds();

  RequestFrineds(const RequestFrineds& from);

  inline RequestFrineds& operator=(const RequestFrineds& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestFrineds& default_instance();

  static inline const RequestFrineds* internal_default_instance() {
    return reinterpret_cast<const RequestFrineds*>(
               &_RequestFrineds_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(RequestFrineds* other);

  // implements Message ----------------------------------------------

  inline RequestFrineds* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestFrineds* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestFrineds& from);
  void MergeFrom(const RequestFrineds& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestFrineds* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.RequestFrineds)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseFriends : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.ResponseFriends) */ {
 public:
  ResponseFriends();
  virtual ~ResponseFriends();

  ResponseFriends(const ResponseFriends& from);

  inline ResponseFriends& operator=(const ResponseFriends& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseFriends& default_instance();

  static inline const ResponseFriends* internal_default_instance() {
    return reinterpret_cast<const ResponseFriends*>(
               &_ResponseFriends_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(ResponseFriends* other);

  // implements Message ----------------------------------------------

  inline ResponseFriends* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseFriends* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseFriends& from);
  void MergeFrom(const ResponseFriends& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseFriends* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gameserver_proto.FriendItem friends = 1;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 1;
  const ::gameserver_proto::FriendItem& friends(int index) const;
  ::gameserver_proto::FriendItem* mutable_friends(int index);
  ::gameserver_proto::FriendItem* add_friends();
  ::google::protobuf::RepeatedPtrField< ::gameserver_proto::FriendItem >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::gameserver_proto::FriendItem >&
      friends() const;

  // @@protoc_insertion_point(class_scope:gameserver_proto.ResponseFriends)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::gameserver_proto::FriendItem > friends_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestAddFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.RequestAddFriend) */ {
 public:
  RequestAddFriend();
  virtual ~RequestAddFriend();

  RequestAddFriend(const RequestAddFriend& from);

  inline RequestAddFriend& operator=(const RequestAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestAddFriend& default_instance();

  static inline const RequestAddFriend* internal_default_instance() {
    return reinterpret_cast<const RequestAddFriend*>(
               &_RequestAddFriend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(RequestAddFriend* other);

  // implements Message ----------------------------------------------

  inline RequestAddFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestAddFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestAddFriend& from);
  void MergeFrom(const RequestAddFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestAddFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 arid = 1;
  void clear_arid();
  static const int kAridFieldNumber = 1;
  ::google::protobuf::int32 arid() const;
  void set_arid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.RequestAddFriend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 arid_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseAddFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.ResponseAddFriend) */ {
 public:
  ResponseAddFriend();
  virtual ~ResponseAddFriend();

  ResponseAddFriend(const ResponseAddFriend& from);

  inline ResponseAddFriend& operator=(const ResponseAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseAddFriend& default_instance();

  static inline const ResponseAddFriend* internal_default_instance() {
    return reinterpret_cast<const ResponseAddFriend*>(
               &_ResponseAddFriend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(ResponseAddFriend* other);

  // implements Message ----------------------------------------------

  inline ResponseAddFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseAddFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseAddFriend& from);
  void MergeFrom(const ResponseAddFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseAddFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gameserver_proto.FriendItem friend = 2;
  bool has_friend_() const;
  void clear_friend_();
  static const int kFriendFieldNumber = 2;
  const ::gameserver_proto::FriendItem& friend_() const;
  ::gameserver_proto::FriendItem* mutable_friend_();
  ::gameserver_proto::FriendItem* release_friend_();
  void set_allocated_friend_(::gameserver_proto::FriendItem* friend_);

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.ResponseAddFriend)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::gameserver_proto::FriendItem* friend__;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RequestOfflineMsgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.RequestOfflineMsgs) */ {
 public:
  RequestOfflineMsgs();
  virtual ~RequestOfflineMsgs();

  RequestOfflineMsgs(const RequestOfflineMsgs& from);

  inline RequestOfflineMsgs& operator=(const RequestOfflineMsgs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestOfflineMsgs& default_instance();

  static inline const RequestOfflineMsgs* internal_default_instance() {
    return reinterpret_cast<const RequestOfflineMsgs*>(
               &_RequestOfflineMsgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(RequestOfflineMsgs* other);

  // implements Message ----------------------------------------------

  inline RequestOfflineMsgs* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestOfflineMsgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestOfflineMsgs& from);
  void MergeFrom(const RequestOfflineMsgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestOfflineMsgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 rrid = 2;
  void clear_rrid();
  static const int kRridFieldNumber = 2;
  ::google::protobuf::int32 rrid() const;
  void set_rrid(::google::protobuf::int32 value);

  // int32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.RequestOfflineMsgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 rrid_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResponseOfflineMsgs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gameserver_proto.ResponseOfflineMsgs) */ {
 public:
  ResponseOfflineMsgs();
  virtual ~ResponseOfflineMsgs();

  ResponseOfflineMsgs(const ResponseOfflineMsgs& from);

  inline ResponseOfflineMsgs& operator=(const ResponseOfflineMsgs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseOfflineMsgs& default_instance();

  static inline const ResponseOfflineMsgs* internal_default_instance() {
    return reinterpret_cast<const ResponseOfflineMsgs*>(
               &_ResponseOfflineMsgs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(ResponseOfflineMsgs* other);

  // implements Message ----------------------------------------------

  inline ResponseOfflineMsgs* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseOfflineMsgs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseOfflineMsgs& from);
  void MergeFrom(const ResponseOfflineMsgs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseOfflineMsgs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gameserver_proto.MsgItem msgs = 2;
  int msgs_size() const;
  void clear_msgs();
  static const int kMsgsFieldNumber = 2;
  const ::gameserver_proto::MsgItem& msgs(int index) const;
  ::gameserver_proto::MsgItem* mutable_msgs(int index);
  ::gameserver_proto::MsgItem* add_msgs();
  ::google::protobuf::RepeatedPtrField< ::gameserver_proto::MsgItem >*
      mutable_msgs();
  const ::google::protobuf::RepeatedPtrField< ::gameserver_proto::MsgItem >&
      msgs() const;

  // int32 count = 1;
  void clear_count();
  static const int kCountFieldNumber = 1;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:gameserver_proto.ResponseOfflineMsgs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::gameserver_proto::MsgItem > msgs_;
  ::google::protobuf::int32 count_;
  mutable int _cached_size_;
  friend struct protobuf_gameserver_5fmsgheader_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// int32 rid = 1;
inline void LoginRequest::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 LoginRequest::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.LoginRequest.rid)
  return rid_;
}
inline void LoginRequest::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.LoginRequest.rid)
}

// string key = 2;
inline void LoginRequest::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::key() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.LoginRequest.key)
  return key_.GetNoArena();
}
inline void LoginRequest::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.LoginRequest.key)
}
#if LANG_CXX11
inline void LoginRequest::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.LoginRequest.key)
}
#endif
inline void LoginRequest::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.LoginRequest.key)
}
inline void LoginRequest::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.LoginRequest.key)
}
inline ::std::string* LoginRequest::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.LoginRequest.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_key() {
  // @@protoc_insertion_point(field_release:gameserver_proto.LoginRequest.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.LoginRequest.key)
}

// -------------------------------------------------------------------

// LoginResponse

// int32 status = 1;
inline void LoginResponse::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 LoginResponse::status() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.LoginResponse.status)
  return status_;
}
inline void LoginResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.LoginResponse.status)
}

// int32 rid = 2;
inline void LoginResponse::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 LoginResponse::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.LoginResponse.rid)
  return rid_;
}
inline void LoginResponse::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.LoginResponse.rid)
}

// string msg = 3;
inline void LoginResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::msg() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.LoginResponse.msg)
  return msg_.GetNoArena();
}
inline void LoginResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.LoginResponse.msg)
}
#if LANG_CXX11
inline void LoginResponse::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.LoginResponse.msg)
}
#endif
inline void LoginResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.LoginResponse.msg)
}
inline void LoginResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.LoginResponse.msg)
}
inline ::std::string* LoginResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.LoginResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_msg() {
  // @@protoc_insertion_point(field_release:gameserver_proto.LoginResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.LoginResponse.msg)
}

// -------------------------------------------------------------------

// RequestRoleInfo

// int32 rid = 1;
inline void RequestRoleInfo::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 RequestRoleInfo::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RequestRoleInfo.rid)
  return rid_;
}
inline void RequestRoleInfo::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RequestRoleInfo.rid)
}

// -------------------------------------------------------------------

// ResponseRoleInfo

// int32 rid = 1;
inline void ResponseRoleInfo::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 ResponseRoleInfo::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseRoleInfo.rid)
  return rid_;
}
inline void ResponseRoleInfo::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.ResponseRoleInfo.rid)
}

// int32 reqrid = 2;
inline void ResponseRoleInfo::clear_reqrid() {
  reqrid_ = 0;
}
inline ::google::protobuf::int32 ResponseRoleInfo::reqrid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseRoleInfo.reqrid)
  return reqrid_;
}
inline void ResponseRoleInfo::set_reqrid(::google::protobuf::int32 value) {
  
  reqrid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.ResponseRoleInfo.reqrid)
}

// -------------------------------------------------------------------

// SendChat

// int32 rid = 1;
inline void SendChat::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 SendChat::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.SendChat.rid)
  return rid_;
}
inline void SendChat::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.SendChat.rid)
}

// int32 did = 2;
inline void SendChat::clear_did() {
  did_ = 0;
}
inline ::google::protobuf::int32 SendChat::did() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.SendChat.did)
  return did_;
}
inline void SendChat::set_did(::google::protobuf::int32 value) {
  
  did_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.SendChat.did)
}

// int32 msg_type = 3;
inline void SendChat::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 SendChat::msg_type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.SendChat.msg_type)
  return msg_type_;
}
inline void SendChat::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.SendChat.msg_type)
}

// int32 msg_size = 4;
inline void SendChat::clear_msg_size() {
  msg_size_ = 0;
}
inline ::google::protobuf::int32 SendChat::msg_size() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.SendChat.msg_size)
  return msg_size_;
}
inline void SendChat::set_msg_size(::google::protobuf::int32 value) {
  
  msg_size_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.SendChat.msg_size)
}

// string msg = 5;
inline void SendChat::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendChat::msg() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.SendChat.msg)
  return msg_.GetNoArena();
}
inline void SendChat::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.SendChat.msg)
}
#if LANG_CXX11
inline void SendChat::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.SendChat.msg)
}
#endif
inline void SendChat::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.SendChat.msg)
}
inline void SendChat::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.SendChat.msg)
}
inline ::std::string* SendChat::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.SendChat.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendChat::release_msg() {
  // @@protoc_insertion_point(field_release:gameserver_proto.SendChat.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendChat::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.SendChat.msg)
}

// -------------------------------------------------------------------

// RecvChat

// int32 rid = 1;
inline void RecvChat::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 RecvChat::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.rid)
  return rid_;
}
inline void RecvChat::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.rid)
}

// int32 sid = 2;
inline void RecvChat::clear_sid() {
  sid_ = 0;
}
inline ::google::protobuf::int32 RecvChat::sid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.sid)
  return sid_;
}
inline void RecvChat::set_sid(::google::protobuf::int32 value) {
  
  sid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.sid)
}

// int32 type = 3;
inline void RecvChat::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 RecvChat::type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.type)
  return type_;
}
inline void RecvChat::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.type)
}

// int32 msg_type = 4;
inline void RecvChat::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 RecvChat::msg_type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.msg_type)
  return msg_type_;
}
inline void RecvChat::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.msg_type)
}

// int32 tid = 5;
inline void RecvChat::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 RecvChat::tid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.tid)
  return tid_;
}
inline void RecvChat::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.tid)
}

// int32 msg_size = 6;
inline void RecvChat::clear_msg_size() {
  msg_size_ = 0;
}
inline ::google::protobuf::int32 RecvChat::msg_size() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.msg_size)
  return msg_size_;
}
inline void RecvChat::set_msg_size(::google::protobuf::int32 value) {
  
  msg_size_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.msg_size)
}

// string sname = 7;
inline void RecvChat::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecvChat::sname() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.sname)
  return sname_.GetNoArena();
}
inline void RecvChat::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.sname)
}
#if LANG_CXX11
inline void RecvChat::set_sname(::std::string&& value) {
  
  sname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.RecvChat.sname)
}
#endif
inline void RecvChat::set_sname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.RecvChat.sname)
}
inline void RecvChat::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.RecvChat.sname)
}
inline ::std::string* RecvChat::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.RecvChat.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvChat::release_sname() {
  // @@protoc_insertion_point(field_release:gameserver_proto.RecvChat.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvChat::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.RecvChat.sname)
}

// string msg = 8;
inline void RecvChat::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RecvChat::msg() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RecvChat.msg)
  return msg_.GetNoArena();
}
inline void RecvChat::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.RecvChat.msg)
}
#if LANG_CXX11
inline void RecvChat::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.RecvChat.msg)
}
#endif
inline void RecvChat::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.RecvChat.msg)
}
inline void RecvChat::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.RecvChat.msg)
}
inline ::std::string* RecvChat::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.RecvChat.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RecvChat::release_msg() {
  // @@protoc_insertion_point(field_release:gameserver_proto.RecvChat.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RecvChat::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.RecvChat.msg)
}

// -------------------------------------------------------------------

// MsgItem

// int32 rid = 1;
inline void MsgItem::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 MsgItem::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.rid)
  return rid_;
}
inline void MsgItem::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.rid)
}

// int32 srid = 2;
inline void MsgItem::clear_srid() {
  srid_ = 0;
}
inline ::google::protobuf::int32 MsgItem::srid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.srid)
  return srid_;
}
inline void MsgItem::set_srid(::google::protobuf::int32 value) {
  
  srid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.srid)
}

// int32 type = 3;
inline void MsgItem::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 MsgItem::type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.type)
  return type_;
}
inline void MsgItem::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.type)
}

// int32 msg_type = 4;
inline void MsgItem::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 MsgItem::msg_type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.msg_type)
  return msg_type_;
}
inline void MsgItem::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.msg_type)
}

// int32 tid = 5;
inline void MsgItem::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 MsgItem::tid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.tid)
  return tid_;
}
inline void MsgItem::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.tid)
}

// int32 msg_size = 6;
inline void MsgItem::clear_msg_size() {
  msg_size_ = 0;
}
inline ::google::protobuf::int32 MsgItem::msg_size() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.msg_size)
  return msg_size_;
}
inline void MsgItem::set_msg_size(::google::protobuf::int32 value) {
  
  msg_size_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.msg_size)
}

// int32 stime = 7;
inline void MsgItem::clear_stime() {
  stime_ = 0;
}
inline ::google::protobuf::int32 MsgItem::stime() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.stime)
  return stime_;
}
inline void MsgItem::set_stime(::google::protobuf::int32 value) {
  
  stime_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.stime)
}

// string sname = 8;
inline void MsgItem::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgItem::sname() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.sname)
  return sname_.GetNoArena();
}
inline void MsgItem::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.sname)
}
#if LANG_CXX11
inline void MsgItem::set_sname(::std::string&& value) {
  
  sname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.MsgItem.sname)
}
#endif
inline void MsgItem::set_sname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.MsgItem.sname)
}
inline void MsgItem::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.MsgItem.sname)
}
inline ::std::string* MsgItem::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.MsgItem.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgItem::release_sname() {
  // @@protoc_insertion_point(field_release:gameserver_proto.MsgItem.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgItem::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.MsgItem.sname)
}

// string msg = 9;
inline void MsgItem::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgItem::msg() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.MsgItem.msg)
  return msg_.GetNoArena();
}
inline void MsgItem::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.MsgItem.msg)
}
#if LANG_CXX11
inline void MsgItem::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.MsgItem.msg)
}
#endif
inline void MsgItem::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.MsgItem.msg)
}
inline void MsgItem::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.MsgItem.msg)
}
inline ::std::string* MsgItem::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.MsgItem.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgItem::release_msg() {
  // @@protoc_insertion_point(field_release:gameserver_proto.MsgItem.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgItem::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.MsgItem.msg)
}

// -------------------------------------------------------------------

// FriendItem

// int32 rid = 1;
inline void FriendItem::clear_rid() {
  rid_ = 0;
}
inline ::google::protobuf::int32 FriendItem::rid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.FriendItem.rid)
  return rid_;
}
inline void FriendItem::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.FriendItem.rid)
}

// int32 status = 2;
inline void FriendItem::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 FriendItem::status() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.FriendItem.status)
  return status_;
}
inline void FriendItem::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.FriendItem.status)
}

// int32 timeline = 3;
inline void FriendItem::clear_timeline() {
  timeline_ = 0;
}
inline ::google::protobuf::int32 FriendItem::timeline() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.FriendItem.timeline)
  return timeline_;
}
inline void FriendItem::set_timeline(::google::protobuf::int32 value) {
  
  timeline_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.FriendItem.timeline)
}

// string username = 4;
inline void FriendItem::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FriendItem::username() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.FriendItem.username)
  return username_.GetNoArena();
}
inline void FriendItem::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gameserver_proto.FriendItem.username)
}
#if LANG_CXX11
inline void FriendItem::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gameserver_proto.FriendItem.username)
}
#endif
inline void FriendItem::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gameserver_proto.FriendItem.username)
}
inline void FriendItem::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gameserver_proto.FriendItem.username)
}
inline ::std::string* FriendItem::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:gameserver_proto.FriendItem.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FriendItem::release_username() {
  // @@protoc_insertion_point(field_release:gameserver_proto.FriendItem.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FriendItem::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.FriendItem.username)
}

// -------------------------------------------------------------------

// RequestFrineds

// int32 type = 1;
inline void RequestFrineds::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 RequestFrineds::type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RequestFrineds.type)
  return type_;
}
inline void RequestFrineds::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RequestFrineds.type)
}

// -------------------------------------------------------------------

// ResponseFriends

// repeated .gameserver_proto.FriendItem friends = 1;
inline int ResponseFriends::friends_size() const {
  return friends_.size();
}
inline void ResponseFriends::clear_friends() {
  friends_.Clear();
}
inline const ::gameserver_proto::FriendItem& ResponseFriends::friends(int index) const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseFriends.friends)
  return friends_.Get(index);
}
inline ::gameserver_proto::FriendItem* ResponseFriends::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:gameserver_proto.ResponseFriends.friends)
  return friends_.Mutable(index);
}
inline ::gameserver_proto::FriendItem* ResponseFriends::add_friends() {
  // @@protoc_insertion_point(field_add:gameserver_proto.ResponseFriends.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gameserver_proto::FriendItem >*
ResponseFriends::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:gameserver_proto.ResponseFriends.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gameserver_proto::FriendItem >&
ResponseFriends::friends() const {
  // @@protoc_insertion_point(field_list:gameserver_proto.ResponseFriends.friends)
  return friends_;
}

// -------------------------------------------------------------------

// RequestAddFriend

// int32 arid = 1;
inline void RequestAddFriend::clear_arid() {
  arid_ = 0;
}
inline ::google::protobuf::int32 RequestAddFriend::arid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RequestAddFriend.arid)
  return arid_;
}
inline void RequestAddFriend::set_arid(::google::protobuf::int32 value) {
  
  arid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RequestAddFriend.arid)
}

// -------------------------------------------------------------------

// ResponseAddFriend

// int32 status = 1;
inline void ResponseAddFriend::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 ResponseAddFriend::status() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseAddFriend.status)
  return status_;
}
inline void ResponseAddFriend::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.ResponseAddFriend.status)
}

// .gameserver_proto.FriendItem friend = 2;
inline bool ResponseAddFriend::has_friend_() const {
  return this != internal_default_instance() && friend__ != NULL;
}
inline void ResponseAddFriend::clear_friend_() {
  if (GetArenaNoVirtual() == NULL && friend__ != NULL) delete friend__;
  friend__ = NULL;
}
inline const ::gameserver_proto::FriendItem& ResponseAddFriend::friend_() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseAddFriend.friend)
  return friend__ != NULL ? *friend__
                         : *::gameserver_proto::FriendItem::internal_default_instance();
}
inline ::gameserver_proto::FriendItem* ResponseAddFriend::mutable_friend_() {
  
  if (friend__ == NULL) {
    friend__ = new ::gameserver_proto::FriendItem;
  }
  // @@protoc_insertion_point(field_mutable:gameserver_proto.ResponseAddFriend.friend)
  return friend__;
}
inline ::gameserver_proto::FriendItem* ResponseAddFriend::release_friend_() {
  // @@protoc_insertion_point(field_release:gameserver_proto.ResponseAddFriend.friend)
  
  ::gameserver_proto::FriendItem* temp = friend__;
  friend__ = NULL;
  return temp;
}
inline void ResponseAddFriend::set_allocated_friend_(::gameserver_proto::FriendItem* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gameserver_proto.ResponseAddFriend.friend)
}

// -------------------------------------------------------------------

// RequestOfflineMsgs

// int32 type = 1;
inline void RequestOfflineMsgs::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 RequestOfflineMsgs::type() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RequestOfflineMsgs.type)
  return type_;
}
inline void RequestOfflineMsgs::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RequestOfflineMsgs.type)
}

// int32 rrid = 2;
inline void RequestOfflineMsgs::clear_rrid() {
  rrid_ = 0;
}
inline ::google::protobuf::int32 RequestOfflineMsgs::rrid() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RequestOfflineMsgs.rrid)
  return rrid_;
}
inline void RequestOfflineMsgs::set_rrid(::google::protobuf::int32 value) {
  
  rrid_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RequestOfflineMsgs.rrid)
}

// int32 count = 3;
inline void RequestOfflineMsgs::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 RequestOfflineMsgs::count() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.RequestOfflineMsgs.count)
  return count_;
}
inline void RequestOfflineMsgs::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.RequestOfflineMsgs.count)
}

// -------------------------------------------------------------------

// ResponseOfflineMsgs

// int32 count = 1;
inline void ResponseOfflineMsgs::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 ResponseOfflineMsgs::count() const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseOfflineMsgs.count)
  return count_;
}
inline void ResponseOfflineMsgs::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:gameserver_proto.ResponseOfflineMsgs.count)
}

// repeated .gameserver_proto.MsgItem msgs = 2;
inline int ResponseOfflineMsgs::msgs_size() const {
  return msgs_.size();
}
inline void ResponseOfflineMsgs::clear_msgs() {
  msgs_.Clear();
}
inline const ::gameserver_proto::MsgItem& ResponseOfflineMsgs::msgs(int index) const {
  // @@protoc_insertion_point(field_get:gameserver_proto.ResponseOfflineMsgs.msgs)
  return msgs_.Get(index);
}
inline ::gameserver_proto::MsgItem* ResponseOfflineMsgs::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:gameserver_proto.ResponseOfflineMsgs.msgs)
  return msgs_.Mutable(index);
}
inline ::gameserver_proto::MsgItem* ResponseOfflineMsgs::add_msgs() {
  // @@protoc_insertion_point(field_add:gameserver_proto.ResponseOfflineMsgs.msgs)
  return msgs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gameserver_proto::MsgItem >*
ResponseOfflineMsgs::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:gameserver_proto.ResponseOfflineMsgs.msgs)
  return &msgs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gameserver_proto::MsgItem >&
ResponseOfflineMsgs::msgs() const {
  // @@protoc_insertion_point(field_list:gameserver_proto.ResponseOfflineMsgs.msgs)
  return msgs_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace gameserver_proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_gameserver_5fmsgheader_2eproto__INCLUDED
