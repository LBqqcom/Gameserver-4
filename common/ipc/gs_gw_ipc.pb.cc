// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gs_gw_ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gs_gw_ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace inner_ipc {
class EnterGameIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterGameIPC> {
} _EnterGameIPC_default_instance_;
class ExitGameIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExitGameIPC> {
} _ExitGameIPC_default_instance_;
class DisconnectIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DisconnectIPC> {
} _DisconnectIPC_default_instance_;
class ReConnectIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReConnectIPC> {
} _ReConnectIPC_default_instance_;
class RequestRolesIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RequestRolesIPC> {
} _RequestRolesIPC_default_instance_;

namespace protobuf_gs_5fgw_5fipc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterGameIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterGameIPC, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitGameIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitGameIPC, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DisconnectIPC, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReConnectIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReConnectIPC, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRolesIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestRolesIPC, ipc_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(EnterGameIPC)},
  { 6, -1, sizeof(ExitGameIPC)},
  { 12, -1, sizeof(DisconnectIPC)},
  { 18, -1, sizeof(ReConnectIPC)},
  { 24, -1, sizeof(RequestRolesIPC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterGameIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitGameIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DisconnectIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReConnectIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RequestRolesIPC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gs_gw_ipc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _EnterGameIPC_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ExitGameIPC_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DisconnectIPC_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ReConnectIPC_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RequestRolesIPC_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _EnterGameIPC_default_instance_.DefaultConstruct();
  _ExitGameIPC_default_instance_.DefaultConstruct();
  _DisconnectIPC_default_instance_.DefaultConstruct();
  _ReConnectIPC_default_instance_.DefaultConstruct();
  _RequestRolesIPC_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017gs_gw_ipc.proto\022\tinner_ipc\"\033\n\014EnterGam"
      "eIPC\022\013\n\003rid\030\001 \001(\005\"\032\n\013ExitGameIPC\022\013\n\003rid\030"
      "\001 \001(\005\"\034\n\rDisconnectIPC\022\013\n\003rid\030\001 \001(\005\"\033\n\014R"
      "eConnectIPC\022\013\n\003rid\030\001 \001(\005\"7\n\017RequestRoles"
      "IPC\022$\n\003ipc\030\001 \003(\0132\027.inner_ipc.ReConnectIP"
      "Cb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 209);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gs_gw_ipc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gs_5fgw_5fipc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterGameIPC::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterGameIPC::EnterGameIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.EnterGameIPC)
}
EnterGameIPC::EnterGameIPC(const EnterGameIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.EnterGameIPC)
}

void EnterGameIPC::SharedCtor() {
  rid_ = 0;
  _cached_size_ = 0;
}

EnterGameIPC::~EnterGameIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.EnterGameIPC)
  SharedDtor();
}

void EnterGameIPC::SharedDtor() {
}

void EnterGameIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterGameIPC::descriptor() {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnterGameIPC& EnterGameIPC::default_instance() {
  protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterGameIPC* EnterGameIPC::New(::google::protobuf::Arena* arena) const {
  EnterGameIPC* n = new EnterGameIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterGameIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.EnterGameIPC)
  rid_ = 0;
}

bool EnterGameIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.EnterGameIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.EnterGameIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.EnterGameIPC)
  return false;
#undef DO_
}

void EnterGameIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.EnterGameIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.EnterGameIPC)
}

::google::protobuf::uint8* EnterGameIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.EnterGameIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.EnterGameIPC)
  return target;
}

size_t EnterGameIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.EnterGameIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterGameIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.EnterGameIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterGameIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterGameIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.EnterGameIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.EnterGameIPC)
    MergeFrom(*source);
  }
}

void EnterGameIPC::MergeFrom(const EnterGameIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.EnterGameIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void EnterGameIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.EnterGameIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterGameIPC::CopyFrom(const EnterGameIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.EnterGameIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterGameIPC::IsInitialized() const {
  return true;
}

void EnterGameIPC::Swap(EnterGameIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterGameIPC::InternalSwap(EnterGameIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterGameIPC::GetMetadata() const {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterGameIPC

// int32 rid = 1;
void EnterGameIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 EnterGameIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EnterGameIPC.rid)
  return rid_;
}
void EnterGameIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.EnterGameIPC.rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitGameIPC::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitGameIPC::ExitGameIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ExitGameIPC)
}
ExitGameIPC::ExitGameIPC(const ExitGameIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ExitGameIPC)
}

void ExitGameIPC::SharedCtor() {
  rid_ = 0;
  _cached_size_ = 0;
}

ExitGameIPC::~ExitGameIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ExitGameIPC)
  SharedDtor();
}

void ExitGameIPC::SharedDtor() {
}

void ExitGameIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitGameIPC::descriptor() {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitGameIPC& ExitGameIPC::default_instance() {
  protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitGameIPC* ExitGameIPC::New(::google::protobuf::Arena* arena) const {
  ExitGameIPC* n = new ExitGameIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitGameIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ExitGameIPC)
  rid_ = 0;
}

bool ExitGameIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ExitGameIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ExitGameIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ExitGameIPC)
  return false;
#undef DO_
}

void ExitGameIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ExitGameIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ExitGameIPC)
}

::google::protobuf::uint8* ExitGameIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ExitGameIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ExitGameIPC)
  return target;
}

size_t ExitGameIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ExitGameIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitGameIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ExitGameIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitGameIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitGameIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ExitGameIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ExitGameIPC)
    MergeFrom(*source);
  }
}

void ExitGameIPC::MergeFrom(const ExitGameIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ExitGameIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void ExitGameIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ExitGameIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitGameIPC::CopyFrom(const ExitGameIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ExitGameIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitGameIPC::IsInitialized() const {
  return true;
}

void ExitGameIPC::Swap(ExitGameIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitGameIPC::InternalSwap(ExitGameIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitGameIPC::GetMetadata() const {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitGameIPC

// int32 rid = 1;
void ExitGameIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ExitGameIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ExitGameIPC.rid)
  return rid_;
}
void ExitGameIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ExitGameIPC.rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DisconnectIPC::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DisconnectIPC::DisconnectIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.DisconnectIPC)
}
DisconnectIPC::DisconnectIPC(const DisconnectIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.DisconnectIPC)
}

void DisconnectIPC::SharedCtor() {
  rid_ = 0;
  _cached_size_ = 0;
}

DisconnectIPC::~DisconnectIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.DisconnectIPC)
  SharedDtor();
}

void DisconnectIPC::SharedDtor() {
}

void DisconnectIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DisconnectIPC::descriptor() {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DisconnectIPC& DisconnectIPC::default_instance() {
  protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

DisconnectIPC* DisconnectIPC::New(::google::protobuf::Arena* arena) const {
  DisconnectIPC* n = new DisconnectIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DisconnectIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.DisconnectIPC)
  rid_ = 0;
}

bool DisconnectIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.DisconnectIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.DisconnectIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.DisconnectIPC)
  return false;
#undef DO_
}

void DisconnectIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.DisconnectIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.DisconnectIPC)
}

::google::protobuf::uint8* DisconnectIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.DisconnectIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.DisconnectIPC)
  return target;
}

size_t DisconnectIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.DisconnectIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DisconnectIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.DisconnectIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const DisconnectIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DisconnectIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.DisconnectIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.DisconnectIPC)
    MergeFrom(*source);
  }
}

void DisconnectIPC::MergeFrom(const DisconnectIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.DisconnectIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void DisconnectIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.DisconnectIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DisconnectIPC::CopyFrom(const DisconnectIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.DisconnectIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DisconnectIPC::IsInitialized() const {
  return true;
}

void DisconnectIPC::Swap(DisconnectIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DisconnectIPC::InternalSwap(DisconnectIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DisconnectIPC::GetMetadata() const {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DisconnectIPC

// int32 rid = 1;
void DisconnectIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 DisconnectIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.DisconnectIPC.rid)
  return rid_;
}
void DisconnectIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.DisconnectIPC.rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReConnectIPC::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReConnectIPC::ReConnectIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ReConnectIPC)
}
ReConnectIPC::ReConnectIPC(const ReConnectIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ReConnectIPC)
}

void ReConnectIPC::SharedCtor() {
  rid_ = 0;
  _cached_size_ = 0;
}

ReConnectIPC::~ReConnectIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ReConnectIPC)
  SharedDtor();
}

void ReConnectIPC::SharedDtor() {
}

void ReConnectIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReConnectIPC::descriptor() {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReConnectIPC& ReConnectIPC::default_instance() {
  protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReConnectIPC* ReConnectIPC::New(::google::protobuf::Arena* arena) const {
  ReConnectIPC* n = new ReConnectIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReConnectIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ReConnectIPC)
  rid_ = 0;
}

bool ReConnectIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ReConnectIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ReConnectIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ReConnectIPC)
  return false;
#undef DO_
}

void ReConnectIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ReConnectIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ReConnectIPC)
}

::google::protobuf::uint8* ReConnectIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ReConnectIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ReConnectIPC)
  return target;
}

size_t ReConnectIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ReConnectIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReConnectIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ReConnectIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ReConnectIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReConnectIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ReConnectIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ReConnectIPC)
    MergeFrom(*source);
  }
}

void ReConnectIPC::MergeFrom(const ReConnectIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ReConnectIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void ReConnectIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ReConnectIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReConnectIPC::CopyFrom(const ReConnectIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ReConnectIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReConnectIPC::IsInitialized() const {
  return true;
}

void ReConnectIPC::Swap(ReConnectIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReConnectIPC::InternalSwap(ReConnectIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReConnectIPC::GetMetadata() const {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReConnectIPC

// int32 rid = 1;
void ReConnectIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ReConnectIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReConnectIPC.rid)
  return rid_;
}
void ReConnectIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReConnectIPC.rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestRolesIPC::kIpcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestRolesIPC::RequestRolesIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.RequestRolesIPC)
}
RequestRolesIPC::RequestRolesIPC(const RequestRolesIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ipc_(from.ipc_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:inner_ipc.RequestRolesIPC)
}

void RequestRolesIPC::SharedCtor() {
  _cached_size_ = 0;
}

RequestRolesIPC::~RequestRolesIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.RequestRolesIPC)
  SharedDtor();
}

void RequestRolesIPC::SharedDtor() {
}

void RequestRolesIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestRolesIPC::descriptor() {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestRolesIPC& RequestRolesIPC::default_instance() {
  protobuf_gs_5fgw_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

RequestRolesIPC* RequestRolesIPC::New(::google::protobuf::Arena* arena) const {
  RequestRolesIPC* n = new RequestRolesIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestRolesIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.RequestRolesIPC)
  ipc_.Clear();
}

bool RequestRolesIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.RequestRolesIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .inner_ipc.ReConnectIPC ipc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ipc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.RequestRolesIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.RequestRolesIPC)
  return false;
#undef DO_
}

void RequestRolesIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.RequestRolesIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inner_ipc.ReConnectIPC ipc = 1;
  for (unsigned int i = 0, n = this->ipc_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ipc(i), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.RequestRolesIPC)
}

::google::protobuf::uint8* RequestRolesIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.RequestRolesIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .inner_ipc.ReConnectIPC ipc = 1;
  for (unsigned int i = 0, n = this->ipc_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ipc(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.RequestRolesIPC)
  return target;
}

size_t RequestRolesIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.RequestRolesIPC)
  size_t total_size = 0;

  // repeated .inner_ipc.ReConnectIPC ipc = 1;
  {
    unsigned int count = this->ipc_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ipc(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestRolesIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.RequestRolesIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestRolesIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestRolesIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.RequestRolesIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.RequestRolesIPC)
    MergeFrom(*source);
  }
}

void RequestRolesIPC::MergeFrom(const RequestRolesIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.RequestRolesIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ipc_.MergeFrom(from.ipc_);
}

void RequestRolesIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.RequestRolesIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestRolesIPC::CopyFrom(const RequestRolesIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.RequestRolesIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestRolesIPC::IsInitialized() const {
  return true;
}

void RequestRolesIPC::Swap(RequestRolesIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestRolesIPC::InternalSwap(RequestRolesIPC* other) {
  ipc_.InternalSwap(&other->ipc_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestRolesIPC::GetMetadata() const {
  protobuf_gs_5fgw_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fgw_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RequestRolesIPC

// repeated .inner_ipc.ReConnectIPC ipc = 1;
int RequestRolesIPC::ipc_size() const {
  return ipc_.size();
}
void RequestRolesIPC::clear_ipc() {
  ipc_.Clear();
}
const ::inner_ipc::ReConnectIPC& RequestRolesIPC::ipc(int index) const {
  // @@protoc_insertion_point(field_get:inner_ipc.RequestRolesIPC.ipc)
  return ipc_.Get(index);
}
::inner_ipc::ReConnectIPC* RequestRolesIPC::mutable_ipc(int index) {
  // @@protoc_insertion_point(field_mutable:inner_ipc.RequestRolesIPC.ipc)
  return ipc_.Mutable(index);
}
::inner_ipc::ReConnectIPC* RequestRolesIPC::add_ipc() {
  // @@protoc_insertion_point(field_add:inner_ipc.RequestRolesIPC.ipc)
  return ipc_.Add();
}
::google::protobuf::RepeatedPtrField< ::inner_ipc::ReConnectIPC >*
RequestRolesIPC::mutable_ipc() {
  // @@protoc_insertion_point(field_mutable_list:inner_ipc.RequestRolesIPC.ipc)
  return &ipc_;
}
const ::google::protobuf::RepeatedPtrField< ::inner_ipc::ReConnectIPC >&
RequestRolesIPC::ipc() const {
  // @@protoc_insertion_point(field_list:inner_ipc.RequestRolesIPC.ipc)
  return ipc_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)
