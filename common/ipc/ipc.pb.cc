// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace inner_ipc {
class SystemLogIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SystemLogIPC> {
} _SystemLogIPC_default_instance_;
class NotiIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NotiIPC> {
} _NotiIPC_default_instance_;

namespace protobuf_ipc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemLogIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemLogIPC, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemLogIPC, proc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemLogIPC, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemLogIPC, func_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SystemLogIPC, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotiIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotiIPC, notiid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NotiIPC, noti_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SystemLogIPC)},
  { 10, -1, sizeof(NotiIPC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SystemLogIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NotiIPC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ipc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _SystemLogIPC_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NotiIPC_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _SystemLogIPC_default_instance_.DefaultConstruct();
  _NotiIPC_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tipc.proto\022\tinner_ipc\"T\n\014SystemLogIPC\022\r"
      "\n\005level\030\001 \001(\005\022\014\n\004proc\030\002 \001(\t\022\014\n\004date\030\003 \001("
      "\t\022\014\n\004func\030\004 \001(\t\022\013\n\003msg\030\005 \001(\t\"\'\n\007NotiIPC\022"
      "\016\n\006notiid\030\001 \001(\005\022\014\n\004noti\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 157);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ipc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_ipc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SystemLogIPC::kLevelFieldNumber;
const int SystemLogIPC::kProcFieldNumber;
const int SystemLogIPC::kDateFieldNumber;
const int SystemLogIPC::kFuncFieldNumber;
const int SystemLogIPC::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SystemLogIPC::SystemLogIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.SystemLogIPC)
}
SystemLogIPC::SystemLogIPC(const SystemLogIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  proc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proc().size() > 0) {
    proc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_);
  }
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  func_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.func().size() > 0) {
    func_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  level_ = from.level_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.SystemLogIPC)
}

void SystemLogIPC::SharedCtor() {
  proc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  func_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
  _cached_size_ = 0;
}

SystemLogIPC::~SystemLogIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.SystemLogIPC)
  SharedDtor();
}

void SystemLogIPC::SharedDtor() {
  proc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  func_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SystemLogIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SystemLogIPC::descriptor() {
  protobuf_ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SystemLogIPC& SystemLogIPC::default_instance() {
  protobuf_ipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

SystemLogIPC* SystemLogIPC::New(::google::protobuf::Arena* arena) const {
  SystemLogIPC* n = new SystemLogIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SystemLogIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.SystemLogIPC)
  proc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  level_ = 0;
}

bool SystemLogIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.SystemLogIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 level = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proc().data(), this->proc().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.SystemLogIPC.proc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string date = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), this->date().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.SystemLogIPC.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string func = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_func()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->func().data(), this->func().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.SystemLogIPC.func"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.SystemLogIPC.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.SystemLogIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.SystemLogIPC)
  return false;
#undef DO_
}

void SystemLogIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.SystemLogIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->level(), output);
  }

  // string proc = 2;
  if (this->proc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc().data(), this->proc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.proc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->proc(), output);
  }

  // string date = 3;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->date(), output);
  }

  // string func = 4;
  if (this->func().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func().data(), this->func().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.func");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->func(), output);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.SystemLogIPC)
}

::google::protobuf::uint8* SystemLogIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.SystemLogIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 level = 1;
  if (this->level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->level(), target);
  }

  // string proc = 2;
  if (this->proc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proc().data(), this->proc().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.proc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->proc(), target);
  }

  // string date = 3;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), this->date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->date(), target);
  }

  // string func = 4;
  if (this->func().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->func().data(), this->func().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.func");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->func(), target);
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.SystemLogIPC.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.SystemLogIPC)
  return target;
}

size_t SystemLogIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.SystemLogIPC)
  size_t total_size = 0;

  // string proc = 2;
  if (this->proc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proc());
  }

  // string date = 3;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // string func = 4;
  if (this->func().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->func());
  }

  // string msg = 5;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 level = 1;
  if (this->level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SystemLogIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.SystemLogIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const SystemLogIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SystemLogIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.SystemLogIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.SystemLogIPC)
    MergeFrom(*source);
  }
}

void SystemLogIPC::MergeFrom(const SystemLogIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.SystemLogIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.proc().size() > 0) {

    proc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proc_);
  }
  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.func().size() > 0) {

    func_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.func_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.level() != 0) {
    set_level(from.level());
  }
}

void SystemLogIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.SystemLogIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SystemLogIPC::CopyFrom(const SystemLogIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.SystemLogIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SystemLogIPC::IsInitialized() const {
  return true;
}

void SystemLogIPC::Swap(SystemLogIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SystemLogIPC::InternalSwap(SystemLogIPC* other) {
  proc_.Swap(&other->proc_);
  date_.Swap(&other->date_);
  func_.Swap(&other->func_);
  msg_.Swap(&other->msg_);
  std::swap(level_, other->level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SystemLogIPC::GetMetadata() const {
  protobuf_ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemLogIPC

// int32 level = 1;
void SystemLogIPC::clear_level() {
  level_ = 0;
}
::google::protobuf::int32 SystemLogIPC::level() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.level)
  return level_;
}
void SystemLogIPC::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.level)
}

// string proc = 2;
void SystemLogIPC::clear_proc() {
  proc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SystemLogIPC::proc() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.proc)
  return proc_.GetNoArena();
}
void SystemLogIPC::set_proc(const ::std::string& value) {
  
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.proc)
}
#if LANG_CXX11
void SystemLogIPC::set_proc(::std::string&& value) {
  
  proc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.proc)
}
#endif
void SystemLogIPC::set_proc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.proc)
}
void SystemLogIPC::set_proc(const char* value, size_t size) {
  
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.proc)
}
::std::string* SystemLogIPC::mutable_proc() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.proc)
  return proc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SystemLogIPC::release_proc() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.proc)
  
  return proc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SystemLogIPC::set_allocated_proc(::std::string* proc) {
  if (proc != NULL) {
    
  } else {
    
  }
  proc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proc);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.proc)
}

// string date = 3;
void SystemLogIPC::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SystemLogIPC::date() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.date)
  return date_.GetNoArena();
}
void SystemLogIPC::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.date)
}
#if LANG_CXX11
void SystemLogIPC::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.date)
}
#endif
void SystemLogIPC::set_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.date)
}
void SystemLogIPC::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.date)
}
::std::string* SystemLogIPC::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SystemLogIPC::release_date() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SystemLogIPC::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.date)
}

// string func = 4;
void SystemLogIPC::clear_func() {
  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SystemLogIPC::func() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.func)
  return func_.GetNoArena();
}
void SystemLogIPC::set_func(const ::std::string& value) {
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.func)
}
#if LANG_CXX11
void SystemLogIPC::set_func(::std::string&& value) {
  
  func_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.func)
}
#endif
void SystemLogIPC::set_func(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.func)
}
void SystemLogIPC::set_func(const char* value, size_t size) {
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.func)
}
::std::string* SystemLogIPC::mutable_func() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.func)
  return func_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SystemLogIPC::release_func() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.func)
  
  return func_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SystemLogIPC::set_allocated_func(::std::string* func) {
  if (func != NULL) {
    
  } else {
    
  }
  func_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), func);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.func)
}

// string msg = 5;
void SystemLogIPC::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SystemLogIPC::msg() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.msg)
  return msg_.GetNoArena();
}
void SystemLogIPC::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.msg)
}
#if LANG_CXX11
void SystemLogIPC::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.msg)
}
#endif
void SystemLogIPC::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.msg)
}
void SystemLogIPC::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.msg)
}
::std::string* SystemLogIPC::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SystemLogIPC::release_msg() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SystemLogIPC::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotiIPC::kNotiidFieldNumber;
const int NotiIPC::kNotiFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotiIPC::NotiIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_ipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.NotiIPC)
}
NotiIPC::NotiIPC(const NotiIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  noti_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.noti().size() > 0) {
    noti_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.noti_);
  }
  notiid_ = from.notiid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.NotiIPC)
}

void NotiIPC::SharedCtor() {
  noti_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notiid_ = 0;
  _cached_size_ = 0;
}

NotiIPC::~NotiIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.NotiIPC)
  SharedDtor();
}

void NotiIPC::SharedDtor() {
  noti_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NotiIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NotiIPC::descriptor() {
  protobuf_ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotiIPC& NotiIPC::default_instance() {
  protobuf_ipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

NotiIPC* NotiIPC::New(::google::protobuf::Arena* arena) const {
  NotiIPC* n = new NotiIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NotiIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.NotiIPC)
  noti_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  notiid_ = 0;
}

bool NotiIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.NotiIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 notiid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &notiid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string noti = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_noti()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->noti().data(), this->noti().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.NotiIPC.noti"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.NotiIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.NotiIPC)
  return false;
#undef DO_
}

void NotiIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.NotiIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 notiid = 1;
  if (this->notiid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->notiid(), output);
  }

  // string noti = 2;
  if (this->noti().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->noti().data(), this->noti().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.NotiIPC.noti");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->noti(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.NotiIPC)
}

::google::protobuf::uint8* NotiIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.NotiIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 notiid = 1;
  if (this->notiid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->notiid(), target);
  }

  // string noti = 2;
  if (this->noti().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->noti().data(), this->noti().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.NotiIPC.noti");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->noti(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.NotiIPC)
  return target;
}

size_t NotiIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.NotiIPC)
  size_t total_size = 0;

  // string noti = 2;
  if (this->noti().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->noti());
  }

  // int32 notiid = 1;
  if (this->notiid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->notiid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NotiIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.NotiIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const NotiIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotiIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.NotiIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.NotiIPC)
    MergeFrom(*source);
  }
}

void NotiIPC::MergeFrom(const NotiIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.NotiIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.noti().size() > 0) {

    noti_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.noti_);
  }
  if (from.notiid() != 0) {
    set_notiid(from.notiid());
  }
}

void NotiIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.NotiIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotiIPC::CopyFrom(const NotiIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.NotiIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotiIPC::IsInitialized() const {
  return true;
}

void NotiIPC::Swap(NotiIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotiIPC::InternalSwap(NotiIPC* other) {
  noti_.Swap(&other->noti_);
  std::swap(notiid_, other->notiid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NotiIPC::GetMetadata() const {
  protobuf_ipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NotiIPC

// int32 notiid = 1;
void NotiIPC::clear_notiid() {
  notiid_ = 0;
}
::google::protobuf::int32 NotiIPC::notiid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.NotiIPC.notiid)
  return notiid_;
}
void NotiIPC::set_notiid(::google::protobuf::int32 value) {
  
  notiid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.NotiIPC.notiid)
}

// string noti = 2;
void NotiIPC::clear_noti() {
  noti_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& NotiIPC::noti() const {
  // @@protoc_insertion_point(field_get:inner_ipc.NotiIPC.noti)
  return noti_.GetNoArena();
}
void NotiIPC::set_noti(const ::std::string& value) {
  
  noti_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.NotiIPC.noti)
}
#if LANG_CXX11
void NotiIPC::set_noti(::std::string&& value) {
  
  noti_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.NotiIPC.noti)
}
#endif
void NotiIPC::set_noti(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  noti_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.NotiIPC.noti)
}
void NotiIPC::set_noti(const char* value, size_t size) {
  
  noti_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.NotiIPC.noti)
}
::std::string* NotiIPC::mutable_noti() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.NotiIPC.noti)
  return noti_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NotiIPC::release_noti() {
  // @@protoc_insertion_point(field_release:inner_ipc.NotiIPC.noti)
  
  return noti_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NotiIPC::set_allocated_noti(::std::string* noti) {
  if (noti != NULL) {
    
  } else {
    
  }
  noti_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noti);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.NotiIPC.noti)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)
