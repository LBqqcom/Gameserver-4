// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gs_chat_ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gs_chat_ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace inner_ipc {
class PlayerOnlineIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerOnlineIPC> {
} _PlayerOnlineIPC_default_instance_;
class PlayerOfflineIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerOfflineIPC> {
} _PlayerOfflineIPC_default_instance_;
class ChatMsgIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ChatMsgIPC> {
} _ChatMsgIPC_default_instance_;

namespace protobuf_gs_5fchat_5fipc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOnlineIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOnlineIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOnlineIPC, gulid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOnlineIPC, uname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOfflineIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOfflineIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerOfflineIPC, isexit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, srid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, stime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChatMsgIPC, sname_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PlayerOnlineIPC)},
  { 8, -1, sizeof(PlayerOfflineIPC)},
  { 15, -1, sizeof(ChatMsgIPC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerOnlineIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerOfflineIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ChatMsgIPC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gs_chat_ipc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _PlayerOnlineIPC_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _PlayerOfflineIPC_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ChatMsgIPC_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _PlayerOnlineIPC_default_instance_.DefaultConstruct();
  _PlayerOfflineIPC_default_instance_.DefaultConstruct();
  _ChatMsgIPC_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021gs_chat_ipc.proto\022\tinner_ipc\"<\n\017Player"
      "OnlineIPC\022\013\n\003rid\030\001 \001(\005\022\r\n\005gulid\030\002 \001(\005\022\r\n"
      "\005uname\030\003 \001(\t\"/\n\020PlayerOfflineIPC\022\013\n\003rid\030"
      "\001 \001(\005\022\016\n\006isexit\030\002 \001(\005\"\235\001\n\nChatMsgIPC\022\014\n\004"
      "srid\030\001 \001(\005\022\013\n\003did\030\002 \001(\005\022\014\n\004type\030\003 \001(\005\022\020\n"
      "\010msg_type\030\004 \001(\005\022\013\n\003tid\030\005 \001(\005\022\014\n\004size\030\006 \001"
      "(\005\022\016\n\006status\030\007 \001(\005\022\r\n\005stime\030\010 \001(\005\022\013\n\003msg"
      "\030\t \001(\t\022\r\n\005sname\030\n \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 309);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gs_chat_ipc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gs_5fchat_5fipc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerOnlineIPC::kRidFieldNumber;
const int PlayerOnlineIPC::kGulidFieldNumber;
const int PlayerOnlineIPC::kUnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerOnlineIPC::PlayerOnlineIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fchat_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.PlayerOnlineIPC)
}
PlayerOnlineIPC::PlayerOnlineIPC(const PlayerOnlineIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uname().size() > 0) {
    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&gulid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(gulid_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.PlayerOnlineIPC)
}

void PlayerOnlineIPC::SharedCtor() {
  uname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rid_, 0, reinterpret_cast<char*>(&gulid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(gulid_));
  _cached_size_ = 0;
}

PlayerOnlineIPC::~PlayerOnlineIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.PlayerOnlineIPC)
  SharedDtor();
}

void PlayerOnlineIPC::SharedDtor() {
  uname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PlayerOnlineIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerOnlineIPC::descriptor() {
  protobuf_gs_5fchat_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fchat_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerOnlineIPC& PlayerOnlineIPC::default_instance() {
  protobuf_gs_5fchat_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerOnlineIPC* PlayerOnlineIPC::New(::google::protobuf::Arena* arena) const {
  PlayerOnlineIPC* n = new PlayerOnlineIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerOnlineIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.PlayerOnlineIPC)
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rid_, 0, reinterpret_cast<char*>(&gulid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(gulid_));
}

bool PlayerOnlineIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.PlayerOnlineIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 gulid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gulid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uname().data(), this->uname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.PlayerOnlineIPC.uname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.PlayerOnlineIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.PlayerOnlineIPC)
  return false;
#undef DO_
}

void PlayerOnlineIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.PlayerOnlineIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 gulid = 2;
  if (this->gulid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gulid(), output);
  }

  // string uname = 3;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.PlayerOnlineIPC.uname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->uname(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.PlayerOnlineIPC)
}

::google::protobuf::uint8* PlayerOnlineIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.PlayerOnlineIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 gulid = 2;
  if (this->gulid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gulid(), target);
  }

  // string uname = 3;
  if (this->uname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uname().data(), this->uname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.PlayerOnlineIPC.uname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->uname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.PlayerOnlineIPC)
  return target;
}

size_t PlayerOnlineIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.PlayerOnlineIPC)
  size_t total_size = 0;

  // string uname = 3;
  if (this->uname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uname());
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 gulid = 2;
  if (this->gulid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->gulid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerOnlineIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.PlayerOnlineIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerOnlineIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerOnlineIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.PlayerOnlineIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.PlayerOnlineIPC)
    MergeFrom(*source);
  }
}

void PlayerOnlineIPC::MergeFrom(const PlayerOnlineIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.PlayerOnlineIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uname().size() > 0) {

    uname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uname_);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.gulid() != 0) {
    set_gulid(from.gulid());
  }
}

void PlayerOnlineIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.PlayerOnlineIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerOnlineIPC::CopyFrom(const PlayerOnlineIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.PlayerOnlineIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerOnlineIPC::IsInitialized() const {
  return true;
}

void PlayerOnlineIPC::Swap(PlayerOnlineIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerOnlineIPC::InternalSwap(PlayerOnlineIPC* other) {
  uname_.Swap(&other->uname_);
  std::swap(rid_, other->rid_);
  std::swap(gulid_, other->gulid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerOnlineIPC::GetMetadata() const {
  protobuf_gs_5fchat_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fchat_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerOnlineIPC

// int32 rid = 1;
void PlayerOnlineIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 PlayerOnlineIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.PlayerOnlineIPC.rid)
  return rid_;
}
void PlayerOnlineIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.PlayerOnlineIPC.rid)
}

// int32 gulid = 2;
void PlayerOnlineIPC::clear_gulid() {
  gulid_ = 0;
}
::google::protobuf::int32 PlayerOnlineIPC::gulid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.PlayerOnlineIPC.gulid)
  return gulid_;
}
void PlayerOnlineIPC::set_gulid(::google::protobuf::int32 value) {
  
  gulid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.PlayerOnlineIPC.gulid)
}

// string uname = 3;
void PlayerOnlineIPC::clear_uname() {
  uname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PlayerOnlineIPC::uname() const {
  // @@protoc_insertion_point(field_get:inner_ipc.PlayerOnlineIPC.uname)
  return uname_.GetNoArena();
}
void PlayerOnlineIPC::set_uname(const ::std::string& value) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.PlayerOnlineIPC.uname)
}
#if LANG_CXX11
void PlayerOnlineIPC::set_uname(::std::string&& value) {
  
  uname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.PlayerOnlineIPC.uname)
}
#endif
void PlayerOnlineIPC::set_uname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.PlayerOnlineIPC.uname)
}
void PlayerOnlineIPC::set_uname(const char* value, size_t size) {
  
  uname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.PlayerOnlineIPC.uname)
}
::std::string* PlayerOnlineIPC::mutable_uname() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.PlayerOnlineIPC.uname)
  return uname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerOnlineIPC::release_uname() {
  // @@protoc_insertion_point(field_release:inner_ipc.PlayerOnlineIPC.uname)
  
  return uname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerOnlineIPC::set_allocated_uname(::std::string* uname) {
  if (uname != NULL) {
    
  } else {
    
  }
  uname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uname);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.PlayerOnlineIPC.uname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerOfflineIPC::kRidFieldNumber;
const int PlayerOfflineIPC::kIsexitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerOfflineIPC::PlayerOfflineIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fchat_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.PlayerOfflineIPC)
}
PlayerOfflineIPC::PlayerOfflineIPC(const PlayerOfflineIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&isexit_) -
    reinterpret_cast<char*>(&rid_) + sizeof(isexit_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.PlayerOfflineIPC)
}

void PlayerOfflineIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&isexit_) -
    reinterpret_cast<char*>(&rid_) + sizeof(isexit_));
  _cached_size_ = 0;
}

PlayerOfflineIPC::~PlayerOfflineIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.PlayerOfflineIPC)
  SharedDtor();
}

void PlayerOfflineIPC::SharedDtor() {
}

void PlayerOfflineIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerOfflineIPC::descriptor() {
  protobuf_gs_5fchat_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fchat_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerOfflineIPC& PlayerOfflineIPC::default_instance() {
  protobuf_gs_5fchat_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

PlayerOfflineIPC* PlayerOfflineIPC::New(::google::protobuf::Arena* arena) const {
  PlayerOfflineIPC* n = new PlayerOfflineIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerOfflineIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.PlayerOfflineIPC)
  ::memset(&rid_, 0, reinterpret_cast<char*>(&isexit_) -
    reinterpret_cast<char*>(&rid_) + sizeof(isexit_));
}

bool PlayerOfflineIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.PlayerOfflineIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isexit = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isexit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.PlayerOfflineIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.PlayerOfflineIPC)
  return false;
#undef DO_
}

void PlayerOfflineIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.PlayerOfflineIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 isexit = 2;
  if (this->isexit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->isexit(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.PlayerOfflineIPC)
}

::google::protobuf::uint8* PlayerOfflineIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.PlayerOfflineIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 isexit = 2;
  if (this->isexit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->isexit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.PlayerOfflineIPC)
  return target;
}

size_t PlayerOfflineIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.PlayerOfflineIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 isexit = 2;
  if (this->isexit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isexit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerOfflineIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.PlayerOfflineIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerOfflineIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerOfflineIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.PlayerOfflineIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.PlayerOfflineIPC)
    MergeFrom(*source);
  }
}

void PlayerOfflineIPC::MergeFrom(const PlayerOfflineIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.PlayerOfflineIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.isexit() != 0) {
    set_isexit(from.isexit());
  }
}

void PlayerOfflineIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.PlayerOfflineIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerOfflineIPC::CopyFrom(const PlayerOfflineIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.PlayerOfflineIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerOfflineIPC::IsInitialized() const {
  return true;
}

void PlayerOfflineIPC::Swap(PlayerOfflineIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerOfflineIPC::InternalSwap(PlayerOfflineIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(isexit_, other->isexit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerOfflineIPC::GetMetadata() const {
  protobuf_gs_5fchat_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fchat_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerOfflineIPC

// int32 rid = 1;
void PlayerOfflineIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 PlayerOfflineIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.PlayerOfflineIPC.rid)
  return rid_;
}
void PlayerOfflineIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.PlayerOfflineIPC.rid)
}

// int32 isexit = 2;
void PlayerOfflineIPC::clear_isexit() {
  isexit_ = 0;
}
::google::protobuf::int32 PlayerOfflineIPC::isexit() const {
  // @@protoc_insertion_point(field_get:inner_ipc.PlayerOfflineIPC.isexit)
  return isexit_;
}
void PlayerOfflineIPC::set_isexit(::google::protobuf::int32 value) {
  
  isexit_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.PlayerOfflineIPC.isexit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChatMsgIPC::kSridFieldNumber;
const int ChatMsgIPC::kDidFieldNumber;
const int ChatMsgIPC::kTypeFieldNumber;
const int ChatMsgIPC::kMsgTypeFieldNumber;
const int ChatMsgIPC::kTidFieldNumber;
const int ChatMsgIPC::kSizeFieldNumber;
const int ChatMsgIPC::kStatusFieldNumber;
const int ChatMsgIPC::kStimeFieldNumber;
const int ChatMsgIPC::kMsgFieldNumber;
const int ChatMsgIPC::kSnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChatMsgIPC::ChatMsgIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fchat_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ChatMsgIPC)
}
ChatMsgIPC::ChatMsgIPC(const ChatMsgIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  ::memcpy(&srid_, &from.srid_,
    reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&srid_) + sizeof(stime_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ChatMsgIPC)
}

void ChatMsgIPC::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srid_, 0, reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&srid_) + sizeof(stime_));
  _cached_size_ = 0;
}

ChatMsgIPC::~ChatMsgIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ChatMsgIPC)
  SharedDtor();
}

void ChatMsgIPC::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChatMsgIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChatMsgIPC::descriptor() {
  protobuf_gs_5fchat_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fchat_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChatMsgIPC& ChatMsgIPC::default_instance() {
  protobuf_gs_5fchat_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ChatMsgIPC* ChatMsgIPC::New(::google::protobuf::Arena* arena) const {
  ChatMsgIPC* n = new ChatMsgIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChatMsgIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ChatMsgIPC)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srid_, 0, reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&srid_) + sizeof(stime_));
}

bool ChatMsgIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ChatMsgIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 srid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 did = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &did_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msg_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stime = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.ChatMsgIPC.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sname = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), this->sname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.ChatMsgIPC.sname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ChatMsgIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ChatMsgIPC)
  return false;
#undef DO_
}

void ChatMsgIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ChatMsgIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 srid = 1;
  if (this->srid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srid(), output);
  }

  // int32 did = 2;
  if (this->did() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->did(), output);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // int32 msg_type = 4;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->msg_type(), output);
  }

  // int32 tid = 5;
  if (this->tid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tid(), output);
  }

  // int32 size = 6;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->size(), output);
  }

  // int32 status = 7;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->status(), output);
  }

  // int32 stime = 8;
  if (this->stime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->stime(), output);
  }

  // string msg = 9;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.ChatMsgIPC.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->msg(), output);
  }

  // string sname = 10;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.ChatMsgIPC.sname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->sname(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ChatMsgIPC)
}

::google::protobuf::uint8* ChatMsgIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ChatMsgIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 srid = 1;
  if (this->srid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srid(), target);
  }

  // int32 did = 2;
  if (this->did() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->did(), target);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // int32 msg_type = 4;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->msg_type(), target);
  }

  // int32 tid = 5;
  if (this->tid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tid(), target);
  }

  // int32 size = 6;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->size(), target);
  }

  // int32 status = 7;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->status(), target);
  }

  // int32 stime = 8;
  if (this->stime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->stime(), target);
  }

  // string msg = 9;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.ChatMsgIPC.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->msg(), target);
  }

  // string sname = 10;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.ChatMsgIPC.sname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->sname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ChatMsgIPC)
  return target;
}

size_t ChatMsgIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ChatMsgIPC)
  size_t total_size = 0;

  // string msg = 9;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string sname = 10;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // int32 srid = 1;
  if (this->srid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->srid());
  }

  // int32 did = 2;
  if (this->did() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->did());
  }

  // int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 msg_type = 4;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_type());
  }

  // int32 tid = 5;
  if (this->tid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());
  }

  // int32 size = 6;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  // int32 status = 7;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 stime = 8;
  if (this->stime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChatMsgIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ChatMsgIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ChatMsgIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChatMsgIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ChatMsgIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ChatMsgIPC)
    MergeFrom(*source);
  }
}

void ChatMsgIPC::MergeFrom(const ChatMsgIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ChatMsgIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  if (from.srid() != 0) {
    set_srid(from.srid());
  }
  if (from.did() != 0) {
    set_did(from.did());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.tid() != 0) {
    set_tid(from.tid());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.stime() != 0) {
    set_stime(from.stime());
  }
}

void ChatMsgIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ChatMsgIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChatMsgIPC::CopyFrom(const ChatMsgIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ChatMsgIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChatMsgIPC::IsInitialized() const {
  return true;
}

void ChatMsgIPC::Swap(ChatMsgIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChatMsgIPC::InternalSwap(ChatMsgIPC* other) {
  msg_.Swap(&other->msg_);
  sname_.Swap(&other->sname_);
  std::swap(srid_, other->srid_);
  std::swap(did_, other->did_);
  std::swap(type_, other->type_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(tid_, other->tid_);
  std::swap(size_, other->size_);
  std::swap(status_, other->status_);
  std::swap(stime_, other->stime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChatMsgIPC::GetMetadata() const {
  protobuf_gs_5fchat_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fchat_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChatMsgIPC

// int32 srid = 1;
void ChatMsgIPC::clear_srid() {
  srid_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::srid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.srid)
  return srid_;
}
void ChatMsgIPC::set_srid(::google::protobuf::int32 value) {
  
  srid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.srid)
}

// int32 did = 2;
void ChatMsgIPC::clear_did() {
  did_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::did() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.did)
  return did_;
}
void ChatMsgIPC::set_did(::google::protobuf::int32 value) {
  
  did_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.did)
}

// int32 type = 3;
void ChatMsgIPC::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.type)
  return type_;
}
void ChatMsgIPC::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.type)
}

// int32 msg_type = 4;
void ChatMsgIPC::clear_msg_type() {
  msg_type_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::msg_type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.msg_type)
  return msg_type_;
}
void ChatMsgIPC::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.msg_type)
}

// int32 tid = 5;
void ChatMsgIPC::clear_tid() {
  tid_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::tid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.tid)
  return tid_;
}
void ChatMsgIPC::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.tid)
}

// int32 size = 6;
void ChatMsgIPC::clear_size() {
  size_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::size() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.size)
  return size_;
}
void ChatMsgIPC::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.size)
}

// int32 status = 7;
void ChatMsgIPC::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::status() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.status)
  return status_;
}
void ChatMsgIPC::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.status)
}

// int32 stime = 8;
void ChatMsgIPC::clear_stime() {
  stime_ = 0;
}
::google::protobuf::int32 ChatMsgIPC::stime() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.stime)
  return stime_;
}
void ChatMsgIPC::set_stime(::google::protobuf::int32 value) {
  
  stime_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.stime)
}

// string msg = 9;
void ChatMsgIPC::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatMsgIPC::msg() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.msg)
  return msg_.GetNoArena();
}
void ChatMsgIPC::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.msg)
}
#if LANG_CXX11
void ChatMsgIPC::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.ChatMsgIPC.msg)
}
#endif
void ChatMsgIPC::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.ChatMsgIPC.msg)
}
void ChatMsgIPC::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.ChatMsgIPC.msg)
}
::std::string* ChatMsgIPC::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.ChatMsgIPC.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatMsgIPC::release_msg() {
  // @@protoc_insertion_point(field_release:inner_ipc.ChatMsgIPC.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatMsgIPC::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.ChatMsgIPC.msg)
}

// string sname = 10;
void ChatMsgIPC::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChatMsgIPC::sname() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ChatMsgIPC.sname)
  return sname_.GetNoArena();
}
void ChatMsgIPC::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.ChatMsgIPC.sname)
}
#if LANG_CXX11
void ChatMsgIPC::set_sname(::std::string&& value) {
  
  sname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.ChatMsgIPC.sname)
}
#endif
void ChatMsgIPC::set_sname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.ChatMsgIPC.sname)
}
void ChatMsgIPC::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.ChatMsgIPC.sname)
}
::std::string* ChatMsgIPC::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.ChatMsgIPC.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChatMsgIPC::release_sname() {
  // @@protoc_insertion_point(field_release:inner_ipc.ChatMsgIPC.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChatMsgIPC::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.ChatMsgIPC.sname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)
