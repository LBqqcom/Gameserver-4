// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ipc.proto

#ifndef PROTOBUF_ipc_2eproto__INCLUDED
#define PROTOBUF_ipc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace inner_ipc {
class NotiIPC;
class NotiIPCDefaultTypeInternal;
extern NotiIPCDefaultTypeInternal _NotiIPC_default_instance_;
class SystemLogIPC;
class SystemLogIPCDefaultTypeInternal;
extern SystemLogIPCDefaultTypeInternal _SystemLogIPC_default_instance_;
}  // namespace inner_ipc

namespace inner_ipc {

namespace protobuf_ipc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_ipc_2eproto

// ===================================================================

class SystemLogIPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inner_ipc.SystemLogIPC) */ {
 public:
  SystemLogIPC();
  virtual ~SystemLogIPC();

  SystemLogIPC(const SystemLogIPC& from);

  inline SystemLogIPC& operator=(const SystemLogIPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SystemLogIPC& default_instance();

  static inline const SystemLogIPC* internal_default_instance() {
    return reinterpret_cast<const SystemLogIPC*>(
               &_SystemLogIPC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(SystemLogIPC* other);

  // implements Message ----------------------------------------------

  inline SystemLogIPC* New() const PROTOBUF_FINAL { return New(NULL); }

  SystemLogIPC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SystemLogIPC& from);
  void MergeFrom(const SystemLogIPC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SystemLogIPC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string proc = 2;
  void clear_proc();
  static const int kProcFieldNumber = 2;
  const ::std::string& proc() const;
  void set_proc(const ::std::string& value);
  #if LANG_CXX11
  void set_proc(::std::string&& value);
  #endif
  void set_proc(const char* value);
  void set_proc(const char* value, size_t size);
  ::std::string* mutable_proc();
  ::std::string* release_proc();
  void set_allocated_proc(::std::string* proc);

  // string date = 3;
  void clear_date();
  static const int kDateFieldNumber = 3;
  const ::std::string& date() const;
  void set_date(const ::std::string& value);
  #if LANG_CXX11
  void set_date(::std::string&& value);
  #endif
  void set_date(const char* value);
  void set_date(const char* value, size_t size);
  ::std::string* mutable_date();
  ::std::string* release_date();
  void set_allocated_date(::std::string* date);

  // string func = 4;
  void clear_func();
  static const int kFuncFieldNumber = 4;
  const ::std::string& func() const;
  void set_func(const ::std::string& value);
  #if LANG_CXX11
  void set_func(::std::string&& value);
  #endif
  void set_func(const char* value);
  void set_func(const char* value, size_t size);
  ::std::string* mutable_func();
  ::std::string* release_func();
  void set_allocated_func(::std::string* func);

  // string msg = 5;
  void clear_msg();
  static const int kMsgFieldNumber = 5;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // int32 level = 1;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:inner_ipc.SystemLogIPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr proc_;
  ::google::protobuf::internal::ArenaStringPtr date_;
  ::google::protobuf::internal::ArenaStringPtr func_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 level_;
  mutable int _cached_size_;
  friend struct protobuf_ipc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NotiIPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inner_ipc.NotiIPC) */ {
 public:
  NotiIPC();
  virtual ~NotiIPC();

  NotiIPC(const NotiIPC& from);

  inline NotiIPC& operator=(const NotiIPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NotiIPC& default_instance();

  static inline const NotiIPC* internal_default_instance() {
    return reinterpret_cast<const NotiIPC*>(
               &_NotiIPC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NotiIPC* other);

  // implements Message ----------------------------------------------

  inline NotiIPC* New() const PROTOBUF_FINAL { return New(NULL); }

  NotiIPC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NotiIPC& from);
  void MergeFrom(const NotiIPC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NotiIPC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string noti = 2;
  void clear_noti();
  static const int kNotiFieldNumber = 2;
  const ::std::string& noti() const;
  void set_noti(const ::std::string& value);
  #if LANG_CXX11
  void set_noti(::std::string&& value);
  #endif
  void set_noti(const char* value);
  void set_noti(const char* value, size_t size);
  ::std::string* mutable_noti();
  ::std::string* release_noti();
  void set_allocated_noti(::std::string* noti);

  // int32 notiid = 1;
  void clear_notiid();
  static const int kNotiidFieldNumber = 1;
  ::google::protobuf::int32 notiid() const;
  void set_notiid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:inner_ipc.NotiIPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr noti_;
  ::google::protobuf::int32 notiid_;
  mutable int _cached_size_;
  friend struct protobuf_ipc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SystemLogIPC

// int32 level = 1;
inline void SystemLogIPC::clear_level() {
  level_ = 0;
}
inline ::google::protobuf::int32 SystemLogIPC::level() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.level)
  return level_;
}
inline void SystemLogIPC::set_level(::google::protobuf::int32 value) {
  
  level_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.level)
}

// string proc = 2;
inline void SystemLogIPC::clear_proc() {
  proc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemLogIPC::proc() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.proc)
  return proc_.GetNoArena();
}
inline void SystemLogIPC::set_proc(const ::std::string& value) {
  
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.proc)
}
#if LANG_CXX11
inline void SystemLogIPC::set_proc(::std::string&& value) {
  
  proc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.proc)
}
#endif
inline void SystemLogIPC::set_proc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.proc)
}
inline void SystemLogIPC::set_proc(const char* value, size_t size) {
  
  proc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.proc)
}
inline ::std::string* SystemLogIPC::mutable_proc() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.proc)
  return proc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemLogIPC::release_proc() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.proc)
  
  return proc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemLogIPC::set_allocated_proc(::std::string* proc) {
  if (proc != NULL) {
    
  } else {
    
  }
  proc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proc);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.proc)
}

// string date = 3;
inline void SystemLogIPC::clear_date() {
  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemLogIPC::date() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.date)
  return date_.GetNoArena();
}
inline void SystemLogIPC::set_date(const ::std::string& value) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.date)
}
#if LANG_CXX11
inline void SystemLogIPC::set_date(::std::string&& value) {
  
  date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.date)
}
#endif
inline void SystemLogIPC::set_date(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.date)
}
inline void SystemLogIPC::set_date(const char* value, size_t size) {
  
  date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.date)
}
inline ::std::string* SystemLogIPC::mutable_date() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.date)
  return date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemLogIPC::release_date() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.date)
  
  return date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemLogIPC::set_allocated_date(::std::string* date) {
  if (date != NULL) {
    
  } else {
    
  }
  date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), date);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.date)
}

// string func = 4;
inline void SystemLogIPC::clear_func() {
  func_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemLogIPC::func() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.func)
  return func_.GetNoArena();
}
inline void SystemLogIPC::set_func(const ::std::string& value) {
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.func)
}
#if LANG_CXX11
inline void SystemLogIPC::set_func(::std::string&& value) {
  
  func_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.func)
}
#endif
inline void SystemLogIPC::set_func(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.func)
}
inline void SystemLogIPC::set_func(const char* value, size_t size) {
  
  func_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.func)
}
inline ::std::string* SystemLogIPC::mutable_func() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.func)
  return func_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemLogIPC::release_func() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.func)
  
  return func_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemLogIPC::set_allocated_func(::std::string* func) {
  if (func != NULL) {
    
  } else {
    
  }
  func_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), func);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.func)
}

// string msg = 5;
inline void SystemLogIPC::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SystemLogIPC::msg() const {
  // @@protoc_insertion_point(field_get:inner_ipc.SystemLogIPC.msg)
  return msg_.GetNoArena();
}
inline void SystemLogIPC::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.SystemLogIPC.msg)
}
#if LANG_CXX11
inline void SystemLogIPC::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.SystemLogIPC.msg)
}
#endif
inline void SystemLogIPC::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.SystemLogIPC.msg)
}
inline void SystemLogIPC::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.SystemLogIPC.msg)
}
inline ::std::string* SystemLogIPC::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.SystemLogIPC.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SystemLogIPC::release_msg() {
  // @@protoc_insertion_point(field_release:inner_ipc.SystemLogIPC.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SystemLogIPC::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.SystemLogIPC.msg)
}

// -------------------------------------------------------------------

// NotiIPC

// int32 notiid = 1;
inline void NotiIPC::clear_notiid() {
  notiid_ = 0;
}
inline ::google::protobuf::int32 NotiIPC::notiid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.NotiIPC.notiid)
  return notiid_;
}
inline void NotiIPC::set_notiid(::google::protobuf::int32 value) {
  
  notiid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.NotiIPC.notiid)
}

// string noti = 2;
inline void NotiIPC::clear_noti() {
  noti_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NotiIPC::noti() const {
  // @@protoc_insertion_point(field_get:inner_ipc.NotiIPC.noti)
  return noti_.GetNoArena();
}
inline void NotiIPC::set_noti(const ::std::string& value) {
  
  noti_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.NotiIPC.noti)
}
#if LANG_CXX11
inline void NotiIPC::set_noti(::std::string&& value) {
  
  noti_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.NotiIPC.noti)
}
#endif
inline void NotiIPC::set_noti(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  noti_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.NotiIPC.noti)
}
inline void NotiIPC::set_noti(const char* value, size_t size) {
  
  noti_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.NotiIPC.noti)
}
inline ::std::string* NotiIPC::mutable_noti() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.NotiIPC.noti)
  return noti_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NotiIPC::release_noti() {
  // @@protoc_insertion_point(field_release:inner_ipc.NotiIPC.noti)
  
  return noti_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NotiIPC::set_allocated_noti(::std::string* noti) {
  if (noti != NULL) {
    
  } else {
    
  }
  noti_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noti);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.NotiIPC.noti)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ipc_2eproto__INCLUDED
