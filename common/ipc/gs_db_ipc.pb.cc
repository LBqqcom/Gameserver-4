// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gs_db_ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gs_db_ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace inner_ipc {
class RoleInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleInfo> {
} _RoleInfo_default_instance_;
class LoginInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginInfo> {
} _LoginInfo_default_instance_;
class ReqRoleInfoIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqRoleInfoIPC> {
} _ReqRoleInfoIPC_default_instance_;
class ResRoleInfoIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResRoleInfoIPC> {
} _ResRoleInfoIPC_default_instance_;
class FriendItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FriendItem> {
} _FriendItem_default_instance_;
class ReqFriendsIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqFriendsIPC> {
} _ReqFriendsIPC_default_instance_;
class ResFriendsIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResFriendsIPC> {
} _ResFriendsIPC_default_instance_;
class ReqAddFriendIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqAddFriendIPC> {
} _ReqAddFriendIPC_default_instance_;
class ResAddFriendIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResAddFriendIPC> {
} _ResAddFriendIPC_default_instance_;
class OfflineMsgItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OfflineMsgItem> {
} _OfflineMsgItem_default_instance_;
class ReqOfflineMsgIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReqOfflineMsgIPC> {
} _ReqOfflineMsgIPC_default_instance_;
class ResOfflineMsgIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResOfflineMsgIPC> {
} _ResOfflineMsgIPC_default_instance_;

namespace protobuf_gs_5fdb_5fipc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[12];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleInfo, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginInfo, rid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRoleInfoIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRoleInfoIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRoleInfoIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqRoleInfoIPC, reqrid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRoleInfoIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRoleInfoIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRoleInfoIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRoleInfoIPC, reqrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRoleInfoIPC, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResRoleInfoIPC, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendItem, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendItem, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendItem, timeline_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FriendItem, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFriendsIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFriendsIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFriendsIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqFriendsIPC, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResFriendsIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResFriendsIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResFriendsIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResFriendsIPC, friends_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAddFriendIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAddFriendIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAddFriendIPC, arid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqAddFriendIPC, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAddFriendIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAddFriendIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAddFriendIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAddFriendIPC, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResAddFriendIPC, friend__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, srid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, did_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, tid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, msg_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, stime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OfflineMsgItem, sname_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOfflineMsgIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOfflineMsgIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOfflineMsgIPC, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOfflineMsgIPC, rrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOfflineMsgIPC, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReqOfflineMsgIPC, requestid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOfflineMsgIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOfflineMsgIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOfflineMsgIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOfflineMsgIPC, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResOfflineMsgIPC, msgs_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RoleInfo)},
  { 7, -1, sizeof(LoginInfo)},
  { 13, -1, sizeof(ReqRoleInfoIPC)},
  { 21, -1, sizeof(ResRoleInfoIPC)},
  { 31, -1, sizeof(FriendItem)},
  { 40, -1, sizeof(ReqFriendsIPC)},
  { 48, -1, sizeof(ResFriendsIPC)},
  { 56, -1, sizeof(ReqAddFriendIPC)},
  { 64, -1, sizeof(ResAddFriendIPC)},
  { 73, -1, sizeof(OfflineMsgItem)},
  { 87, -1, sizeof(ReqOfflineMsgIPC)},
  { 97, -1, sizeof(ResOfflineMsgIPC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqRoleInfoIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResRoleInfoIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FriendItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqFriendsIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResFriendsIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqAddFriendIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResAddFriendIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OfflineMsgItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReqOfflineMsgIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResOfflineMsgIPC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gs_db_ipc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

}  // namespace

void TableStruct::Shutdown() {
  _RoleInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LoginInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ReqRoleInfoIPC_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ResRoleInfoIPC_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _FriendItem_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ReqFriendsIPC_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _ResFriendsIPC_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ReqAddFriendIPC_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _ResAddFriendIPC_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _OfflineMsgItem_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _ReqOfflineMsgIPC_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _ResOfflineMsgIPC_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RoleInfo_default_instance_.DefaultConstruct();
  _LoginInfo_default_instance_.DefaultConstruct();
  _ReqRoleInfoIPC_default_instance_.DefaultConstruct();
  _ResRoleInfoIPC_default_instance_.DefaultConstruct();
  _FriendItem_default_instance_.DefaultConstruct();
  _ReqFriendsIPC_default_instance_.DefaultConstruct();
  _ResFriendsIPC_default_instance_.DefaultConstruct();
  _ReqAddFriendIPC_default_instance_.DefaultConstruct();
  _ResAddFriendIPC_default_instance_.DefaultConstruct();
  _OfflineMsgItem_default_instance_.DefaultConstruct();
  _ReqOfflineMsgIPC_default_instance_.DefaultConstruct();
  _ResOfflineMsgIPC_default_instance_.DefaultConstruct();
  _ResRoleInfoIPC_default_instance_.get_mutable()->info_ = const_cast< ::inner_ipc::RoleInfo*>(
      ::inner_ipc::RoleInfo::internal_default_instance());
  _ResAddFriendIPC_default_instance_.get_mutable()->friend__ = const_cast< ::inner_ipc::FriendItem*>(
      ::inner_ipc::FriendItem::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\017gs_db_ipc.proto\022\tinner_ipc\"%\n\010RoleInfo"
      "\022\013\n\003rid\030\002 \001(\005\022\014\n\004name\030\003 \001(\t\"\030\n\tLoginInfo"
      "\022\013\n\003rid\030\001 \001(\005\"@\n\016ReqRoleInfoIPC\022\013\n\003rid\030\001"
      " \001(\005\022\021\n\trequestId\030\002 \001(\005\022\016\n\006reqrid\030\003 \001(\005\""
      "q\n\016ResRoleInfoIPC\022\013\n\003rid\030\001 \001(\005\022\021\n\treques"
      "tId\030\002 \001(\005\022\016\n\006reqrid\030\003 \001(\005\022!\n\004info\030\004 \001(\0132"
      "\023.inner_ipc.RoleInfo\022\014\n\004name\030\005 \001(\t\"M\n\nFr"
      "iendItem\022\013\n\003rid\030\001 \001(\005\022\016\n\006status\030\002 \001(\005\022\020\n"
      "\010timeline\030\003 \001(\005\022\020\n\010username\030\004 \001(\t\"=\n\rReq"
      "FriendsIPC\022\013\n\003rid\030\001 \001(\005\022\021\n\trequestId\030\002 \001"
      "(\005\022\014\n\004type\030\003 \001(\005\"W\n\rResFriendsIPC\022\013\n\003rid"
      "\030\001 \001(\005\022\021\n\trequestId\030\002 \001(\005\022&\n\007friends\030\003 \003"
      "(\0132\025.inner_ipc.FriendItem\"\?\n\017ReqAddFrien"
      "dIPC\022\013\n\003rid\030\001 \001(\005\022\014\n\004arid\030\002 \001(\005\022\021\n\treque"
      "stId\030\003 \001(\005\"h\n\017ResAddFriendIPC\022\013\n\003rid\030\001 \001"
      "(\005\022\021\n\trequestId\030\002 \001(\005\022\016\n\006status\030\003 \001(\005\022%\n"
      "\006friend\030\004 \001(\0132\025.inner_ipc.FriendItem\"\225\001\n"
      "\016OfflineMsgItem\022\014\n\004srid\030\001 \001(\005\022\013\n\003did\030\002 \001"
      "(\005\022\014\n\004type\030\003 \001(\005\022\020\n\010msg_type\030\004 \001(\005\022\013\n\003ti"
      "d\030\005 \001(\005\022\020\n\010msg_size\030\006 \001(\005\022\r\n\005stime\030\007 \001(\005"
      "\022\013\n\003msg\030\010 \001(\t\022\r\n\005sname\030\t \001(\t\"]\n\020ReqOffli"
      "neMsgIPC\022\013\n\003rid\030\001 \001(\005\022\014\n\004type\030\002 \001(\005\022\014\n\004r"
      "rid\030\003 \001(\005\022\r\n\005count\030\004 \001(\005\022\021\n\trequestId\030\005 "
      "\001(\005\"j\n\020ResOfflineMsgIPC\022\013\n\003rid\030\001 \001(\005\022\021\n\t"
      "requestId\030\002 \001(\005\022\r\n\005count\030\003 \001(\005\022\'\n\004msgs\030\004"
      " \003(\0132\031.inner_ipc.OfflineMsgItemb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1039);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gs_db_ipc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gs_5fdb_5fipc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleInfo::kRidFieldNumber;
const int RoleInfo::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleInfo::RoleInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.RoleInfo)
}
RoleInfo::RoleInfo(const RoleInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.RoleInfo)
}

void RoleInfo::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rid_ = 0;
  _cached_size_ = 0;
}

RoleInfo::~RoleInfo() {
  // @@protoc_insertion_point(destructor:inner_ipc.RoleInfo)
  SharedDtor();
}

void RoleInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleInfo::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleInfo& RoleInfo::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleInfo* RoleInfo::New(::google::protobuf::Arena* arena) const {
  RoleInfo* n = new RoleInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.RoleInfo)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rid_ = 0;
}

bool RoleInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.RoleInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.RoleInfo.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.RoleInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.RoleInfo)
  return false;
#undef DO_
}

void RoleInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.RoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 2;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rid(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.RoleInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.RoleInfo)
}

::google::protobuf::uint8* RoleInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.RoleInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 2;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rid(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.RoleInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.RoleInfo)
  return target;
}

size_t RoleInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.RoleInfo)
  size_t total_size = 0;

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.RoleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.RoleInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.RoleInfo)
    MergeFrom(*source);
  }
}

void RoleInfo::MergeFrom(const RoleInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.RoleInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void RoleInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.RoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleInfo::CopyFrom(const RoleInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.RoleInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleInfo::IsInitialized() const {
  return true;
}

void RoleInfo::Swap(RoleInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleInfo::InternalSwap(RoleInfo* other) {
  name_.Swap(&other->name_);
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleInfo::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleInfo

// int32 rid = 2;
void RoleInfo::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 RoleInfo::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.RoleInfo.rid)
  return rid_;
}
void RoleInfo::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.RoleInfo.rid)
}

// string name = 3;
void RoleInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleInfo::name() const {
  // @@protoc_insertion_point(field_get:inner_ipc.RoleInfo.name)
  return name_.GetNoArena();
}
void RoleInfo::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.RoleInfo.name)
}
#if LANG_CXX11
void RoleInfo::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.RoleInfo.name)
}
#endif
void RoleInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.RoleInfo.name)
}
void RoleInfo::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.RoleInfo.name)
}
::std::string* RoleInfo::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.RoleInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleInfo::release_name() {
  // @@protoc_insertion_point(field_release:inner_ipc.RoleInfo.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.RoleInfo.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginInfo::kRidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginInfo::LoginInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.LoginInfo)
}
LoginInfo::LoginInfo(const LoginInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.LoginInfo)
}

void LoginInfo::SharedCtor() {
  rid_ = 0;
  _cached_size_ = 0;
}

LoginInfo::~LoginInfo() {
  // @@protoc_insertion_point(destructor:inner_ipc.LoginInfo)
  SharedDtor();
}

void LoginInfo::SharedDtor() {
}

void LoginInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginInfo::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginInfo& LoginInfo::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginInfo* LoginInfo::New(::google::protobuf::Arena* arena) const {
  LoginInfo* n = new LoginInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.LoginInfo)
  rid_ = 0;
}

bool LoginInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.LoginInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.LoginInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.LoginInfo)
  return false;
#undef DO_
}

void LoginInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.LoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.LoginInfo)
}

::google::protobuf::uint8* LoginInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.LoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.LoginInfo)
  return target;
}

size_t LoginInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.LoginInfo)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.LoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.LoginInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.LoginInfo)
    MergeFrom(*source);
  }
}

void LoginInfo::MergeFrom(const LoginInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.LoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void LoginInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.LoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginInfo::CopyFrom(const LoginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.LoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginInfo::IsInitialized() const {
  return true;
}

void LoginInfo::Swap(LoginInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginInfo::InternalSwap(LoginInfo* other) {
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginInfo::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginInfo

// int32 rid = 1;
void LoginInfo::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 LoginInfo::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.LoginInfo.rid)
  return rid_;
}
void LoginInfo::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.LoginInfo.rid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqRoleInfoIPC::kRidFieldNumber;
const int ReqRoleInfoIPC::kRequestIdFieldNumber;
const int ReqRoleInfoIPC::kReqridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqRoleInfoIPC::ReqRoleInfoIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ReqRoleInfoIPC)
}
ReqRoleInfoIPC::ReqRoleInfoIPC(const ReqRoleInfoIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&reqrid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(reqrid_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ReqRoleInfoIPC)
}

void ReqRoleInfoIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&reqrid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(reqrid_));
  _cached_size_ = 0;
}

ReqRoleInfoIPC::~ReqRoleInfoIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ReqRoleInfoIPC)
  SharedDtor();
}

void ReqRoleInfoIPC::SharedDtor() {
}

void ReqRoleInfoIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqRoleInfoIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqRoleInfoIPC& ReqRoleInfoIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqRoleInfoIPC* ReqRoleInfoIPC::New(::google::protobuf::Arena* arena) const {
  ReqRoleInfoIPC* n = new ReqRoleInfoIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqRoleInfoIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ReqRoleInfoIPC)
  ::memset(&rid_, 0, reinterpret_cast<char*>(&reqrid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(reqrid_));
}

bool ReqRoleInfoIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ReqRoleInfoIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reqrid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reqrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ReqRoleInfoIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ReqRoleInfoIPC)
  return false;
#undef DO_
}

void ReqRoleInfoIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ReqRoleInfoIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requestid(), output);
  }

  // int32 reqrid = 3;
  if (this->reqrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reqrid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ReqRoleInfoIPC)
}

::google::protobuf::uint8* ReqRoleInfoIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ReqRoleInfoIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requestid(), target);
  }

  // int32 reqrid = 3;
  if (this->reqrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reqrid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ReqRoleInfoIPC)
  return target;
}

size_t ReqRoleInfoIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ReqRoleInfoIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 reqrid = 3;
  if (this->reqrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reqrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqRoleInfoIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ReqRoleInfoIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqRoleInfoIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqRoleInfoIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ReqRoleInfoIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ReqRoleInfoIPC)
    MergeFrom(*source);
  }
}

void ReqRoleInfoIPC::MergeFrom(const ReqRoleInfoIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ReqRoleInfoIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.reqrid() != 0) {
    set_reqrid(from.reqrid());
  }
}

void ReqRoleInfoIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ReqRoleInfoIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqRoleInfoIPC::CopyFrom(const ReqRoleInfoIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ReqRoleInfoIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqRoleInfoIPC::IsInitialized() const {
  return true;
}

void ReqRoleInfoIPC::Swap(ReqRoleInfoIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqRoleInfoIPC::InternalSwap(ReqRoleInfoIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(reqrid_, other->reqrid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqRoleInfoIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqRoleInfoIPC

// int32 rid = 1;
void ReqRoleInfoIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ReqRoleInfoIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqRoleInfoIPC.rid)
  return rid_;
}
void ReqRoleInfoIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqRoleInfoIPC.rid)
}

// int32 requestId = 2;
void ReqRoleInfoIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ReqRoleInfoIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqRoleInfoIPC.requestId)
  return requestid_;
}
void ReqRoleInfoIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqRoleInfoIPC.requestId)
}

// int32 reqrid = 3;
void ReqRoleInfoIPC::clear_reqrid() {
  reqrid_ = 0;
}
::google::protobuf::int32 ReqRoleInfoIPC::reqrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqRoleInfoIPC.reqrid)
  return reqrid_;
}
void ReqRoleInfoIPC::set_reqrid(::google::protobuf::int32 value) {
  
  reqrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqRoleInfoIPC.reqrid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResRoleInfoIPC::kRidFieldNumber;
const int ResRoleInfoIPC::kRequestIdFieldNumber;
const int ResRoleInfoIPC::kReqridFieldNumber;
const int ResRoleInfoIPC::kInfoFieldNumber;
const int ResRoleInfoIPC::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResRoleInfoIPC::ResRoleInfoIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ResRoleInfoIPC)
}
ResRoleInfoIPC::ResRoleInfoIPC(const ResRoleInfoIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    info_ = new ::inner_ipc::RoleInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&reqrid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(reqrid_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ResRoleInfoIPC)
}

void ResRoleInfoIPC::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&info_, 0, reinterpret_cast<char*>(&reqrid_) -
    reinterpret_cast<char*>(&info_) + sizeof(reqrid_));
  _cached_size_ = 0;
}

ResRoleInfoIPC::~ResRoleInfoIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ResRoleInfoIPC)
  SharedDtor();
}

void ResRoleInfoIPC::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete info_;
  }
}

void ResRoleInfoIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResRoleInfoIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResRoleInfoIPC& ResRoleInfoIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResRoleInfoIPC* ResRoleInfoIPC::New(::google::protobuf::Arena* arena) const {
  ResRoleInfoIPC* n = new ResRoleInfoIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResRoleInfoIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ResRoleInfoIPC)
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  ::memset(&rid_, 0, reinterpret_cast<char*>(&reqrid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(reqrid_));
}

bool ResRoleInfoIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ResRoleInfoIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 reqrid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reqrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .inner_ipc.RoleInfo info = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.ResRoleInfoIPC.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ResRoleInfoIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ResRoleInfoIPC)
  return false;
#undef DO_
}

void ResRoleInfoIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ResRoleInfoIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requestid(), output);
  }

  // int32 reqrid = 3;
  if (this->reqrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->reqrid(), output);
  }

  // .inner_ipc.RoleInfo info = 4;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.ResRoleInfoIPC.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ResRoleInfoIPC)
}

::google::protobuf::uint8* ResRoleInfoIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ResRoleInfoIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requestid(), target);
  }

  // int32 reqrid = 3;
  if (this->reqrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->reqrid(), target);
  }

  // .inner_ipc.RoleInfo info = 4;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->info_, deterministic, target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.ResRoleInfoIPC.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ResRoleInfoIPC)
  return target;
}

size_t ResRoleInfoIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ResRoleInfoIPC)
  size_t total_size = 0;

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .inner_ipc.RoleInfo info = 4;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 reqrid = 3;
  if (this->reqrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->reqrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResRoleInfoIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ResRoleInfoIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ResRoleInfoIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResRoleInfoIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ResRoleInfoIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ResRoleInfoIPC)
    MergeFrom(*source);
  }
}

void ResRoleInfoIPC::MergeFrom(const ResRoleInfoIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ResRoleInfoIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_info()) {
    mutable_info()->::inner_ipc::RoleInfo::MergeFrom(from.info());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.reqrid() != 0) {
    set_reqrid(from.reqrid());
  }
}

void ResRoleInfoIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ResRoleInfoIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResRoleInfoIPC::CopyFrom(const ResRoleInfoIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ResRoleInfoIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResRoleInfoIPC::IsInitialized() const {
  return true;
}

void ResRoleInfoIPC::Swap(ResRoleInfoIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResRoleInfoIPC::InternalSwap(ResRoleInfoIPC* other) {
  name_.Swap(&other->name_);
  std::swap(info_, other->info_);
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(reqrid_, other->reqrid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResRoleInfoIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResRoleInfoIPC

// int32 rid = 1;
void ResRoleInfoIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ResRoleInfoIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResRoleInfoIPC.rid)
  return rid_;
}
void ResRoleInfoIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResRoleInfoIPC.rid)
}

// int32 requestId = 2;
void ResRoleInfoIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ResRoleInfoIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResRoleInfoIPC.requestId)
  return requestid_;
}
void ResRoleInfoIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResRoleInfoIPC.requestId)
}

// int32 reqrid = 3;
void ResRoleInfoIPC::clear_reqrid() {
  reqrid_ = 0;
}
::google::protobuf::int32 ResRoleInfoIPC::reqrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResRoleInfoIPC.reqrid)
  return reqrid_;
}
void ResRoleInfoIPC::set_reqrid(::google::protobuf::int32 value) {
  
  reqrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResRoleInfoIPC.reqrid)
}

// .inner_ipc.RoleInfo info = 4;
bool ResRoleInfoIPC::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
void ResRoleInfoIPC::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) delete info_;
  info_ = NULL;
}
const ::inner_ipc::RoleInfo& ResRoleInfoIPC::info() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResRoleInfoIPC.info)
  return info_ != NULL ? *info_
                         : *::inner_ipc::RoleInfo::internal_default_instance();
}
::inner_ipc::RoleInfo* ResRoleInfoIPC::mutable_info() {
  
  if (info_ == NULL) {
    info_ = new ::inner_ipc::RoleInfo;
  }
  // @@protoc_insertion_point(field_mutable:inner_ipc.ResRoleInfoIPC.info)
  return info_;
}
::inner_ipc::RoleInfo* ResRoleInfoIPC::release_info() {
  // @@protoc_insertion_point(field_release:inner_ipc.ResRoleInfoIPC.info)
  
  ::inner_ipc::RoleInfo* temp = info_;
  info_ = NULL;
  return temp;
}
void ResRoleInfoIPC::set_allocated_info(::inner_ipc::RoleInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.ResRoleInfoIPC.info)
}

// string name = 5;
void ResRoleInfoIPC::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResRoleInfoIPC::name() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResRoleInfoIPC.name)
  return name_.GetNoArena();
}
void ResRoleInfoIPC::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.ResRoleInfoIPC.name)
}
#if LANG_CXX11
void ResRoleInfoIPC::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.ResRoleInfoIPC.name)
}
#endif
void ResRoleInfoIPC::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.ResRoleInfoIPC.name)
}
void ResRoleInfoIPC::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.ResRoleInfoIPC.name)
}
::std::string* ResRoleInfoIPC::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.ResRoleInfoIPC.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResRoleInfoIPC::release_name() {
  // @@protoc_insertion_point(field_release:inner_ipc.ResRoleInfoIPC.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResRoleInfoIPC::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.ResRoleInfoIPC.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FriendItem::kRidFieldNumber;
const int FriendItem::kStatusFieldNumber;
const int FriendItem::kTimelineFieldNumber;
const int FriendItem::kUsernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FriendItem::FriendItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.FriendItem)
}
FriendItem::FriendItem(const FriendItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&timeline_) -
    reinterpret_cast<char*>(&rid_) + sizeof(timeline_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.FriendItem)
}

void FriendItem::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rid_, 0, reinterpret_cast<char*>(&timeline_) -
    reinterpret_cast<char*>(&rid_) + sizeof(timeline_));
  _cached_size_ = 0;
}

FriendItem::~FriendItem() {
  // @@protoc_insertion_point(destructor:inner_ipc.FriendItem)
  SharedDtor();
}

void FriendItem::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FriendItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FriendItem::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FriendItem& FriendItem::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

FriendItem* FriendItem::New(::google::protobuf::Arena* arena) const {
  FriendItem* n = new FriendItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FriendItem::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.FriendItem)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rid_, 0, reinterpret_cast<char*>(&timeline_) -
    reinterpret_cast<char*>(&rid_) + sizeof(timeline_));
}

bool FriendItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.FriendItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 timeline = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timeline_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string username = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.FriendItem.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.FriendItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.FriendItem)
  return false;
#undef DO_
}

void FriendItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.FriendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->status(), output);
  }

  // int32 timeline = 3;
  if (this->timeline() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->timeline(), output);
  }

  // string username = 4;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.FriendItem.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->username(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.FriendItem)
}

::google::protobuf::uint8* FriendItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.FriendItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 status = 2;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->status(), target);
  }

  // int32 timeline = 3;
  if (this->timeline() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->timeline(), target);
  }

  // string username = 4;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.FriendItem.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->username(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.FriendItem)
  return target;
}

size_t FriendItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.FriendItem)
  size_t total_size = 0;

  // string username = 4;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 status = 2;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  // int32 timeline = 3;
  if (this->timeline() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timeline());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FriendItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.FriendItem)
  GOOGLE_DCHECK_NE(&from, this);
  const FriendItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FriendItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.FriendItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.FriendItem)
    MergeFrom(*source);
  }
}

void FriendItem::MergeFrom(const FriendItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.FriendItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
  if (from.timeline() != 0) {
    set_timeline(from.timeline());
  }
}

void FriendItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.FriendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FriendItem::CopyFrom(const FriendItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.FriendItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FriendItem::IsInitialized() const {
  return true;
}

void FriendItem::Swap(FriendItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FriendItem::InternalSwap(FriendItem* other) {
  username_.Swap(&other->username_);
  std::swap(rid_, other->rid_);
  std::swap(status_, other->status_);
  std::swap(timeline_, other->timeline_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FriendItem::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FriendItem

// int32 rid = 1;
void FriendItem::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 FriendItem::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.FriendItem.rid)
  return rid_;
}
void FriendItem::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.FriendItem.rid)
}

// int32 status = 2;
void FriendItem::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 FriendItem::status() const {
  // @@protoc_insertion_point(field_get:inner_ipc.FriendItem.status)
  return status_;
}
void FriendItem::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.FriendItem.status)
}

// int32 timeline = 3;
void FriendItem::clear_timeline() {
  timeline_ = 0;
}
::google::protobuf::int32 FriendItem::timeline() const {
  // @@protoc_insertion_point(field_get:inner_ipc.FriendItem.timeline)
  return timeline_;
}
void FriendItem::set_timeline(::google::protobuf::int32 value) {
  
  timeline_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.FriendItem.timeline)
}

// string username = 4;
void FriendItem::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FriendItem::username() const {
  // @@protoc_insertion_point(field_get:inner_ipc.FriendItem.username)
  return username_.GetNoArena();
}
void FriendItem::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.FriendItem.username)
}
#if LANG_CXX11
void FriendItem::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.FriendItem.username)
}
#endif
void FriendItem::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.FriendItem.username)
}
void FriendItem::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.FriendItem.username)
}
::std::string* FriendItem::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.FriendItem.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FriendItem::release_username() {
  // @@protoc_insertion_point(field_release:inner_ipc.FriendItem.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FriendItem::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.FriendItem.username)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqFriendsIPC::kRidFieldNumber;
const int ReqFriendsIPC::kRequestIdFieldNumber;
const int ReqFriendsIPC::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqFriendsIPC::ReqFriendsIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ReqFriendsIPC)
}
ReqFriendsIPC::ReqFriendsIPC(const ReqFriendsIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rid_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ReqFriendsIPC)
}

void ReqFriendsIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rid_) + sizeof(type_));
  _cached_size_ = 0;
}

ReqFriendsIPC::~ReqFriendsIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ReqFriendsIPC)
  SharedDtor();
}

void ReqFriendsIPC::SharedDtor() {
}

void ReqFriendsIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqFriendsIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqFriendsIPC& ReqFriendsIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqFriendsIPC* ReqFriendsIPC::New(::google::protobuf::Arena* arena) const {
  ReqFriendsIPC* n = new ReqFriendsIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqFriendsIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ReqFriendsIPC)
  ::memset(&rid_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&rid_) + sizeof(type_));
}

bool ReqFriendsIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ReqFriendsIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ReqFriendsIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ReqFriendsIPC)
  return false;
#undef DO_
}

void ReqFriendsIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ReqFriendsIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requestid(), output);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ReqFriendsIPC)
}

::google::protobuf::uint8* ReqFriendsIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ReqFriendsIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requestid(), target);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ReqFriendsIPC)
  return target;
}

size_t ReqFriendsIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ReqFriendsIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqFriendsIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ReqFriendsIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqFriendsIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqFriendsIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ReqFriendsIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ReqFriendsIPC)
    MergeFrom(*source);
  }
}

void ReqFriendsIPC::MergeFrom(const ReqFriendsIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ReqFriendsIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void ReqFriendsIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ReqFriendsIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqFriendsIPC::CopyFrom(const ReqFriendsIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ReqFriendsIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqFriendsIPC::IsInitialized() const {
  return true;
}

void ReqFriendsIPC::Swap(ReqFriendsIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqFriendsIPC::InternalSwap(ReqFriendsIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(type_, other->type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqFriendsIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqFriendsIPC

// int32 rid = 1;
void ReqFriendsIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ReqFriendsIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqFriendsIPC.rid)
  return rid_;
}
void ReqFriendsIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqFriendsIPC.rid)
}

// int32 requestId = 2;
void ReqFriendsIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ReqFriendsIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqFriendsIPC.requestId)
  return requestid_;
}
void ReqFriendsIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqFriendsIPC.requestId)
}

// int32 type = 3;
void ReqFriendsIPC::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ReqFriendsIPC::type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqFriendsIPC.type)
  return type_;
}
void ReqFriendsIPC::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqFriendsIPC.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResFriendsIPC::kRidFieldNumber;
const int ResFriendsIPC::kRequestIdFieldNumber;
const int ResFriendsIPC::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResFriendsIPC::ResFriendsIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ResFriendsIPC)
}
ResFriendsIPC::ResFriendsIPC(const ResFriendsIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friends_(from.friends_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ResFriendsIPC)
}

void ResFriendsIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
  _cached_size_ = 0;
}

ResFriendsIPC::~ResFriendsIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ResFriendsIPC)
  SharedDtor();
}

void ResFriendsIPC::SharedDtor() {
}

void ResFriendsIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResFriendsIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResFriendsIPC& ResFriendsIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResFriendsIPC* ResFriendsIPC::New(::google::protobuf::Arena* arena) const {
  ResFriendsIPC* n = new ResFriendsIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResFriendsIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ResFriendsIPC)
  friends_.Clear();
  ::memset(&rid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
}

bool ResFriendsIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ResFriendsIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .inner_ipc.FriendItem friends = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ResFriendsIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ResFriendsIPC)
  return false;
#undef DO_
}

void ResFriendsIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ResFriendsIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requestid(), output);
  }

  // repeated .inner_ipc.FriendItem friends = 3;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->friends(i), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ResFriendsIPC)
}

::google::protobuf::uint8* ResFriendsIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ResFriendsIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requestid(), target);
  }

  // repeated .inner_ipc.FriendItem friends = 3;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->friends(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ResFriendsIPC)
  return target;
}

size_t ResFriendsIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ResFriendsIPC)
  size_t total_size = 0;

  // repeated .inner_ipc.FriendItem friends = 3;
  {
    unsigned int count = this->friends_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friends(i));
    }
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResFriendsIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ResFriendsIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ResFriendsIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResFriendsIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ResFriendsIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ResFriendsIPC)
    MergeFrom(*source);
  }
}

void ResFriendsIPC::MergeFrom(const ResFriendsIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ResFriendsIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void ResFriendsIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ResFriendsIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResFriendsIPC::CopyFrom(const ResFriendsIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ResFriendsIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResFriendsIPC::IsInitialized() const {
  return true;
}

void ResFriendsIPC::Swap(ResFriendsIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResFriendsIPC::InternalSwap(ResFriendsIPC* other) {
  friends_.InternalSwap(&other->friends_);
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResFriendsIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResFriendsIPC

// int32 rid = 1;
void ResFriendsIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ResFriendsIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResFriendsIPC.rid)
  return rid_;
}
void ResFriendsIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResFriendsIPC.rid)
}

// int32 requestId = 2;
void ResFriendsIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ResFriendsIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResFriendsIPC.requestId)
  return requestid_;
}
void ResFriendsIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResFriendsIPC.requestId)
}

// repeated .inner_ipc.FriendItem friends = 3;
int ResFriendsIPC::friends_size() const {
  return friends_.size();
}
void ResFriendsIPC::clear_friends() {
  friends_.Clear();
}
const ::inner_ipc::FriendItem& ResFriendsIPC::friends(int index) const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResFriendsIPC.friends)
  return friends_.Get(index);
}
::inner_ipc::FriendItem* ResFriendsIPC::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:inner_ipc.ResFriendsIPC.friends)
  return friends_.Mutable(index);
}
::inner_ipc::FriendItem* ResFriendsIPC::add_friends() {
  // @@protoc_insertion_point(field_add:inner_ipc.ResFriendsIPC.friends)
  return friends_.Add();
}
::google::protobuf::RepeatedPtrField< ::inner_ipc::FriendItem >*
ResFriendsIPC::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:inner_ipc.ResFriendsIPC.friends)
  return &friends_;
}
const ::google::protobuf::RepeatedPtrField< ::inner_ipc::FriendItem >&
ResFriendsIPC::friends() const {
  // @@protoc_insertion_point(field_list:inner_ipc.ResFriendsIPC.friends)
  return friends_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqAddFriendIPC::kRidFieldNumber;
const int ReqAddFriendIPC::kAridFieldNumber;
const int ReqAddFriendIPC::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqAddFriendIPC::ReqAddFriendIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ReqAddFriendIPC)
}
ReqAddFriendIPC::ReqAddFriendIPC(const ReqAddFriendIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ReqAddFriendIPC)
}

void ReqAddFriendIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
  _cached_size_ = 0;
}

ReqAddFriendIPC::~ReqAddFriendIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ReqAddFriendIPC)
  SharedDtor();
}

void ReqAddFriendIPC::SharedDtor() {
}

void ReqAddFriendIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqAddFriendIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqAddFriendIPC& ReqAddFriendIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqAddFriendIPC* ReqAddFriendIPC::New(::google::protobuf::Arena* arena) const {
  ReqAddFriendIPC* n = new ReqAddFriendIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqAddFriendIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ReqAddFriendIPC)
  ::memset(&rid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
}

bool ReqAddFriendIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ReqAddFriendIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 arid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &arid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ReqAddFriendIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ReqAddFriendIPC)
  return false;
#undef DO_
}

void ReqAddFriendIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ReqAddFriendIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 arid = 2;
  if (this->arid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->arid(), output);
  }

  // int32 requestId = 3;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->requestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ReqAddFriendIPC)
}

::google::protobuf::uint8* ReqAddFriendIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ReqAddFriendIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 arid = 2;
  if (this->arid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->arid(), target);
  }

  // int32 requestId = 3;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->requestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ReqAddFriendIPC)
  return target;
}

size_t ReqAddFriendIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ReqAddFriendIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 arid = 2;
  if (this->arid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->arid());
  }

  // int32 requestId = 3;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqAddFriendIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ReqAddFriendIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqAddFriendIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqAddFriendIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ReqAddFriendIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ReqAddFriendIPC)
    MergeFrom(*source);
  }
}

void ReqAddFriendIPC::MergeFrom(const ReqAddFriendIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ReqAddFriendIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.arid() != 0) {
    set_arid(from.arid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void ReqAddFriendIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ReqAddFriendIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqAddFriendIPC::CopyFrom(const ReqAddFriendIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ReqAddFriendIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqAddFriendIPC::IsInitialized() const {
  return true;
}

void ReqAddFriendIPC::Swap(ReqAddFriendIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqAddFriendIPC::InternalSwap(ReqAddFriendIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(arid_, other->arid_);
  std::swap(requestid_, other->requestid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqAddFriendIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqAddFriendIPC

// int32 rid = 1;
void ReqAddFriendIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ReqAddFriendIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqAddFriendIPC.rid)
  return rid_;
}
void ReqAddFriendIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqAddFriendIPC.rid)
}

// int32 arid = 2;
void ReqAddFriendIPC::clear_arid() {
  arid_ = 0;
}
::google::protobuf::int32 ReqAddFriendIPC::arid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqAddFriendIPC.arid)
  return arid_;
}
void ReqAddFriendIPC::set_arid(::google::protobuf::int32 value) {
  
  arid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqAddFriendIPC.arid)
}

// int32 requestId = 3;
void ReqAddFriendIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ReqAddFriendIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqAddFriendIPC.requestId)
  return requestid_;
}
void ReqAddFriendIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqAddFriendIPC.requestId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResAddFriendIPC::kRidFieldNumber;
const int ResAddFriendIPC::kRequestIdFieldNumber;
const int ResAddFriendIPC::kStatusFieldNumber;
const int ResAddFriendIPC::kFriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResAddFriendIPC::ResAddFriendIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ResAddFriendIPC)
}
ResAddFriendIPC::ResAddFriendIPC(const ResAddFriendIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_friend_()) {
    friend__ = new ::inner_ipc::FriendItem(*from.friend__);
  } else {
    friend__ = NULL;
  }
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&rid_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ResAddFriendIPC)
}

void ResAddFriendIPC::SharedCtor() {
  ::memset(&friend__, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&friend__) + sizeof(status_));
  _cached_size_ = 0;
}

ResAddFriendIPC::~ResAddFriendIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ResAddFriendIPC)
  SharedDtor();
}

void ResAddFriendIPC::SharedDtor() {
  if (this != internal_default_instance()) {
    delete friend__;
  }
}

void ResAddFriendIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResAddFriendIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResAddFriendIPC& ResAddFriendIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResAddFriendIPC* ResAddFriendIPC::New(::google::protobuf::Arena* arena) const {
  ResAddFriendIPC* n = new ResAddFriendIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResAddFriendIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ResAddFriendIPC)
  if (GetArenaNoVirtual() == NULL && friend__ != NULL) {
    delete friend__;
  }
  friend__ = NULL;
  ::memset(&rid_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&rid_) + sizeof(status_));
}

bool ResAddFriendIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ResAddFriendIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .inner_ipc.FriendItem friend = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_friend_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ResAddFriendIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ResAddFriendIPC)
  return false;
#undef DO_
}

void ResAddFriendIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ResAddFriendIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requestid(), output);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // .inner_ipc.FriendItem friend = 4;
  if (this->has_friend_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->friend__, output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ResAddFriendIPC)
}

::google::protobuf::uint8* ResAddFriendIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ResAddFriendIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requestid(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // .inner_ipc.FriendItem friend = 4;
  if (this->has_friend_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->friend__, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ResAddFriendIPC)
  return target;
}

size_t ResAddFriendIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ResAddFriendIPC)
  size_t total_size = 0;

  // .inner_ipc.FriendItem friend = 4;
  if (this->has_friend_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->friend__);
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResAddFriendIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ResAddFriendIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ResAddFriendIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResAddFriendIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ResAddFriendIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ResAddFriendIPC)
    MergeFrom(*source);
  }
}

void ResAddFriendIPC::MergeFrom(const ResAddFriendIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ResAddFriendIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_friend_()) {
    mutable_friend_()->::inner_ipc::FriendItem::MergeFrom(from.friend_());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void ResAddFriendIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ResAddFriendIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResAddFriendIPC::CopyFrom(const ResAddFriendIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ResAddFriendIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResAddFriendIPC::IsInitialized() const {
  return true;
}

void ResAddFriendIPC::Swap(ResAddFriendIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResAddFriendIPC::InternalSwap(ResAddFriendIPC* other) {
  std::swap(friend__, other->friend__);
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResAddFriendIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResAddFriendIPC

// int32 rid = 1;
void ResAddFriendIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ResAddFriendIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResAddFriendIPC.rid)
  return rid_;
}
void ResAddFriendIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResAddFriendIPC.rid)
}

// int32 requestId = 2;
void ResAddFriendIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ResAddFriendIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResAddFriendIPC.requestId)
  return requestid_;
}
void ResAddFriendIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResAddFriendIPC.requestId)
}

// int32 status = 3;
void ResAddFriendIPC::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 ResAddFriendIPC::status() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResAddFriendIPC.status)
  return status_;
}
void ResAddFriendIPC::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResAddFriendIPC.status)
}

// .inner_ipc.FriendItem friend = 4;
bool ResAddFriendIPC::has_friend_() const {
  return this != internal_default_instance() && friend__ != NULL;
}
void ResAddFriendIPC::clear_friend_() {
  if (GetArenaNoVirtual() == NULL && friend__ != NULL) delete friend__;
  friend__ = NULL;
}
const ::inner_ipc::FriendItem& ResAddFriendIPC::friend_() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResAddFriendIPC.friend)
  return friend__ != NULL ? *friend__
                         : *::inner_ipc::FriendItem::internal_default_instance();
}
::inner_ipc::FriendItem* ResAddFriendIPC::mutable_friend_() {
  
  if (friend__ == NULL) {
    friend__ = new ::inner_ipc::FriendItem;
  }
  // @@protoc_insertion_point(field_mutable:inner_ipc.ResAddFriendIPC.friend)
  return friend__;
}
::inner_ipc::FriendItem* ResAddFriendIPC::release_friend_() {
  // @@protoc_insertion_point(field_release:inner_ipc.ResAddFriendIPC.friend)
  
  ::inner_ipc::FriendItem* temp = friend__;
  friend__ = NULL;
  return temp;
}
void ResAddFriendIPC::set_allocated_friend_(::inner_ipc::FriendItem* friend_) {
  delete friend__;
  friend__ = friend_;
  if (friend_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.ResAddFriendIPC.friend)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OfflineMsgItem::kSridFieldNumber;
const int OfflineMsgItem::kDidFieldNumber;
const int OfflineMsgItem::kTypeFieldNumber;
const int OfflineMsgItem::kMsgTypeFieldNumber;
const int OfflineMsgItem::kTidFieldNumber;
const int OfflineMsgItem::kMsgSizeFieldNumber;
const int OfflineMsgItem::kStimeFieldNumber;
const int OfflineMsgItem::kMsgFieldNumber;
const int OfflineMsgItem::kSnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OfflineMsgItem::OfflineMsgItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.OfflineMsgItem)
}
OfflineMsgItem::OfflineMsgItem(const OfflineMsgItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sname().size() > 0) {
    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  ::memcpy(&srid_, &from.srid_,
    reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&srid_) + sizeof(stime_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.OfflineMsgItem)
}

void OfflineMsgItem::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srid_, 0, reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&srid_) + sizeof(stime_));
  _cached_size_ = 0;
}

OfflineMsgItem::~OfflineMsgItem() {
  // @@protoc_insertion_point(destructor:inner_ipc.OfflineMsgItem)
  SharedDtor();
}

void OfflineMsgItem::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OfflineMsgItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OfflineMsgItem::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OfflineMsgItem& OfflineMsgItem::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

OfflineMsgItem* OfflineMsgItem::New(::google::protobuf::Arena* arena) const {
  OfflineMsgItem* n = new OfflineMsgItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OfflineMsgItem::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.OfflineMsgItem)
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&srid_, 0, reinterpret_cast<char*>(&stime_) -
    reinterpret_cast<char*>(&srid_) + sizeof(stime_));
}

bool OfflineMsgItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.OfflineMsgItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 srid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 did = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &did_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msg_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 tid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 msg_size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msg_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.OfflineMsgItem.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sname = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sname().data(), this->sname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.OfflineMsgItem.sname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.OfflineMsgItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.OfflineMsgItem)
  return false;
#undef DO_
}

void OfflineMsgItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.OfflineMsgItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 srid = 1;
  if (this->srid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srid(), output);
  }

  // int32 did = 2;
  if (this->did() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->did(), output);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->type(), output);
  }

  // int32 msg_type = 4;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->msg_type(), output);
  }

  // int32 tid = 5;
  if (this->tid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tid(), output);
  }

  // int32 msg_size = 6;
  if (this->msg_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->msg_size(), output);
  }

  // int32 stime = 7;
  if (this->stime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stime(), output);
  }

  // string msg = 8;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.OfflineMsgItem.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->msg(), output);
  }

  // string sname = 9;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.OfflineMsgItem.sname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->sname(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.OfflineMsgItem)
}

::google::protobuf::uint8* OfflineMsgItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.OfflineMsgItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 srid = 1;
  if (this->srid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srid(), target);
  }

  // int32 did = 2;
  if (this->did() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->did(), target);
  }

  // int32 type = 3;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->type(), target);
  }

  // int32 msg_type = 4;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->msg_type(), target);
  }

  // int32 tid = 5;
  if (this->tid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tid(), target);
  }

  // int32 msg_size = 6;
  if (this->msg_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->msg_size(), target);
  }

  // int32 stime = 7;
  if (this->stime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stime(), target);
  }

  // string msg = 8;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.OfflineMsgItem.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->msg(), target);
  }

  // string sname = 9;
  if (this->sname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sname().data(), this->sname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.OfflineMsgItem.sname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->sname(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.OfflineMsgItem)
  return target;
}

size_t OfflineMsgItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.OfflineMsgItem)
  size_t total_size = 0;

  // string msg = 8;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string sname = 9;
  if (this->sname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sname());
  }

  // int32 srid = 1;
  if (this->srid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->srid());
  }

  // int32 did = 2;
  if (this->did() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->did());
  }

  // int32 type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 msg_type = 4;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_type());
  }

  // int32 tid = 5;
  if (this->tid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tid());
  }

  // int32 msg_size = 6;
  if (this->msg_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->msg_size());
  }

  // int32 stime = 7;
  if (this->stime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OfflineMsgItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.OfflineMsgItem)
  GOOGLE_DCHECK_NE(&from, this);
  const OfflineMsgItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OfflineMsgItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.OfflineMsgItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.OfflineMsgItem)
    MergeFrom(*source);
  }
}

void OfflineMsgItem::MergeFrom(const OfflineMsgItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.OfflineMsgItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.sname().size() > 0) {

    sname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sname_);
  }
  if (from.srid() != 0) {
    set_srid(from.srid());
  }
  if (from.did() != 0) {
    set_did(from.did());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.tid() != 0) {
    set_tid(from.tid());
  }
  if (from.msg_size() != 0) {
    set_msg_size(from.msg_size());
  }
  if (from.stime() != 0) {
    set_stime(from.stime());
  }
}

void OfflineMsgItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.OfflineMsgItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OfflineMsgItem::CopyFrom(const OfflineMsgItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.OfflineMsgItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMsgItem::IsInitialized() const {
  return true;
}

void OfflineMsgItem::Swap(OfflineMsgItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OfflineMsgItem::InternalSwap(OfflineMsgItem* other) {
  msg_.Swap(&other->msg_);
  sname_.Swap(&other->sname_);
  std::swap(srid_, other->srid_);
  std::swap(did_, other->did_);
  std::swap(type_, other->type_);
  std::swap(msg_type_, other->msg_type_);
  std::swap(tid_, other->tid_);
  std::swap(msg_size_, other->msg_size_);
  std::swap(stime_, other->stime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OfflineMsgItem::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineMsgItem

// int32 srid = 1;
void OfflineMsgItem::clear_srid() {
  srid_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::srid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.srid)
  return srid_;
}
void OfflineMsgItem::set_srid(::google::protobuf::int32 value) {
  
  srid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.srid)
}

// int32 did = 2;
void OfflineMsgItem::clear_did() {
  did_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::did() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.did)
  return did_;
}
void OfflineMsgItem::set_did(::google::protobuf::int32 value) {
  
  did_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.did)
}

// int32 type = 3;
void OfflineMsgItem::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.type)
  return type_;
}
void OfflineMsgItem::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.type)
}

// int32 msg_type = 4;
void OfflineMsgItem::clear_msg_type() {
  msg_type_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::msg_type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.msg_type)
  return msg_type_;
}
void OfflineMsgItem::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.msg_type)
}

// int32 tid = 5;
void OfflineMsgItem::clear_tid() {
  tid_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::tid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.tid)
  return tid_;
}
void OfflineMsgItem::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.tid)
}

// int32 msg_size = 6;
void OfflineMsgItem::clear_msg_size() {
  msg_size_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::msg_size() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.msg_size)
  return msg_size_;
}
void OfflineMsgItem::set_msg_size(::google::protobuf::int32 value) {
  
  msg_size_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.msg_size)
}

// int32 stime = 7;
void OfflineMsgItem::clear_stime() {
  stime_ = 0;
}
::google::protobuf::int32 OfflineMsgItem::stime() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.stime)
  return stime_;
}
void OfflineMsgItem::set_stime(::google::protobuf::int32 value) {
  
  stime_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.stime)
}

// string msg = 8;
void OfflineMsgItem::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OfflineMsgItem::msg() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.msg)
  return msg_.GetNoArena();
}
void OfflineMsgItem::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.msg)
}
#if LANG_CXX11
void OfflineMsgItem::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.OfflineMsgItem.msg)
}
#endif
void OfflineMsgItem::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.OfflineMsgItem.msg)
}
void OfflineMsgItem::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.OfflineMsgItem.msg)
}
::std::string* OfflineMsgItem::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.OfflineMsgItem.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OfflineMsgItem::release_msg() {
  // @@protoc_insertion_point(field_release:inner_ipc.OfflineMsgItem.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OfflineMsgItem::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.OfflineMsgItem.msg)
}

// string sname = 9;
void OfflineMsgItem::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OfflineMsgItem::sname() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgItem.sname)
  return sname_.GetNoArena();
}
void OfflineMsgItem::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgItem.sname)
}
#if LANG_CXX11
void OfflineMsgItem::set_sname(::std::string&& value) {
  
  sname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.OfflineMsgItem.sname)
}
#endif
void OfflineMsgItem::set_sname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.OfflineMsgItem.sname)
}
void OfflineMsgItem::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.OfflineMsgItem.sname)
}
::std::string* OfflineMsgItem::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.OfflineMsgItem.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OfflineMsgItem::release_sname() {
  // @@protoc_insertion_point(field_release:inner_ipc.OfflineMsgItem.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OfflineMsgItem::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.OfflineMsgItem.sname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReqOfflineMsgIPC::kRidFieldNumber;
const int ReqOfflineMsgIPC::kTypeFieldNumber;
const int ReqOfflineMsgIPC::kRridFieldNumber;
const int ReqOfflineMsgIPC::kCountFieldNumber;
const int ReqOfflineMsgIPC::kRequestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReqOfflineMsgIPC::ReqOfflineMsgIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ReqOfflineMsgIPC)
}
ReqOfflineMsgIPC::ReqOfflineMsgIPC(const ReqOfflineMsgIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ReqOfflineMsgIPC)
}

void ReqOfflineMsgIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
  _cached_size_ = 0;
}

ReqOfflineMsgIPC::~ReqOfflineMsgIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ReqOfflineMsgIPC)
  SharedDtor();
}

void ReqOfflineMsgIPC::SharedDtor() {
}

void ReqOfflineMsgIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReqOfflineMsgIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReqOfflineMsgIPC& ReqOfflineMsgIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReqOfflineMsgIPC* ReqOfflineMsgIPC::New(::google::protobuf::Arena* arena) const {
  ReqOfflineMsgIPC* n = new ReqOfflineMsgIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReqOfflineMsgIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ReqOfflineMsgIPC)
  ::memset(&rid_, 0, reinterpret_cast<char*>(&requestid_) -
    reinterpret_cast<char*>(&rid_) + sizeof(requestid_));
}

bool ReqOfflineMsgIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ReqOfflineMsgIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rrid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ReqOfflineMsgIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ReqOfflineMsgIPC)
  return false;
#undef DO_
}

void ReqOfflineMsgIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ReqOfflineMsgIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // int32 rrid = 3;
  if (this->rrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rrid(), output);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // int32 requestId = 5;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->requestid(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ReqOfflineMsgIPC)
}

::google::protobuf::uint8* ReqOfflineMsgIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ReqOfflineMsgIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // int32 rrid = 3;
  if (this->rrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rrid(), target);
  }

  // int32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // int32 requestId = 5;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->requestid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ReqOfflineMsgIPC)
  return target;
}

size_t ReqOfflineMsgIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ReqOfflineMsgIPC)
  size_t total_size = 0;

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 rrid = 3;
  if (this->rrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rrid());
  }

  // int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // int32 requestId = 5;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReqOfflineMsgIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ReqOfflineMsgIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ReqOfflineMsgIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReqOfflineMsgIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ReqOfflineMsgIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ReqOfflineMsgIPC)
    MergeFrom(*source);
  }
}

void ReqOfflineMsgIPC::MergeFrom(const ReqOfflineMsgIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ReqOfflineMsgIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.rrid() != 0) {
    set_rrid(from.rrid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void ReqOfflineMsgIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ReqOfflineMsgIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReqOfflineMsgIPC::CopyFrom(const ReqOfflineMsgIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ReqOfflineMsgIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReqOfflineMsgIPC::IsInitialized() const {
  return true;
}

void ReqOfflineMsgIPC::Swap(ReqOfflineMsgIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReqOfflineMsgIPC::InternalSwap(ReqOfflineMsgIPC* other) {
  std::swap(rid_, other->rid_);
  std::swap(type_, other->type_);
  std::swap(rrid_, other->rrid_);
  std::swap(count_, other->count_);
  std::swap(requestid_, other->requestid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReqOfflineMsgIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReqOfflineMsgIPC

// int32 rid = 1;
void ReqOfflineMsgIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ReqOfflineMsgIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqOfflineMsgIPC.rid)
  return rid_;
}
void ReqOfflineMsgIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqOfflineMsgIPC.rid)
}

// int32 type = 2;
void ReqOfflineMsgIPC::clear_type() {
  type_ = 0;
}
::google::protobuf::int32 ReqOfflineMsgIPC::type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqOfflineMsgIPC.type)
  return type_;
}
void ReqOfflineMsgIPC::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqOfflineMsgIPC.type)
}

// int32 rrid = 3;
void ReqOfflineMsgIPC::clear_rrid() {
  rrid_ = 0;
}
::google::protobuf::int32 ReqOfflineMsgIPC::rrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqOfflineMsgIPC.rrid)
  return rrid_;
}
void ReqOfflineMsgIPC::set_rrid(::google::protobuf::int32 value) {
  
  rrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqOfflineMsgIPC.rrid)
}

// int32 count = 4;
void ReqOfflineMsgIPC::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 ReqOfflineMsgIPC::count() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqOfflineMsgIPC.count)
  return count_;
}
void ReqOfflineMsgIPC::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqOfflineMsgIPC.count)
}

// int32 requestId = 5;
void ReqOfflineMsgIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ReqOfflineMsgIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ReqOfflineMsgIPC.requestId)
  return requestid_;
}
void ReqOfflineMsgIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ReqOfflineMsgIPC.requestId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResOfflineMsgIPC::kRidFieldNumber;
const int ResOfflineMsgIPC::kRequestIdFieldNumber;
const int ResOfflineMsgIPC::kCountFieldNumber;
const int ResOfflineMsgIPC::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResOfflineMsgIPC::ResOfflineMsgIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.ResOfflineMsgIPC)
}
ResOfflineMsgIPC::ResOfflineMsgIPC(const ResOfflineMsgIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      msgs_(from.msgs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rid_, &from.rid_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&rid_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.ResOfflineMsgIPC)
}

void ResOfflineMsgIPC::SharedCtor() {
  ::memset(&rid_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&rid_) + sizeof(count_));
  _cached_size_ = 0;
}

ResOfflineMsgIPC::~ResOfflineMsgIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.ResOfflineMsgIPC)
  SharedDtor();
}

void ResOfflineMsgIPC::SharedDtor() {
}

void ResOfflineMsgIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResOfflineMsgIPC::descriptor() {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResOfflineMsgIPC& ResOfflineMsgIPC::default_instance() {
  protobuf_gs_5fdb_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResOfflineMsgIPC* ResOfflineMsgIPC::New(::google::protobuf::Arena* arena) const {
  ResOfflineMsgIPC* n = new ResOfflineMsgIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResOfflineMsgIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.ResOfflineMsgIPC)
  msgs_.Clear();
  ::memset(&rid_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&rid_) + sizeof(count_));
}

bool ResOfflineMsgIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.ResOfflineMsgIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .inner_ipc.OfflineMsgItem msgs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.ResOfflineMsgIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.ResOfflineMsgIPC)
  return false;
#undef DO_
}

void ResOfflineMsgIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.ResOfflineMsgIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requestid(), output);
  }

  // int32 count = 3;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->count(), output);
  }

  // repeated .inner_ipc.OfflineMsgItem msgs = 4;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->msgs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.ResOfflineMsgIPC)
}

::google::protobuf::uint8* ResOfflineMsgIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.ResOfflineMsgIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requestid(), target);
  }

  // int32 count = 3;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->count(), target);
  }

  // repeated .inner_ipc.OfflineMsgItem msgs = 4;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->msgs(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.ResOfflineMsgIPC)
  return target;
}

size_t ResOfflineMsgIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.ResOfflineMsgIPC)
  size_t total_size = 0;

  // repeated .inner_ipc.OfflineMsgItem msgs = 4;
  {
    unsigned int count = this->msgs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgs(i));
    }
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 2;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 count = 3;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResOfflineMsgIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.ResOfflineMsgIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const ResOfflineMsgIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResOfflineMsgIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.ResOfflineMsgIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.ResOfflineMsgIPC)
    MergeFrom(*source);
  }
}

void ResOfflineMsgIPC::MergeFrom(const ResOfflineMsgIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.ResOfflineMsgIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void ResOfflineMsgIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.ResOfflineMsgIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResOfflineMsgIPC::CopyFrom(const ResOfflineMsgIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.ResOfflineMsgIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResOfflineMsgIPC::IsInitialized() const {
  return true;
}

void ResOfflineMsgIPC::Swap(ResOfflineMsgIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResOfflineMsgIPC::InternalSwap(ResOfflineMsgIPC* other) {
  msgs_.InternalSwap(&other->msgs_);
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(count_, other->count_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResOfflineMsgIPC::GetMetadata() const {
  protobuf_gs_5fdb_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5fdb_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResOfflineMsgIPC

// int32 rid = 1;
void ResOfflineMsgIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 ResOfflineMsgIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResOfflineMsgIPC.rid)
  return rid_;
}
void ResOfflineMsgIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResOfflineMsgIPC.rid)
}

// int32 requestId = 2;
void ResOfflineMsgIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 ResOfflineMsgIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResOfflineMsgIPC.requestId)
  return requestid_;
}
void ResOfflineMsgIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResOfflineMsgIPC.requestId)
}

// int32 count = 3;
void ResOfflineMsgIPC::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 ResOfflineMsgIPC::count() const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResOfflineMsgIPC.count)
  return count_;
}
void ResOfflineMsgIPC::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.ResOfflineMsgIPC.count)
}

// repeated .inner_ipc.OfflineMsgItem msgs = 4;
int ResOfflineMsgIPC::msgs_size() const {
  return msgs_.size();
}
void ResOfflineMsgIPC::clear_msgs() {
  msgs_.Clear();
}
const ::inner_ipc::OfflineMsgItem& ResOfflineMsgIPC::msgs(int index) const {
  // @@protoc_insertion_point(field_get:inner_ipc.ResOfflineMsgIPC.msgs)
  return msgs_.Get(index);
}
::inner_ipc::OfflineMsgItem* ResOfflineMsgIPC::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:inner_ipc.ResOfflineMsgIPC.msgs)
  return msgs_.Mutable(index);
}
::inner_ipc::OfflineMsgItem* ResOfflineMsgIPC::add_msgs() {
  // @@protoc_insertion_point(field_add:inner_ipc.ResOfflineMsgIPC.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::inner_ipc::OfflineMsgItem >*
ResOfflineMsgIPC::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:inner_ipc.ResOfflineMsgIPC.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::inner_ipc::OfflineMsgItem >&
ResOfflineMsgIPC::msgs() const {
  // @@protoc_insertion_point(field_list:inner_ipc.ResOfflineMsgIPC.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)
