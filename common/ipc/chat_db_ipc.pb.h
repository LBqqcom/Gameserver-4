// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: chat_db_ipc.proto

#ifndef PROTOBUF_chat_5fdb_5fipc_2eproto__INCLUDED
#define PROTOBUF_chat_5fdb_5fipc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace inner_ipc {
class EmailBody;
class EmailBodyDefaultTypeInternal;
extern EmailBodyDefaultTypeInternal _EmailBody_default_instance_;
class EmailMsgIPC;
class EmailMsgIPCDefaultTypeInternal;
extern EmailMsgIPCDefaultTypeInternal _EmailMsgIPC_default_instance_;
class OfflineGoodsIPC;
class OfflineGoodsIPCDefaultTypeInternal;
extern OfflineGoodsIPCDefaultTypeInternal _OfflineGoodsIPC_default_instance_;
class OfflineMsgIPC;
class OfflineMsgIPCDefaultTypeInternal;
extern OfflineMsgIPCDefaultTypeInternal _OfflineMsgIPC_default_instance_;
}  // namespace inner_ipc

namespace inner_ipc {

namespace protobuf_chat_5fdb_5fipc_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_chat_5fdb_5fipc_2eproto

// ===================================================================

class OfflineMsgIPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inner_ipc.OfflineMsgIPC) */ {
 public:
  OfflineMsgIPC();
  virtual ~OfflineMsgIPC();

  OfflineMsgIPC(const OfflineMsgIPC& from);

  inline OfflineMsgIPC& operator=(const OfflineMsgIPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineMsgIPC& default_instance();

  static inline const OfflineMsgIPC* internal_default_instance() {
    return reinterpret_cast<const OfflineMsgIPC*>(
               &_OfflineMsgIPC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OfflineMsgIPC* other);

  // implements Message ----------------------------------------------

  inline OfflineMsgIPC* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineMsgIPC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineMsgIPC& from);
  void MergeFrom(const OfflineMsgIPC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineMsgIPC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 8;
  void clear_msg();
  static const int kMsgFieldNumber = 8;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // string sname = 9;
  void clear_sname();
  static const int kSnameFieldNumber = 9;
  const ::std::string& sname() const;
  void set_sname(const ::std::string& value);
  #if LANG_CXX11
  void set_sname(::std::string&& value);
  #endif
  void set_sname(const char* value);
  void set_sname(const char* value, size_t size);
  ::std::string* mutable_sname();
  ::std::string* release_sname();
  void set_allocated_sname(::std::string* sname);

  // int32 srid = 1;
  void clear_srid();
  static const int kSridFieldNumber = 1;
  ::google::protobuf::int32 srid() const;
  void set_srid(::google::protobuf::int32 value);

  // int32 did = 2;
  void clear_did();
  static const int kDidFieldNumber = 2;
  ::google::protobuf::int32 did() const;
  void set_did(::google::protobuf::int32 value);

  // int32 type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 msg_type = 4;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 4;
  ::google::protobuf::int32 msg_type() const;
  void set_msg_type(::google::protobuf::int32 value);

  // int32 tid = 5;
  void clear_tid();
  static const int kTidFieldNumber = 5;
  ::google::protobuf::int32 tid() const;
  void set_tid(::google::protobuf::int32 value);

  // int32 size = 6;
  void clear_size();
  static const int kSizeFieldNumber = 6;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // int32 stime = 7;
  void clear_stime();
  static const int kStimeFieldNumber = 7;
  ::google::protobuf::int32 stime() const;
  void set_stime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:inner_ipc.OfflineMsgIPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::internal::ArenaStringPtr sname_;
  ::google::protobuf::int32 srid_;
  ::google::protobuf::int32 did_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 msg_type_;
  ::google::protobuf::int32 tid_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 stime_;
  mutable int _cached_size_;
  friend struct protobuf_chat_5fdb_5fipc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmailBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inner_ipc.EmailBody) */ {
 public:
  EmailBody();
  virtual ~EmailBody();

  EmailBody(const EmailBody& from);

  inline EmailBody& operator=(const EmailBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmailBody& default_instance();

  static inline const EmailBody* internal_default_instance() {
    return reinterpret_cast<const EmailBody*>(
               &_EmailBody_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EmailBody* other);

  // implements Message ----------------------------------------------

  inline EmailBody* New() const PROTOBUF_FINAL { return New(NULL); }

  EmailBody* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmailBody& from);
  void MergeFrom(const EmailBody& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmailBody* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string emailBody = 2;
  void clear_emailbody();
  static const int kEmailBodyFieldNumber = 2;
  const ::std::string& emailbody() const;
  void set_emailbody(const ::std::string& value);
  #if LANG_CXX11
  void set_emailbody(::std::string&& value);
  #endif
  void set_emailbody(const char* value);
  void set_emailbody(const char* value, size_t size);
  ::std::string* mutable_emailbody();
  ::std::string* release_emailbody();
  void set_allocated_emailbody(::std::string* emailbody);

  // int32 emailType = 1;
  void clear_emailtype();
  static const int kEmailTypeFieldNumber = 1;
  ::google::protobuf::int32 emailtype() const;
  void set_emailtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:inner_ipc.EmailBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr emailbody_;
  ::google::protobuf::int32 emailtype_;
  mutable int _cached_size_;
  friend struct protobuf_chat_5fdb_5fipc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EmailMsgIPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inner_ipc.EmailMsgIPC) */ {
 public:
  EmailMsgIPC();
  virtual ~EmailMsgIPC();

  EmailMsgIPC(const EmailMsgIPC& from);

  inline EmailMsgIPC& operator=(const EmailMsgIPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EmailMsgIPC& default_instance();

  static inline const EmailMsgIPC* internal_default_instance() {
    return reinterpret_cast<const EmailMsgIPC*>(
               &_EmailMsgIPC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(EmailMsgIPC* other);

  // implements Message ----------------------------------------------

  inline EmailMsgIPC* New() const PROTOBUF_FINAL { return New(NULL); }

  EmailMsgIPC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EmailMsgIPC& from);
  void MergeFrom(const EmailMsgIPC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EmailMsgIPC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .inner_ipc.EmailBody emailBody = 5;
  int emailbody_size() const;
  void clear_emailbody();
  static const int kEmailBodyFieldNumber = 5;
  const ::inner_ipc::EmailBody& emailbody(int index) const;
  ::inner_ipc::EmailBody* mutable_emailbody(int index);
  ::inner_ipc::EmailBody* add_emailbody();
  ::google::protobuf::RepeatedPtrField< ::inner_ipc::EmailBody >*
      mutable_emailbody();
  const ::google::protobuf::RepeatedPtrField< ::inner_ipc::EmailBody >&
      emailbody() const;

  // string emailHead = 4;
  void clear_emailhead();
  static const int kEmailHeadFieldNumber = 4;
  const ::std::string& emailhead() const;
  void set_emailhead(const ::std::string& value);
  #if LANG_CXX11
  void set_emailhead(::std::string&& value);
  #endif
  void set_emailhead(const char* value);
  void set_emailhead(const char* value, size_t size);
  ::std::string* mutable_emailhead();
  ::std::string* release_emailhead();
  void set_allocated_emailhead(::std::string* emailhead);

  // int32 sendRid = 1;
  void clear_sendrid();
  static const int kSendRidFieldNumber = 1;
  ::google::protobuf::int32 sendrid() const;
  void set_sendrid(::google::protobuf::int32 value);

  // int32 recvRid = 2;
  void clear_recvrid();
  static const int kRecvRidFieldNumber = 2;
  ::google::protobuf::int32 recvrid() const;
  void set_recvrid(::google::protobuf::int32 value);

  // int32 emailType = 3;
  void clear_emailtype();
  static const int kEmailTypeFieldNumber = 3;
  ::google::protobuf::int32 emailtype() const;
  void set_emailtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:inner_ipc.EmailMsgIPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::inner_ipc::EmailBody > emailbody_;
  ::google::protobuf::internal::ArenaStringPtr emailhead_;
  ::google::protobuf::int32 sendrid_;
  ::google::protobuf::int32 recvrid_;
  ::google::protobuf::int32 emailtype_;
  mutable int _cached_size_;
  friend struct protobuf_chat_5fdb_5fipc_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OfflineGoodsIPC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:inner_ipc.OfflineGoodsIPC) */ {
 public:
  OfflineGoodsIPC();
  virtual ~OfflineGoodsIPC();

  OfflineGoodsIPC(const OfflineGoodsIPC& from);

  inline OfflineGoodsIPC& operator=(const OfflineGoodsIPC& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OfflineGoodsIPC& default_instance();

  static inline const OfflineGoodsIPC* internal_default_instance() {
    return reinterpret_cast<const OfflineGoodsIPC*>(
               &_OfflineGoodsIPC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(OfflineGoodsIPC* other);

  // implements Message ----------------------------------------------

  inline OfflineGoodsIPC* New() const PROTOBUF_FINAL { return New(NULL); }

  OfflineGoodsIPC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OfflineGoodsIPC& from);
  void MergeFrom(const OfflineGoodsIPC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OfflineGoodsIPC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 sendRid = 1;
  void clear_sendrid();
  static const int kSendRidFieldNumber = 1;
  ::google::protobuf::int32 sendrid() const;
  void set_sendrid(::google::protobuf::int32 value);

  // int32 recvRid = 2;
  void clear_recvrid();
  static const int kRecvRidFieldNumber = 2;
  ::google::protobuf::int32 recvrid() const;
  void set_recvrid(::google::protobuf::int32 value);

  // int32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // int32 goodsId = 4;
  void clear_goodsid();
  static const int kGoodsIdFieldNumber = 4;
  ::google::protobuf::int32 goodsid() const;
  void set_goodsid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:inner_ipc.OfflineGoodsIPC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 sendrid_;
  ::google::protobuf::int32 recvrid_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 goodsid_;
  mutable int _cached_size_;
  friend struct protobuf_chat_5fdb_5fipc_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// OfflineMsgIPC

// int32 srid = 1;
inline void OfflineMsgIPC::clear_srid() {
  srid_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::srid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.srid)
  return srid_;
}
inline void OfflineMsgIPC::set_srid(::google::protobuf::int32 value) {
  
  srid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.srid)
}

// int32 did = 2;
inline void OfflineMsgIPC::clear_did() {
  did_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::did() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.did)
  return did_;
}
inline void OfflineMsgIPC::set_did(::google::protobuf::int32 value) {
  
  did_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.did)
}

// int32 type = 3;
inline void OfflineMsgIPC::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.type)
  return type_;
}
inline void OfflineMsgIPC::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.type)
}

// int32 msg_type = 4;
inline void OfflineMsgIPC::clear_msg_type() {
  msg_type_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::msg_type() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.msg_type)
  return msg_type_;
}
inline void OfflineMsgIPC::set_msg_type(::google::protobuf::int32 value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.msg_type)
}

// int32 tid = 5;
inline void OfflineMsgIPC::clear_tid() {
  tid_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::tid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.tid)
  return tid_;
}
inline void OfflineMsgIPC::set_tid(::google::protobuf::int32 value) {
  
  tid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.tid)
}

// int32 size = 6;
inline void OfflineMsgIPC::clear_size() {
  size_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::size() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.size)
  return size_;
}
inline void OfflineMsgIPC::set_size(::google::protobuf::int32 value) {
  
  size_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.size)
}

// int32 stime = 7;
inline void OfflineMsgIPC::clear_stime() {
  stime_ = 0;
}
inline ::google::protobuf::int32 OfflineMsgIPC::stime() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.stime)
  return stime_;
}
inline void OfflineMsgIPC::set_stime(::google::protobuf::int32 value) {
  
  stime_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.stime)
}

// string msg = 8;
inline void OfflineMsgIPC::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineMsgIPC::msg() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.msg)
  return msg_.GetNoArena();
}
inline void OfflineMsgIPC::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.msg)
}
#if LANG_CXX11
inline void OfflineMsgIPC::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.OfflineMsgIPC.msg)
}
#endif
inline void OfflineMsgIPC::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.OfflineMsgIPC.msg)
}
inline void OfflineMsgIPC::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.OfflineMsgIPC.msg)
}
inline ::std::string* OfflineMsgIPC::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.OfflineMsgIPC.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineMsgIPC::release_msg() {
  // @@protoc_insertion_point(field_release:inner_ipc.OfflineMsgIPC.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineMsgIPC::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.OfflineMsgIPC.msg)
}

// string sname = 9;
inline void OfflineMsgIPC::clear_sname() {
  sname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OfflineMsgIPC::sname() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineMsgIPC.sname)
  return sname_.GetNoArena();
}
inline void OfflineMsgIPC::set_sname(const ::std::string& value) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineMsgIPC.sname)
}
#if LANG_CXX11
inline void OfflineMsgIPC::set_sname(::std::string&& value) {
  
  sname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.OfflineMsgIPC.sname)
}
#endif
inline void OfflineMsgIPC::set_sname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.OfflineMsgIPC.sname)
}
inline void OfflineMsgIPC::set_sname(const char* value, size_t size) {
  
  sname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.OfflineMsgIPC.sname)
}
inline ::std::string* OfflineMsgIPC::mutable_sname() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.OfflineMsgIPC.sname)
  return sname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OfflineMsgIPC::release_sname() {
  // @@protoc_insertion_point(field_release:inner_ipc.OfflineMsgIPC.sname)
  
  return sname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OfflineMsgIPC::set_allocated_sname(::std::string* sname) {
  if (sname != NULL) {
    
  } else {
    
  }
  sname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sname);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.OfflineMsgIPC.sname)
}

// -------------------------------------------------------------------

// EmailBody

// int32 emailType = 1;
inline void EmailBody::clear_emailtype() {
  emailtype_ = 0;
}
inline ::google::protobuf::int32 EmailBody::emailtype() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailBody.emailType)
  return emailtype_;
}
inline void EmailBody::set_emailtype(::google::protobuf::int32 value) {
  
  emailtype_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.EmailBody.emailType)
}

// string emailBody = 2;
inline void EmailBody::clear_emailbody() {
  emailbody_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EmailBody::emailbody() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailBody.emailBody)
  return emailbody_.GetNoArena();
}
inline void EmailBody::set_emailbody(const ::std::string& value) {
  
  emailbody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.EmailBody.emailBody)
}
#if LANG_CXX11
inline void EmailBody::set_emailbody(::std::string&& value) {
  
  emailbody_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.EmailBody.emailBody)
}
#endif
inline void EmailBody::set_emailbody(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  emailbody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.EmailBody.emailBody)
}
inline void EmailBody::set_emailbody(const char* value, size_t size) {
  
  emailbody_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.EmailBody.emailBody)
}
inline ::std::string* EmailBody::mutable_emailbody() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.EmailBody.emailBody)
  return emailbody_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EmailBody::release_emailbody() {
  // @@protoc_insertion_point(field_release:inner_ipc.EmailBody.emailBody)
  
  return emailbody_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EmailBody::set_allocated_emailbody(::std::string* emailbody) {
  if (emailbody != NULL) {
    
  } else {
    
  }
  emailbody_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailbody);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.EmailBody.emailBody)
}

// -------------------------------------------------------------------

// EmailMsgIPC

// int32 sendRid = 1;
inline void EmailMsgIPC::clear_sendrid() {
  sendrid_ = 0;
}
inline ::google::protobuf::int32 EmailMsgIPC::sendrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailMsgIPC.sendRid)
  return sendrid_;
}
inline void EmailMsgIPC::set_sendrid(::google::protobuf::int32 value) {
  
  sendrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.EmailMsgIPC.sendRid)
}

// int32 recvRid = 2;
inline void EmailMsgIPC::clear_recvrid() {
  recvrid_ = 0;
}
inline ::google::protobuf::int32 EmailMsgIPC::recvrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailMsgIPC.recvRid)
  return recvrid_;
}
inline void EmailMsgIPC::set_recvrid(::google::protobuf::int32 value) {
  
  recvrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.EmailMsgIPC.recvRid)
}

// int32 emailType = 3;
inline void EmailMsgIPC::clear_emailtype() {
  emailtype_ = 0;
}
inline ::google::protobuf::int32 EmailMsgIPC::emailtype() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailMsgIPC.emailType)
  return emailtype_;
}
inline void EmailMsgIPC::set_emailtype(::google::protobuf::int32 value) {
  
  emailtype_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.EmailMsgIPC.emailType)
}

// string emailHead = 4;
inline void EmailMsgIPC::clear_emailhead() {
  emailhead_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EmailMsgIPC::emailhead() const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailMsgIPC.emailHead)
  return emailhead_.GetNoArena();
}
inline void EmailMsgIPC::set_emailhead(const ::std::string& value) {
  
  emailhead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.EmailMsgIPC.emailHead)
}
#if LANG_CXX11
inline void EmailMsgIPC::set_emailhead(::std::string&& value) {
  
  emailhead_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.EmailMsgIPC.emailHead)
}
#endif
inline void EmailMsgIPC::set_emailhead(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  emailhead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.EmailMsgIPC.emailHead)
}
inline void EmailMsgIPC::set_emailhead(const char* value, size_t size) {
  
  emailhead_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.EmailMsgIPC.emailHead)
}
inline ::std::string* EmailMsgIPC::mutable_emailhead() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.EmailMsgIPC.emailHead)
  return emailhead_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EmailMsgIPC::release_emailhead() {
  // @@protoc_insertion_point(field_release:inner_ipc.EmailMsgIPC.emailHead)
  
  return emailhead_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EmailMsgIPC::set_allocated_emailhead(::std::string* emailhead) {
  if (emailhead != NULL) {
    
  } else {
    
  }
  emailhead_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emailhead);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.EmailMsgIPC.emailHead)
}

// repeated .inner_ipc.EmailBody emailBody = 5;
inline int EmailMsgIPC::emailbody_size() const {
  return emailbody_.size();
}
inline void EmailMsgIPC::clear_emailbody() {
  emailbody_.Clear();
}
inline const ::inner_ipc::EmailBody& EmailMsgIPC::emailbody(int index) const {
  // @@protoc_insertion_point(field_get:inner_ipc.EmailMsgIPC.emailBody)
  return emailbody_.Get(index);
}
inline ::inner_ipc::EmailBody* EmailMsgIPC::mutable_emailbody(int index) {
  // @@protoc_insertion_point(field_mutable:inner_ipc.EmailMsgIPC.emailBody)
  return emailbody_.Mutable(index);
}
inline ::inner_ipc::EmailBody* EmailMsgIPC::add_emailbody() {
  // @@protoc_insertion_point(field_add:inner_ipc.EmailMsgIPC.emailBody)
  return emailbody_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::inner_ipc::EmailBody >*
EmailMsgIPC::mutable_emailbody() {
  // @@protoc_insertion_point(field_mutable_list:inner_ipc.EmailMsgIPC.emailBody)
  return &emailbody_;
}
inline const ::google::protobuf::RepeatedPtrField< ::inner_ipc::EmailBody >&
EmailMsgIPC::emailbody() const {
  // @@protoc_insertion_point(field_list:inner_ipc.EmailMsgIPC.emailBody)
  return emailbody_;
}

// -------------------------------------------------------------------

// OfflineGoodsIPC

// int32 sendRid = 1;
inline void OfflineGoodsIPC::clear_sendrid() {
  sendrid_ = 0;
}
inline ::google::protobuf::int32 OfflineGoodsIPC::sendrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineGoodsIPC.sendRid)
  return sendrid_;
}
inline void OfflineGoodsIPC::set_sendrid(::google::protobuf::int32 value) {
  
  sendrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineGoodsIPC.sendRid)
}

// int32 recvRid = 2;
inline void OfflineGoodsIPC::clear_recvrid() {
  recvrid_ = 0;
}
inline ::google::protobuf::int32 OfflineGoodsIPC::recvrid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineGoodsIPC.recvRid)
  return recvrid_;
}
inline void OfflineGoodsIPC::set_recvrid(::google::protobuf::int32 value) {
  
  recvrid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineGoodsIPC.recvRid)
}

// int32 count = 3;
inline void OfflineGoodsIPC::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 OfflineGoodsIPC::count() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineGoodsIPC.count)
  return count_;
}
inline void OfflineGoodsIPC::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineGoodsIPC.count)
}

// int32 goodsId = 4;
inline void OfflineGoodsIPC::clear_goodsid() {
  goodsid_ = 0;
}
inline ::google::protobuf::int32 OfflineGoodsIPC::goodsid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.OfflineGoodsIPC.goodsId)
  return goodsid_;
}
inline void OfflineGoodsIPC::set_goodsid(::google::protobuf::int32 value) {
  
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.OfflineGoodsIPC.goodsId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_chat_5fdb_5fipc_2eproto__INCLUDED
