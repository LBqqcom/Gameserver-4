// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gs_login_ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gs_login_ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace inner_ipc {
class IoServerLoginIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<IoServerLoginIPC> {
} _IoServerLoginIPC_default_instance_;
class LoginIoServerIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginIoServerIPC> {
} _LoginIoServerIPC_default_instance_;

namespace protobuf_gs_5flogin_5fipc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IoServerLoginIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IoServerLoginIPC, op_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIoServerIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIoServerIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginIoServerIPC, key_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(IoServerLoginIPC)},
  { 6, -1, sizeof(LoginIoServerIPC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_IoServerLoginIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginIoServerIPC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gs_login_ipc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _IoServerLoginIPC_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LoginIoServerIPC_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _IoServerLoginIPC_default_instance_.DefaultConstruct();
  _LoginIoServerIPC_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022gs_login_ipc.proto\022\tinner_ipc\"\036\n\020IoSer"
      "verLoginIPC\022\n\n\002op\030\001 \001(\005\",\n\020LoginIoServer"
      "IPC\022\013\n\003rid\030\001 \001(\005\022\013\n\003key\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gs_login_ipc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gs_5flogin_5fipc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IoServerLoginIPC::kOpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IoServerLoginIPC::IoServerLoginIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5flogin_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.IoServerLoginIPC)
}
IoServerLoginIPC::IoServerLoginIPC(const IoServerLoginIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  op_ = from.op_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.IoServerLoginIPC)
}

void IoServerLoginIPC::SharedCtor() {
  op_ = 0;
  _cached_size_ = 0;
}

IoServerLoginIPC::~IoServerLoginIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.IoServerLoginIPC)
  SharedDtor();
}

void IoServerLoginIPC::SharedDtor() {
}

void IoServerLoginIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IoServerLoginIPC::descriptor() {
  protobuf_gs_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IoServerLoginIPC& IoServerLoginIPC::default_instance() {
  protobuf_gs_5flogin_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

IoServerLoginIPC* IoServerLoginIPC::New(::google::protobuf::Arena* arena) const {
  IoServerLoginIPC* n = new IoServerLoginIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IoServerLoginIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.IoServerLoginIPC)
  op_ = 0;
}

bool IoServerLoginIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.IoServerLoginIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 op = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &op_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.IoServerLoginIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.IoServerLoginIPC)
  return false;
#undef DO_
}

void IoServerLoginIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.IoServerLoginIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 op = 1;
  if (this->op() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->op(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.IoServerLoginIPC)
}

::google::protobuf::uint8* IoServerLoginIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.IoServerLoginIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 op = 1;
  if (this->op() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->op(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.IoServerLoginIPC)
  return target;
}

size_t IoServerLoginIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.IoServerLoginIPC)
  size_t total_size = 0;

  // int32 op = 1;
  if (this->op() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->op());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IoServerLoginIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.IoServerLoginIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const IoServerLoginIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IoServerLoginIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.IoServerLoginIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.IoServerLoginIPC)
    MergeFrom(*source);
  }
}

void IoServerLoginIPC::MergeFrom(const IoServerLoginIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.IoServerLoginIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.op() != 0) {
    set_op(from.op());
  }
}

void IoServerLoginIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.IoServerLoginIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IoServerLoginIPC::CopyFrom(const IoServerLoginIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.IoServerLoginIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IoServerLoginIPC::IsInitialized() const {
  return true;
}

void IoServerLoginIPC::Swap(IoServerLoginIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IoServerLoginIPC::InternalSwap(IoServerLoginIPC* other) {
  std::swap(op_, other->op_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IoServerLoginIPC::GetMetadata() const {
  protobuf_gs_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IoServerLoginIPC

// int32 op = 1;
void IoServerLoginIPC::clear_op() {
  op_ = 0;
}
::google::protobuf::int32 IoServerLoginIPC::op() const {
  // @@protoc_insertion_point(field_get:inner_ipc.IoServerLoginIPC.op)
  return op_;
}
void IoServerLoginIPC::set_op(::google::protobuf::int32 value) {
  
  op_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.IoServerLoginIPC.op)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginIoServerIPC::kRidFieldNumber;
const int LoginIoServerIPC::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginIoServerIPC::LoginIoServerIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gs_5flogin_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.LoginIoServerIPC)
}
LoginIoServerIPC::LoginIoServerIPC(const LoginIoServerIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  rid_ = from.rid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.LoginIoServerIPC)
}

void LoginIoServerIPC::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rid_ = 0;
  _cached_size_ = 0;
}

LoginIoServerIPC::~LoginIoServerIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.LoginIoServerIPC)
  SharedDtor();
}

void LoginIoServerIPC::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginIoServerIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginIoServerIPC::descriptor() {
  protobuf_gs_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginIoServerIPC& LoginIoServerIPC::default_instance() {
  protobuf_gs_5flogin_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginIoServerIPC* LoginIoServerIPC::New(::google::protobuf::Arena* arena) const {
  LoginIoServerIPC* n = new LoginIoServerIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginIoServerIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.LoginIoServerIPC)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  rid_ = 0;
}

bool LoginIoServerIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.LoginIoServerIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.LoginIoServerIPC.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.LoginIoServerIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.LoginIoServerIPC)
  return false;
#undef DO_
}

void LoginIoServerIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.LoginIoServerIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rid(), output);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.LoginIoServerIPC.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.LoginIoServerIPC)
}

::google::protobuf::uint8* LoginIoServerIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.LoginIoServerIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rid = 1;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rid(), target);
  }

  // string key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.LoginIoServerIPC.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.LoginIoServerIPC)
  return target;
}

size_t LoginIoServerIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.LoginIoServerIPC)
  size_t total_size = 0;

  // string key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // int32 rid = 1;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginIoServerIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.LoginIoServerIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginIoServerIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginIoServerIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.LoginIoServerIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.LoginIoServerIPC)
    MergeFrom(*source);
  }
}

void LoginIoServerIPC::MergeFrom(const LoginIoServerIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.LoginIoServerIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
}

void LoginIoServerIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.LoginIoServerIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginIoServerIPC::CopyFrom(const LoginIoServerIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.LoginIoServerIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginIoServerIPC::IsInitialized() const {
  return true;
}

void LoginIoServerIPC::Swap(LoginIoServerIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginIoServerIPC::InternalSwap(LoginIoServerIPC* other) {
  key_.Swap(&other->key_);
  std::swap(rid_, other->rid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginIoServerIPC::GetMetadata() const {
  protobuf_gs_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gs_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginIoServerIPC

// int32 rid = 1;
void LoginIoServerIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 LoginIoServerIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.LoginIoServerIPC.rid)
  return rid_;
}
void LoginIoServerIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.LoginIoServerIPC.rid)
}

// string key = 2;
void LoginIoServerIPC::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginIoServerIPC::key() const {
  // @@protoc_insertion_point(field_get:inner_ipc.LoginIoServerIPC.key)
  return key_.GetNoArena();
}
void LoginIoServerIPC::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.LoginIoServerIPC.key)
}
#if LANG_CXX11
void LoginIoServerIPC::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.LoginIoServerIPC.key)
}
#endif
void LoginIoServerIPC::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.LoginIoServerIPC.key)
}
void LoginIoServerIPC::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.LoginIoServerIPC.key)
}
::std::string* LoginIoServerIPC::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.LoginIoServerIPC.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginIoServerIPC::release_key() {
  // @@protoc_insertion_point(field_release:inner_ipc.LoginIoServerIPC.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginIoServerIPC::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.LoginIoServerIPC.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)
