// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gy_login_ipc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gy_login_ipc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace inner_ipc {
class Gateway2LoginIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gateway2LoginIPC> {
} _Gateway2LoginIPC_default_instance_;
class Login2GatewayIPCDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Login2GatewayIPC> {
} _Login2GatewayIPC_default_instance_;

namespace protobuf_gy_5flogin_5fipc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gateway2LoginIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gateway2LoginIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gateway2LoginIPC, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, requestid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, msg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Login2GatewayIPC, address_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Gateway2LoginIPC)},
  { 7, -1, sizeof(Login2GatewayIPC)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gateway2LoginIPC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Login2GatewayIPC_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gy_login_ipc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _Gateway2LoginIPC_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Login2GatewayIPC_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Gateway2LoginIPC_default_instance_.DefaultConstruct();
  _Login2GatewayIPC_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022gy_login_ipc.proto\022\tinner_ipc\"7\n\020Gatew"
      "ay2LoginIPC\022\021\n\trequestId\030\001 \001(\r\022\020\n\010userNa"
      "me\030\002 \001(\t\"{\n\020Login2GatewayIPC\022\014\n\004port\030\001 \001"
      "(\005\022\013\n\003rid\030\002 \001(\005\022\021\n\trequestId\030\003 \001(\005\022\016\n\006st"
      "atus\030\004 \001(\005\022\013\n\003key\030\005 \001(\t\022\013\n\003msg\030\006 \001(\t\022\017\n\007"
      "address\030\007 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 221);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gy_login_ipc.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gy_5flogin_5fipc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gateway2LoginIPC::kRequestIdFieldNumber;
const int Gateway2LoginIPC::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gateway2LoginIPC::Gateway2LoginIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gy_5flogin_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.Gateway2LoginIPC)
}
Gateway2LoginIPC::Gateway2LoginIPC(const Gateway2LoginIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  requestid_ = from.requestid_;
  // @@protoc_insertion_point(copy_constructor:inner_ipc.Gateway2LoginIPC)
}

void Gateway2LoginIPC::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
  _cached_size_ = 0;
}

Gateway2LoginIPC::~Gateway2LoginIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.Gateway2LoginIPC)
  SharedDtor();
}

void Gateway2LoginIPC::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Gateway2LoginIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gateway2LoginIPC::descriptor() {
  protobuf_gy_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gy_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gateway2LoginIPC& Gateway2LoginIPC::default_instance() {
  protobuf_gy_5flogin_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gateway2LoginIPC* Gateway2LoginIPC::New(::google::protobuf::Arena* arena) const {
  Gateway2LoginIPC* n = new Gateway2LoginIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gateway2LoginIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.Gateway2LoginIPC)
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  requestid_ = 0u;
}

bool Gateway2LoginIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.Gateway2LoginIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 requestId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.Gateway2LoginIPC.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.Gateway2LoginIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.Gateway2LoginIPC)
  return false;
#undef DO_
}

void Gateway2LoginIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.Gateway2LoginIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestId = 1;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->requestid(), output);
  }

  // string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Gateway2LoginIPC.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.Gateway2LoginIPC)
}

::google::protobuf::uint8* Gateway2LoginIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.Gateway2LoginIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 requestId = 1;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->requestid(), target);
  }

  // string userName = 2;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Gateway2LoginIPC.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.Gateway2LoginIPC)
  return target;
}

size_t Gateway2LoginIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.Gateway2LoginIPC)
  size_t total_size = 0;

  // string userName = 2;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // uint32 requestId = 1;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->requestid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gateway2LoginIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.Gateway2LoginIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const Gateway2LoginIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gateway2LoginIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.Gateway2LoginIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.Gateway2LoginIPC)
    MergeFrom(*source);
  }
}

void Gateway2LoginIPC::MergeFrom(const Gateway2LoginIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.Gateway2LoginIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
}

void Gateway2LoginIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.Gateway2LoginIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gateway2LoginIPC::CopyFrom(const Gateway2LoginIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.Gateway2LoginIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gateway2LoginIPC::IsInitialized() const {
  return true;
}

void Gateway2LoginIPC::Swap(Gateway2LoginIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gateway2LoginIPC::InternalSwap(Gateway2LoginIPC* other) {
  username_.Swap(&other->username_);
  std::swap(requestid_, other->requestid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gateway2LoginIPC::GetMetadata() const {
  protobuf_gy_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gy_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gateway2LoginIPC

// uint32 requestId = 1;
void Gateway2LoginIPC::clear_requestid() {
  requestid_ = 0u;
}
::google::protobuf::uint32 Gateway2LoginIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Gateway2LoginIPC.requestId)
  return requestid_;
}
void Gateway2LoginIPC::set_requestid(::google::protobuf::uint32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.Gateway2LoginIPC.requestId)
}

// string userName = 2;
void Gateway2LoginIPC::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Gateway2LoginIPC::username() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Gateway2LoginIPC.userName)
  return username_.GetNoArena();
}
void Gateway2LoginIPC::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.Gateway2LoginIPC.userName)
}
#if LANG_CXX11
void Gateway2LoginIPC::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.Gateway2LoginIPC.userName)
}
#endif
void Gateway2LoginIPC::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.Gateway2LoginIPC.userName)
}
void Gateway2LoginIPC::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.Gateway2LoginIPC.userName)
}
::std::string* Gateway2LoginIPC::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.Gateway2LoginIPC.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Gateway2LoginIPC::release_username() {
  // @@protoc_insertion_point(field_release:inner_ipc.Gateway2LoginIPC.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Gateway2LoginIPC::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.Gateway2LoginIPC.userName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Login2GatewayIPC::kPortFieldNumber;
const int Login2GatewayIPC::kRidFieldNumber;
const int Login2GatewayIPC::kRequestIdFieldNumber;
const int Login2GatewayIPC::kStatusFieldNumber;
const int Login2GatewayIPC::kKeyFieldNumber;
const int Login2GatewayIPC::kMsgFieldNumber;
const int Login2GatewayIPC::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Login2GatewayIPC::Login2GatewayIPC()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gy_5flogin_5fipc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:inner_ipc.Login2GatewayIPC)
}
Login2GatewayIPC::Login2GatewayIPC(const Login2GatewayIPC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  ::memcpy(&port_, &from.port_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:inner_ipc.Login2GatewayIPC)
}

void Login2GatewayIPC::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
  _cached_size_ = 0;
}

Login2GatewayIPC::~Login2GatewayIPC() {
  // @@protoc_insertion_point(destructor:inner_ipc.Login2GatewayIPC)
  SharedDtor();
}

void Login2GatewayIPC::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Login2GatewayIPC::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Login2GatewayIPC::descriptor() {
  protobuf_gy_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gy_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Login2GatewayIPC& Login2GatewayIPC::default_instance() {
  protobuf_gy_5flogin_5fipc_2eproto::InitDefaults();
  return *internal_default_instance();
}

Login2GatewayIPC* Login2GatewayIPC::New(::google::protobuf::Arena* arena) const {
  Login2GatewayIPC* n = new Login2GatewayIPC;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Login2GatewayIPC::Clear() {
// @@protoc_insertion_point(message_clear_start:inner_ipc.Login2GatewayIPC)
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
}

bool Login2GatewayIPC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:inner_ipc.Login2GatewayIPC)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 requestId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requestid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.Login2GatewayIPC.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.Login2GatewayIPC.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "inner_ipc.Login2GatewayIPC.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:inner_ipc.Login2GatewayIPC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:inner_ipc.Login2GatewayIPC)
  return false;
#undef DO_
}

void Login2GatewayIPC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:inner_ipc.Login2GatewayIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->port(), output);
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rid(), output);
  }

  // int32 requestId = 3;
  if (this->requestid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->requestid(), output);
  }

  // int32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->status(), output);
  }

  // string key = 5;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Login2GatewayIPC.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->key(), output);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Login2GatewayIPC.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  // string address = 7;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Login2GatewayIPC.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->address(), output);
  }

  // @@protoc_insertion_point(serialize_end:inner_ipc.Login2GatewayIPC)
}

::google::protobuf::uint8* Login2GatewayIPC::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:inner_ipc.Login2GatewayIPC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->port(), target);
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rid(), target);
  }

  // int32 requestId = 3;
  if (this->requestid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->requestid(), target);
  }

  // int32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->status(), target);
  }

  // string key = 5;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Login2GatewayIPC.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->key(), target);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Login2GatewayIPC.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  // string address = 7;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "inner_ipc.Login2GatewayIPC.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->address(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:inner_ipc.Login2GatewayIPC)
  return target;
}

size_t Login2GatewayIPC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:inner_ipc.Login2GatewayIPC)
  size_t total_size = 0;

  // string key = 5;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // string address = 7;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // int32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 requestId = 3;
  if (this->requestid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->requestid());
  }

  // int32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Login2GatewayIPC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:inner_ipc.Login2GatewayIPC)
  GOOGLE_DCHECK_NE(&from, this);
  const Login2GatewayIPC* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Login2GatewayIPC>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:inner_ipc.Login2GatewayIPC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:inner_ipc.Login2GatewayIPC)
    MergeFrom(*source);
  }
}

void Login2GatewayIPC::MergeFrom(const Login2GatewayIPC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:inner_ipc.Login2GatewayIPC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.requestid() != 0) {
    set_requestid(from.requestid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void Login2GatewayIPC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:inner_ipc.Login2GatewayIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Login2GatewayIPC::CopyFrom(const Login2GatewayIPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:inner_ipc.Login2GatewayIPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Login2GatewayIPC::IsInitialized() const {
  return true;
}

void Login2GatewayIPC::Swap(Login2GatewayIPC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Login2GatewayIPC::InternalSwap(Login2GatewayIPC* other) {
  key_.Swap(&other->key_);
  msg_.Swap(&other->msg_);
  address_.Swap(&other->address_);
  std::swap(port_, other->port_);
  std::swap(rid_, other->rid_);
  std::swap(requestid_, other->requestid_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Login2GatewayIPC::GetMetadata() const {
  protobuf_gy_5flogin_5fipc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gy_5flogin_5fipc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Login2GatewayIPC

// int32 port = 1;
void Login2GatewayIPC::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 Login2GatewayIPC::port() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.port)
  return port_;
}
void Login2GatewayIPC::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.port)
}

// int32 rid = 2;
void Login2GatewayIPC::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 Login2GatewayIPC::rid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.rid)
  return rid_;
}
void Login2GatewayIPC::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.rid)
}

// int32 requestId = 3;
void Login2GatewayIPC::clear_requestid() {
  requestid_ = 0;
}
::google::protobuf::int32 Login2GatewayIPC::requestid() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.requestId)
  return requestid_;
}
void Login2GatewayIPC::set_requestid(::google::protobuf::int32 value) {
  
  requestid_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.requestId)
}

// int32 status = 4;
void Login2GatewayIPC::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 Login2GatewayIPC::status() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.status)
  return status_;
}
void Login2GatewayIPC::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.status)
}

// string key = 5;
void Login2GatewayIPC::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login2GatewayIPC::key() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.key)
  return key_.GetNoArena();
}
void Login2GatewayIPC::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.key)
}
#if LANG_CXX11
void Login2GatewayIPC::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.Login2GatewayIPC.key)
}
#endif
void Login2GatewayIPC::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.Login2GatewayIPC.key)
}
void Login2GatewayIPC::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.Login2GatewayIPC.key)
}
::std::string* Login2GatewayIPC::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.Login2GatewayIPC.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login2GatewayIPC::release_key() {
  // @@protoc_insertion_point(field_release:inner_ipc.Login2GatewayIPC.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login2GatewayIPC::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.Login2GatewayIPC.key)
}

// string msg = 6;
void Login2GatewayIPC::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login2GatewayIPC::msg() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.msg)
  return msg_.GetNoArena();
}
void Login2GatewayIPC::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.msg)
}
#if LANG_CXX11
void Login2GatewayIPC::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.Login2GatewayIPC.msg)
}
#endif
void Login2GatewayIPC::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.Login2GatewayIPC.msg)
}
void Login2GatewayIPC::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.Login2GatewayIPC.msg)
}
::std::string* Login2GatewayIPC::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.Login2GatewayIPC.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login2GatewayIPC::release_msg() {
  // @@protoc_insertion_point(field_release:inner_ipc.Login2GatewayIPC.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login2GatewayIPC::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.Login2GatewayIPC.msg)
}

// string address = 7;
void Login2GatewayIPC::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Login2GatewayIPC::address() const {
  // @@protoc_insertion_point(field_get:inner_ipc.Login2GatewayIPC.address)
  return address_.GetNoArena();
}
void Login2GatewayIPC::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:inner_ipc.Login2GatewayIPC.address)
}
#if LANG_CXX11
void Login2GatewayIPC::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:inner_ipc.Login2GatewayIPC.address)
}
#endif
void Login2GatewayIPC::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:inner_ipc.Login2GatewayIPC.address)
}
void Login2GatewayIPC::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:inner_ipc.Login2GatewayIPC.address)
}
::std::string* Login2GatewayIPC::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:inner_ipc.Login2GatewayIPC.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Login2GatewayIPC::release_address() {
  // @@protoc_insertion_point(field_release:inner_ipc.Login2GatewayIPC.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Login2GatewayIPC::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:inner_ipc.Login2GatewayIPC.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace inner_ipc

// @@protoc_insertion_point(global_scope)
