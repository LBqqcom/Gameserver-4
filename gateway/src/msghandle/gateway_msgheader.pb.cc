// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gateway_msgheader.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gateway_msgheader.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gateway_proto {
class RoleLoginRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginRequest> {
} _RoleLoginRequest_default_instance_;
class RoleLoginResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoleLoginResponse> {
} _RoleLoginResponse_default_instance_;
class CreateRoleRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRoleRequest> {
} _CreateRoleRequest_default_instance_;
class CreateRoleResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRoleResponse> {
} _CreateRoleResponse_default_instance_;

namespace protobuf_gateway_5fmsgheader_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginRequest, sdkid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginRequest, platomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoleLoginResponse, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, sdkid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, platomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, username_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, rid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleResponse, msg_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RoleLoginRequest)},
  { 8, -1, sizeof(RoleLoginResponse)},
  { 19, -1, sizeof(CreateRoleRequest)},
  { 27, -1, sizeof(CreateRoleResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoleLoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRoleResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gateway_msgheader.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _RoleLoginRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RoleLoginResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CreateRoleRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CreateRoleResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _RoleLoginRequest_default_instance_.DefaultConstruct();
  _RoleLoginResponse_default_instance_.DefaultConstruct();
  _CreateRoleRequest_default_instance_.DefaultConstruct();
  _CreateRoleResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\027gateway_msgheader.proto\022\rgateway_proto"
      "\"E\n\020RoleLoginRequest\022\r\n\005sdkId\030\001 \001(\005\022\020\n\010p"
      "latomId\030\002 \001(\t\022\020\n\010userName\030\003 \001(\t\"i\n\021RoleL"
      "oginResponse\022\014\n\004port\030\001 \001(\005\022\013\n\003rid\030\002 \001(\005\022"
      "\016\n\006status\030\003 \001(\005\022\017\n\007address\030\004 \001(\t\022\013\n\003key\030"
      "\005 \001(\t\022\013\n\003msg\030\006 \001(\t\"F\n\021CreateRoleRequest\022"
      "\r\n\005sdkId\030\001 \001(\005\022\020\n\010platomId\030\002 \001(\t\022\020\n\010user"
      "Name\030\003 \001(\t\"j\n\022CreateRoleResponse\022\014\n\004port"
      "\030\001 \001(\005\022\013\n\003rid\030\002 \001(\005\022\016\n\006status\030\003 \001(\005\022\017\n\007a"
      "ddress\030\004 \001(\t\022\013\n\003key\030\005 \001(\t\022\013\n\003msg\030\006 \001(\tb\006"
      "proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 406);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gateway_msgheader.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gateway_5fmsgheader_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginRequest::kSdkIdFieldNumber;
const int RoleLoginRequest::kPlatomIdFieldNumber;
const int RoleLoginRequest::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginRequest::RoleLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateway_proto.RoleLoginRequest)
}
RoleLoginRequest::RoleLoginRequest(const RoleLoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platomid().size() > 0) {
    platomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platomid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  sdkid_ = from.sdkid_;
  // @@protoc_insertion_point(copy_constructor:gateway_proto.RoleLoginRequest)
}

void RoleLoginRequest::SharedCtor() {
  platomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkid_ = 0;
  _cached_size_ = 0;
}

RoleLoginRequest::~RoleLoginRequest() {
  // @@protoc_insertion_point(destructor:gateway_proto.RoleLoginRequest)
  SharedDtor();
}

void RoleLoginRequest::SharedDtor() {
  platomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginRequest::descriptor() {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginRequest& RoleLoginRequest::default_instance() {
  protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLoginRequest* RoleLoginRequest::New(::google::protobuf::Arena* arena) const {
  RoleLoginRequest* n = new RoleLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_proto.RoleLoginRequest)
  platomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkid_ = 0;
}

bool RoleLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateway_proto.RoleLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sdkId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sdkid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platomid().data(), this->platomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.RoleLoginRequest.platomId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.RoleLoginRequest.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateway_proto.RoleLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateway_proto.RoleLoginRequest)
  return false;
#undef DO_
}

void RoleLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateway_proto.RoleLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sdkId = 1;
  if (this->sdkid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sdkid(), output);
  }

  // string platomId = 2;
  if (this->platomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platomid().data(), this->platomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginRequest.platomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platomid(), output);
  }

  // string userName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateway_proto.RoleLoginRequest)
}

::google::protobuf::uint8* RoleLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_proto.RoleLoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sdkId = 1;
  if (this->sdkid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sdkid(), target);
  }

  // string platomId = 2;
  if (this->platomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platomid().data(), this->platomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginRequest.platomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platomid(), target);
  }

  // string userName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginRequest.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateway_proto.RoleLoginRequest)
  return target;
}

size_t RoleLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_proto.RoleLoginRequest)
  size_t total_size = 0;

  // string platomId = 2;
  if (this->platomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platomid());
  }

  // string userName = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 sdkId = 1;
  if (this->sdkid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sdkid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateway_proto.RoleLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateway_proto.RoleLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateway_proto.RoleLoginRequest)
    MergeFrom(*source);
  }
}

void RoleLoginRequest::MergeFrom(const RoleLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateway_proto.RoleLoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platomid().size() > 0) {

    platomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platomid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.sdkid() != 0) {
    set_sdkid(from.sdkid());
  }
}

void RoleLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateway_proto.RoleLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginRequest::CopyFrom(const RoleLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_proto.RoleLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginRequest::IsInitialized() const {
  return true;
}

void RoleLoginRequest::Swap(RoleLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginRequest::InternalSwap(RoleLoginRequest* other) {
  platomid_.Swap(&other->platomid_);
  username_.Swap(&other->username_);
  std::swap(sdkid_, other->sdkid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginRequest::GetMetadata() const {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginRequest

// int32 sdkId = 1;
void RoleLoginRequest::clear_sdkid() {
  sdkid_ = 0;
}
::google::protobuf::int32 RoleLoginRequest::sdkid() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginRequest.sdkId)
  return sdkid_;
}
void RoleLoginRequest::set_sdkid(::google::protobuf::int32 value) {
  
  sdkid_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginRequest.sdkId)
}

// string platomId = 2;
void RoleLoginRequest::clear_platomid() {
  platomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleLoginRequest::platomid() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginRequest.platomId)
  return platomid_.GetNoArena();
}
void RoleLoginRequest::set_platomid(const ::std::string& value) {
  
  platomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginRequest.platomId)
}
#if LANG_CXX11
void RoleLoginRequest::set_platomid(::std::string&& value) {
  
  platomid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.RoleLoginRequest.platomId)
}
#endif
void RoleLoginRequest::set_platomid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.RoleLoginRequest.platomId)
}
void RoleLoginRequest::set_platomid(const char* value, size_t size) {
  
  platomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.RoleLoginRequest.platomId)
}
::std::string* RoleLoginRequest::mutable_platomid() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.RoleLoginRequest.platomId)
  return platomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleLoginRequest::release_platomid() {
  // @@protoc_insertion_point(field_release:gateway_proto.RoleLoginRequest.platomId)
  
  return platomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleLoginRequest::set_allocated_platomid(::std::string* platomid) {
  if (platomid != NULL) {
    
  } else {
    
  }
  platomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platomid);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.RoleLoginRequest.platomId)
}

// string userName = 3;
void RoleLoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleLoginRequest::username() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginRequest.userName)
  return username_.GetNoArena();
}
void RoleLoginRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginRequest.userName)
}
#if LANG_CXX11
void RoleLoginRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.RoleLoginRequest.userName)
}
#endif
void RoleLoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.RoleLoginRequest.userName)
}
void RoleLoginRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.RoleLoginRequest.userName)
}
::std::string* RoleLoginRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.RoleLoginRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleLoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:gateway_proto.RoleLoginRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleLoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.RoleLoginRequest.userName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoleLoginResponse::kPortFieldNumber;
const int RoleLoginResponse::kRidFieldNumber;
const int RoleLoginResponse::kStatusFieldNumber;
const int RoleLoginResponse::kAddressFieldNumber;
const int RoleLoginResponse::kKeyFieldNumber;
const int RoleLoginResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoleLoginResponse::RoleLoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateway_proto.RoleLoginResponse)
}
RoleLoginResponse::RoleLoginResponse(const RoleLoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&port_, &from.port_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:gateway_proto.RoleLoginResponse)
}

void RoleLoginResponse::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
  _cached_size_ = 0;
}

RoleLoginResponse::~RoleLoginResponse() {
  // @@protoc_insertion_point(destructor:gateway_proto.RoleLoginResponse)
  SharedDtor();
}

void RoleLoginResponse::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoleLoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoleLoginResponse::descriptor() {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoleLoginResponse& RoleLoginResponse::default_instance() {
  protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  return *internal_default_instance();
}

RoleLoginResponse* RoleLoginResponse::New(::google::protobuf::Arena* arena) const {
  RoleLoginResponse* n = new RoleLoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoleLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_proto.RoleLoginResponse)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
}

bool RoleLoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateway_proto.RoleLoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.RoleLoginResponse.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.RoleLoginResponse.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.RoleLoginResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateway_proto.RoleLoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateway_proto.RoleLoginResponse)
  return false;
#undef DO_
}

void RoleLoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateway_proto.RoleLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->port(), output);
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rid(), output);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginResponse.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // string key = 5;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginResponse.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->key(), output);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateway_proto.RoleLoginResponse)
}

::google::protobuf::uint8* RoleLoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_proto.RoleLoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->port(), target);
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rid(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginResponse.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // string key = 5;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginResponse.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->key(), target);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.RoleLoginResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateway_proto.RoleLoginResponse)
  return target;
}

size_t RoleLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_proto.RoleLoginResponse)
  size_t total_size = 0;

  // string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string key = 5;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoleLoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateway_proto.RoleLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RoleLoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoleLoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateway_proto.RoleLoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateway_proto.RoleLoginResponse)
    MergeFrom(*source);
  }
}

void RoleLoginResponse::MergeFrom(const RoleLoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateway_proto.RoleLoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void RoleLoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateway_proto.RoleLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoleLoginResponse::CopyFrom(const RoleLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_proto.RoleLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoleLoginResponse::IsInitialized() const {
  return true;
}

void RoleLoginResponse::Swap(RoleLoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoleLoginResponse::InternalSwap(RoleLoginResponse* other) {
  address_.Swap(&other->address_);
  key_.Swap(&other->key_);
  msg_.Swap(&other->msg_);
  std::swap(port_, other->port_);
  std::swap(rid_, other->rid_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoleLoginResponse::GetMetadata() const {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoleLoginResponse

// int32 port = 1;
void RoleLoginResponse::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 RoleLoginResponse::port() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginResponse.port)
  return port_;
}
void RoleLoginResponse::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginResponse.port)
}

// int32 rid = 2;
void RoleLoginResponse::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 RoleLoginResponse::rid() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginResponse.rid)
  return rid_;
}
void RoleLoginResponse::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginResponse.rid)
}

// int32 status = 3;
void RoleLoginResponse::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 RoleLoginResponse::status() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginResponse.status)
  return status_;
}
void RoleLoginResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginResponse.status)
}

// string address = 4;
void RoleLoginResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleLoginResponse::address() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginResponse.address)
  return address_.GetNoArena();
}
void RoleLoginResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginResponse.address)
}
#if LANG_CXX11
void RoleLoginResponse::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.RoleLoginResponse.address)
}
#endif
void RoleLoginResponse::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.RoleLoginResponse.address)
}
void RoleLoginResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.RoleLoginResponse.address)
}
::std::string* RoleLoginResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.RoleLoginResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleLoginResponse::release_address() {
  // @@protoc_insertion_point(field_release:gateway_proto.RoleLoginResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleLoginResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.RoleLoginResponse.address)
}

// string key = 5;
void RoleLoginResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleLoginResponse::key() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginResponse.key)
  return key_.GetNoArena();
}
void RoleLoginResponse::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginResponse.key)
}
#if LANG_CXX11
void RoleLoginResponse::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.RoleLoginResponse.key)
}
#endif
void RoleLoginResponse::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.RoleLoginResponse.key)
}
void RoleLoginResponse::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.RoleLoginResponse.key)
}
::std::string* RoleLoginResponse::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.RoleLoginResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleLoginResponse::release_key() {
  // @@protoc_insertion_point(field_release:gateway_proto.RoleLoginResponse.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleLoginResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.RoleLoginResponse.key)
}

// string msg = 6;
void RoleLoginResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RoleLoginResponse::msg() const {
  // @@protoc_insertion_point(field_get:gateway_proto.RoleLoginResponse.msg)
  return msg_.GetNoArena();
}
void RoleLoginResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.RoleLoginResponse.msg)
}
#if LANG_CXX11
void RoleLoginResponse::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.RoleLoginResponse.msg)
}
#endif
void RoleLoginResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.RoleLoginResponse.msg)
}
void RoleLoginResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.RoleLoginResponse.msg)
}
::std::string* RoleLoginResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.RoleLoginResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoleLoginResponse::release_msg() {
  // @@protoc_insertion_point(field_release:gateway_proto.RoleLoginResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoleLoginResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.RoleLoginResponse.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoleRequest::kSdkIdFieldNumber;
const int CreateRoleRequest::kPlatomIdFieldNumber;
const int CreateRoleRequest::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoleRequest::CreateRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateway_proto.CreateRoleRequest)
}
CreateRoleRequest::CreateRoleRequest(const CreateRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  platomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.platomid().size() > 0) {
    platomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platomid_);
  }
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  sdkid_ = from.sdkid_;
  // @@protoc_insertion_point(copy_constructor:gateway_proto.CreateRoleRequest)
}

void CreateRoleRequest::SharedCtor() {
  platomid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkid_ = 0;
  _cached_size_ = 0;
}

CreateRoleRequest::~CreateRoleRequest() {
  // @@protoc_insertion_point(destructor:gateway_proto.CreateRoleRequest)
  SharedDtor();
}

void CreateRoleRequest::SharedDtor() {
  platomid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoleRequest::descriptor() {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoleRequest& CreateRoleRequest::default_instance() {
  protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRoleRequest* CreateRoleRequest::New(::google::protobuf::Arena* arena) const {
  CreateRoleRequest* n = new CreateRoleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_proto.CreateRoleRequest)
  platomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sdkid_ = 0;
}

bool CreateRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateway_proto.CreateRoleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sdkId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sdkid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string platomId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_platomid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->platomid().data(), this->platomid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.CreateRoleRequest.platomId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string userName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.CreateRoleRequest.userName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateway_proto.CreateRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateway_proto.CreateRoleRequest)
  return false;
#undef DO_
}

void CreateRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateway_proto.CreateRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sdkId = 1;
  if (this->sdkid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sdkid(), output);
  }

  // string platomId = 2;
  if (this->platomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platomid().data(), this->platomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleRequest.platomId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->platomid(), output);
  }

  // string userName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->username(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateway_proto.CreateRoleRequest)
}

::google::protobuf::uint8* CreateRoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_proto.CreateRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sdkId = 1;
  if (this->sdkid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sdkid(), target);
  }

  // string platomId = 2;
  if (this->platomid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->platomid().data(), this->platomid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleRequest.platomId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->platomid(), target);
  }

  // string userName = 3;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleRequest.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->username(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateway_proto.CreateRoleRequest)
  return target;
}

size_t CreateRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_proto.CreateRoleRequest)
  size_t total_size = 0;

  // string platomId = 2;
  if (this->platomid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->platomid());
  }

  // string userName = 3;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // int32 sdkId = 1;
  if (this->sdkid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sdkid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateway_proto.CreateRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateway_proto.CreateRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateway_proto.CreateRoleRequest)
    MergeFrom(*source);
  }
}

void CreateRoleRequest::MergeFrom(const CreateRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateway_proto.CreateRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.platomid().size() > 0) {

    platomid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.platomid_);
  }
  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.sdkid() != 0) {
    set_sdkid(from.sdkid());
  }
}

void CreateRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateway_proto.CreateRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRequest::CopyFrom(const CreateRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_proto.CreateRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRequest::IsInitialized() const {
  return true;
}

void CreateRoleRequest::Swap(CreateRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoleRequest::InternalSwap(CreateRoleRequest* other) {
  platomid_.Swap(&other->platomid_);
  username_.Swap(&other->username_);
  std::swap(sdkid_, other->sdkid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoleRequest::GetMetadata() const {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoleRequest

// int32 sdkId = 1;
void CreateRoleRequest::clear_sdkid() {
  sdkid_ = 0;
}
::google::protobuf::int32 CreateRoleRequest::sdkid() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleRequest.sdkId)
  return sdkid_;
}
void CreateRoleRequest::set_sdkid(::google::protobuf::int32 value) {
  
  sdkid_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleRequest.sdkId)
}

// string platomId = 2;
void CreateRoleRequest::clear_platomid() {
  platomid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRoleRequest::platomid() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleRequest.platomId)
  return platomid_.GetNoArena();
}
void CreateRoleRequest::set_platomid(const ::std::string& value) {
  
  platomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleRequest.platomId)
}
#if LANG_CXX11
void CreateRoleRequest::set_platomid(::std::string&& value) {
  
  platomid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.CreateRoleRequest.platomId)
}
#endif
void CreateRoleRequest::set_platomid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  platomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.CreateRoleRequest.platomId)
}
void CreateRoleRequest::set_platomid(const char* value, size_t size) {
  
  platomid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.CreateRoleRequest.platomId)
}
::std::string* CreateRoleRequest::mutable_platomid() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.CreateRoleRequest.platomId)
  return platomid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoleRequest::release_platomid() {
  // @@protoc_insertion_point(field_release:gateway_proto.CreateRoleRequest.platomId)
  
  return platomid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoleRequest::set_allocated_platomid(::std::string* platomid) {
  if (platomid != NULL) {
    
  } else {
    
  }
  platomid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), platomid);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.CreateRoleRequest.platomId)
}

// string userName = 3;
void CreateRoleRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRoleRequest::username() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleRequest.userName)
  return username_.GetNoArena();
}
void CreateRoleRequest::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleRequest.userName)
}
#if LANG_CXX11
void CreateRoleRequest::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.CreateRoleRequest.userName)
}
#endif
void CreateRoleRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.CreateRoleRequest.userName)
}
void CreateRoleRequest::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.CreateRoleRequest.userName)
}
::std::string* CreateRoleRequest::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.CreateRoleRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoleRequest::release_username() {
  // @@protoc_insertion_point(field_release:gateway_proto.CreateRoleRequest.userName)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoleRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.CreateRoleRequest.userName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoleResponse::kPortFieldNumber;
const int CreateRoleResponse::kRidFieldNumber;
const int CreateRoleResponse::kStatusFieldNumber;
const int CreateRoleResponse::kAddressFieldNumber;
const int CreateRoleResponse::kKeyFieldNumber;
const int CreateRoleResponse::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoleResponse::CreateRoleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gateway_proto.CreateRoleResponse)
}
CreateRoleResponse::CreateRoleResponse(const CreateRoleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&port_, &from.port_,
    reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:gateway_proto.CreateRoleResponse)
}

void CreateRoleResponse::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
  _cached_size_ = 0;
}

CreateRoleResponse::~CreateRoleResponse() {
  // @@protoc_insertion_point(destructor:gateway_proto.CreateRoleResponse)
  SharedDtor();
}

void CreateRoleResponse::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateRoleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoleResponse::descriptor() {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoleResponse& CreateRoleResponse::default_instance() {
  protobuf_gateway_5fmsgheader_2eproto::InitDefaults();
  return *internal_default_instance();
}

CreateRoleResponse* CreateRoleResponse::New(::google::protobuf::Arena* arena) const {
  CreateRoleResponse* n = new CreateRoleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:gateway_proto.CreateRoleResponse)
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&port_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&port_) + sizeof(status_));
}

bool CreateRoleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gateway_proto.CreateRoleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 port = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 rid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), this->address().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.CreateRoleResponse.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string key = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.CreateRoleResponse.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string msg = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gateway_proto.CreateRoleResponse.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gateway_proto.CreateRoleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gateway_proto.CreateRoleResponse)
  return false;
#undef DO_
}

void CreateRoleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gateway_proto.CreateRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->port(), output);
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->rid(), output);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->status(), output);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleResponse.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->address(), output);
  }

  // string key = 5;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleResponse.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->key(), output);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleResponse.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->msg(), output);
  }

  // @@protoc_insertion_point(serialize_end:gateway_proto.CreateRoleResponse)
}

::google::protobuf::uint8* CreateRoleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gateway_proto.CreateRoleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 port = 1;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->port(), target);
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->rid(), target);
  }

  // int32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->status(), target);
  }

  // string address = 4;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), this->address().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleResponse.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->address(), target);
  }

  // string key = 5;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleResponse.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->key(), target);
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gateway_proto.CreateRoleResponse.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->msg(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gateway_proto.CreateRoleResponse)
  return target;
}

size_t CreateRoleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gateway_proto.CreateRoleResponse)
  size_t total_size = 0;

  // string address = 4;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string key = 5;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string msg = 6;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  // int32 port = 1;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->port());
  }

  // int32 rid = 2;
  if (this->rid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rid());
  }

  // int32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gateway_proto.CreateRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gateway_proto.CreateRoleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gateway_proto.CreateRoleResponse)
    MergeFrom(*source);
  }
}

void CreateRoleResponse::MergeFrom(const CreateRoleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gateway_proto.CreateRoleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.rid() != 0) {
    set_rid(from.rid());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void CreateRoleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gateway_proto.CreateRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleResponse::CopyFrom(const CreateRoleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gateway_proto.CreateRoleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleResponse::IsInitialized() const {
  return true;
}

void CreateRoleResponse::Swap(CreateRoleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoleResponse::InternalSwap(CreateRoleResponse* other) {
  address_.Swap(&other->address_);
  key_.Swap(&other->key_);
  msg_.Swap(&other->msg_);
  std::swap(port_, other->port_);
  std::swap(rid_, other->rid_);
  std::swap(status_, other->status_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoleResponse::GetMetadata() const {
  protobuf_gateway_5fmsgheader_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gateway_5fmsgheader_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoleResponse

// int32 port = 1;
void CreateRoleResponse::clear_port() {
  port_ = 0;
}
::google::protobuf::int32 CreateRoleResponse::port() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleResponse.port)
  return port_;
}
void CreateRoleResponse::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleResponse.port)
}

// int32 rid = 2;
void CreateRoleResponse::clear_rid() {
  rid_ = 0;
}
::google::protobuf::int32 CreateRoleResponse::rid() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleResponse.rid)
  return rid_;
}
void CreateRoleResponse::set_rid(::google::protobuf::int32 value) {
  
  rid_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleResponse.rid)
}

// int32 status = 3;
void CreateRoleResponse::clear_status() {
  status_ = 0;
}
::google::protobuf::int32 CreateRoleResponse::status() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleResponse.status)
  return status_;
}
void CreateRoleResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleResponse.status)
}

// string address = 4;
void CreateRoleResponse::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRoleResponse::address() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleResponse.address)
  return address_.GetNoArena();
}
void CreateRoleResponse::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleResponse.address)
}
#if LANG_CXX11
void CreateRoleResponse::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.CreateRoleResponse.address)
}
#endif
void CreateRoleResponse::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.CreateRoleResponse.address)
}
void CreateRoleResponse::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.CreateRoleResponse.address)
}
::std::string* CreateRoleResponse::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.CreateRoleResponse.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoleResponse::release_address() {
  // @@protoc_insertion_point(field_release:gateway_proto.CreateRoleResponse.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoleResponse::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.CreateRoleResponse.address)
}

// string key = 5;
void CreateRoleResponse::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRoleResponse::key() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleResponse.key)
  return key_.GetNoArena();
}
void CreateRoleResponse::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleResponse.key)
}
#if LANG_CXX11
void CreateRoleResponse::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.CreateRoleResponse.key)
}
#endif
void CreateRoleResponse::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.CreateRoleResponse.key)
}
void CreateRoleResponse::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.CreateRoleResponse.key)
}
::std::string* CreateRoleResponse::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.CreateRoleResponse.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoleResponse::release_key() {
  // @@protoc_insertion_point(field_release:gateway_proto.CreateRoleResponse.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoleResponse::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.CreateRoleResponse.key)
}

// string msg = 6;
void CreateRoleResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CreateRoleResponse::msg() const {
  // @@protoc_insertion_point(field_get:gateway_proto.CreateRoleResponse.msg)
  return msg_.GetNoArena();
}
void CreateRoleResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gateway_proto.CreateRoleResponse.msg)
}
#if LANG_CXX11
void CreateRoleResponse::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gateway_proto.CreateRoleResponse.msg)
}
#endif
void CreateRoleResponse::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gateway_proto.CreateRoleResponse.msg)
}
void CreateRoleResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gateway_proto.CreateRoleResponse.msg)
}
::std::string* CreateRoleResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:gateway_proto.CreateRoleResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoleResponse::release_msg() {
  // @@protoc_insertion_point(field_release:gateway_proto.CreateRoleResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoleResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:gateway_proto.CreateRoleResponse.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gateway_proto

// @@protoc_insertion_point(global_scope)
